apiVersion: v1
items:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      build: caddy-app
      template: caddy-template
    name: caddy-app
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: caddy-app:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: /utils/caddy-proxy
      git:
        uri: https://github.com/BCDevOps/openshift-tools.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: bcgov-s2i-caddy:latest
          namespace: openshift
      type: Source
    triggers:
    - github:
        secret: dLUFqHx4HXi80yTFi5rEaEfbcaoFLtLxsPF5nFJe
      type: GitHub
    - generic:
        secret: KmbAl3HF5ttakkEvGyV20RXwrXge1XhuSQbQPdch
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      description: Defines how to build the application
      template.alpha.openshift.io/wait-for-ready: "true"
    creationTimestamp: null
    labels:
      app: httpd-example
      template: httpd-example
    name: httpd-example
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: httpd-example:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: https://github.com/openshift/httpd-ex.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: httpd:2.4
          namespace: openshift
      type: Source
    triggers:
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
    - github:
        secret: QGlVew4PirMQGb2ofJnnTDGMpx0evfMpAhv4u3bI
      type: GitHub
    - generic:
        secret: c7mtYoHBAQhqNaXWeA4PIe4Q11aGdvO00d1TQSAG
      type: Generic
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: request-logger
    name: request-logger
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: request-logger:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: /utils/request_logger
      git:
        ref: master
        uri: https://github.com/bcdevops/openshift-tools/
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: python:3.5
          namespace: openshift
      type: Source
    triggers:
    - generic:
        secret: d8ba7ff148c0970c
      type: Generic
    - github:
        secret: e27a392996821e2d
      type: GitHub
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: Build
  metadata:
    annotations:
      openshift.io/build-config.name: caddy-app
      openshift.io/build.number: "1"
    creationTimestamp: null
    labels:
      build: caddy-app
      buildconfig: caddy-app
      openshift.io/build-config.name: caddy-app
      openshift.io/build.start-policy: Serial
      template: caddy-template
    name: caddy-app-1
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: caddy-app
      uid: 4d94fedd-d53b-11e7-9f70-005056832285
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: caddy-app:latest
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      contextDir: /utils/caddy-proxy
      git:
        uri: https://github.com/BCDevOps/openshift-tools.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: DockerImage
          name: 172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:2170a33f396a7d128c361fed5d582896715a751c41d60cbad406a251d730d817
        pullSecret:
          name: builder-dockercfg-hy7p9
      type: Source
    triggeredBy:
    - imageChangeBuild:
        fromRef:
          kind: ImageStreamTag
          name: bcgov-s2i-caddy:latest
          namespace: openshift
        imageID: 172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:2170a33f396a7d128c361fed5d582896715a751c41d60cbad406a251d730d817
      message: Image change
  status:
    cancelled: true
    config:
      name: caddy-app
    message: The build was cancelled by the user.
    output: {}
    phase: New
    reason: CancelledBuild
- apiVersion: v1
  kind: Build
  metadata:
    annotations:
      openshift.io/build-config.name: caddy-app
      openshift.io/build.number: "2"
      openshift.io/build.pod-name: caddy-app-2-build
    creationTimestamp: null
    labels:
      build: caddy-app
      buildconfig: caddy-app
      openshift.io/build-config.name: caddy-app
      openshift.io/build.start-policy: Serial
      template: caddy-template
    name: caddy-app-2
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: caddy-app
      uid: 4d94fedd-d53b-11e7-9f70-005056832285
  spec:
    nodeSelector: null
    output:
      pushSecret:
        name: builder-dockercfg-hy7p9
      to:
        kind: ImageStreamTag
        name: caddy-app:latest
    postCommit: {}
    resources: {}
    revision:
      git:
        author:
          email: shea.phillips@gmail.com
          name: Shea Phillips
        commit: b46c7b25b3bc079eb1fcd497b3e1eb0f0b60285a
        committer:
          email: shea.phillips@gmail.com
          name: Shea Phillips
        message: '- change to json format - add storage class-based quota'
      type: Git
    serviceAccount: builder
    source:
      contextDir: /utils/caddy-proxy
      git:
        uri: https://github.com/BCDevOps/openshift-tools.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: DockerImage
          name: 172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:2170a33f396a7d128c361fed5d582896715a751c41d60cbad406a251d730d817
        pullSecret:
          name: builder-dockercfg-hy7p9
      type: Source
    triggeredBy:
    - message: Manually triggered
  status:
    config:
      name: caddy-app
    output:
      to:
        imageDigest: sha256:7220588395b9149195c2cfec67dda62e7cd37ce1adebcd4a2330905af86f453f
    outputDockerImageReference: 172.50.0.2:5000/mem-tfrs-dev/caddy-app:latest
    phase: New
    stages:
    - durationMilliseconds: 1722
      name: FetchInputs
      startTime: 2017-11-29T19:28:35Z
      steps:
      - durationMilliseconds: 1722
        name: FetchGitSource
        startTime: 2017-11-29T19:28:35Z
    - durationMilliseconds: 702
      name: CommitContainer
      startTime: 2017-11-29T19:28:38Z
      steps:
      - durationMilliseconds: 702
        name: CommitContainer
        startTime: 2017-11-29T19:28:38Z
    - durationMilliseconds: 1965
      name: Assemble
      startTime: 2017-11-29T19:28:37Z
      steps:
      - durationMilliseconds: 1965
        name: AssembleBuildScripts
        startTime: 2017-11-29T19:28:37Z
    - name: PostCommit
      startTime: 2017-11-29T19:28:39Z
      steps:
      - name: RunPostCommitHook
        startTime: 2017-11-29T19:28:39Z
    - durationMilliseconds: 9106
      name: PushImage
      startTime: 2017-11-29T19:28:39Z
      steps:
      - durationMilliseconds: 9106
        name: PushImage
        startTime: 2017-11-29T19:28:39Z
- apiVersion: v1
  kind: Build
  metadata:
    annotations:
      openshift.io/build-config.name: httpd-example
      openshift.io/build.number: "1"
      openshift.io/build.pod-name: httpd-example-1-build
    creationTimestamp: null
    labels:
      app: httpd-example
      buildconfig: httpd-example
      openshift.io/build-config.name: httpd-example
      openshift.io/build.start-policy: Serial
      template: httpd-example
    name: httpd-example-1
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: httpd-example
      uid: fa528482-1369-11e8-844f-005056832285
  spec:
    nodeSelector: null
    output:
      pushSecret:
        name: builder-dockercfg-hy7p9
      to:
        kind: ImageStreamTag
        name: httpd-example:latest
    postCommit: {}
    resources: {}
    revision:
      git:
        author:
          email: bparees@users.noreply.github.com
          name: Ben Parees
        commit: dc2fa54733a38f50c2a44f467068db6995a4d6e4
        committer:
          email: noreply@github.com
          name: GitHub
        message: 'Merge pull request #11 from jim-minter/duplicate-keys'
      type: Git
    serviceAccount: builder
    source:
      git:
        uri: https://github.com/openshift/httpd-ex.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: DockerImage
          name: registry.access.redhat.com/rhscl/httpd-24-rhel7@sha256:78ade00d2ab3f3d35f41a02b3f251342333367beecc7ca84d73a021e9901c192
      type: Source
    triggeredBy:
    - imageChangeBuild:
        fromRef:
          kind: ImageStreamTag
          name: httpd:2.4
          namespace: openshift
        imageID: registry.access.redhat.com/rhscl/httpd-24-rhel7@sha256:78ade00d2ab3f3d35f41a02b3f251342333367beecc7ca84d73a021e9901c192
      message: Image change
  status:
    config:
      name: httpd-example
    output:
      to:
        imageDigest: sha256:00f92d88868c0281fe2b06563b639d6bd1b58d3d7d3100793ecde2dbdee0d441
    outputDockerImageReference: 172.50.0.2:5000/mem-tfrs-dev/httpd-example:latest
    phase: New
    stages:
    - durationMilliseconds: 1468
      name: FetchInputs
      startTime: 2018-02-16T22:37:39Z
      steps:
      - durationMilliseconds: 1468
        name: FetchGitSource
        startTime: 2018-02-16T22:37:39Z
    - durationMilliseconds: 2927
      name: CommitContainer
      startTime: 2018-02-16T22:37:49Z
      steps:
      - durationMilliseconds: 2927
        name: CommitContainer
        startTime: 2018-02-16T22:37:49Z
    - durationMilliseconds: 4392
      name: Assemble
      startTime: 2018-02-16T22:37:47Z
      steps:
      - durationMilliseconds: 4392
        name: AssembleBuildScripts
        startTime: 2018-02-16T22:37:47Z
    - name: PostCommit
      startTime: 2018-02-16T22:37:52Z
      steps:
      - name: RunPostCommitHook
        startTime: 2018-02-16T22:37:52Z
    - durationMilliseconds: 4296
      name: PushImage
      startTime: 2018-02-16T22:37:52Z
      steps:
      - durationMilliseconds: 4296
        name: PushImage
        startTime: 2018-02-16T22:37:52Z
- apiVersion: v1
  kind: Build
  metadata:
    annotations:
      openshift.io/build-config.name: httpd-example
      openshift.io/build.number: "2"
      openshift.io/build.pod-name: httpd-example-2-build
    creationTimestamp: null
    labels:
      app: httpd-example
      buildconfig: httpd-example
      openshift.io/build-config.name: httpd-example
      openshift.io/build.start-policy: Serial
      template: httpd-example
    name: httpd-example-2
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: httpd-example
      uid: fa528482-1369-11e8-844f-005056832285
  spec:
    nodeSelector: null
    output:
      pushSecret:
        name: builder-dockercfg-hy7p9
      to:
        kind: ImageStreamTag
        name: httpd-example:latest
    postCommit: {}
    resources: {}
    revision:
      git:
        author:
          email: bparees@users.noreply.github.com
          name: Ben Parees
        commit: dc2fa54733a38f50c2a44f467068db6995a4d6e4
        committer:
          email: noreply@github.com
          name: GitHub
        message: 'Merge pull request #11 from jim-minter/duplicate-keys'
      type: Git
    serviceAccount: builder
    source:
      git:
        uri: https://github.com/openshift/httpd-ex.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: DockerImage
          name: registry.access.redhat.com/rhscl/httpd-24-rhel7@sha256:1c61a7bd7e30d3c1986fd131d1bf1a59f7f9a131b1042803457344219142e4f5
      type: Source
    triggeredBy:
    - imageChangeBuild:
        fromRef:
          kind: ImageStreamTag
          name: httpd:2.4
          namespace: openshift
        imageID: registry.access.redhat.com/rhscl/httpd-24-rhel7@sha256:1c61a7bd7e30d3c1986fd131d1bf1a59f7f9a131b1042803457344219142e4f5
      message: Image change
  status:
    config:
      name: httpd-example
    output:
      to:
        imageDigest: sha256:adfd91fa3cf3291bc99ed841c232e7eb7069fa0feb9436906ec1471a0f8cc6f3
    outputDockerImageReference: 172.50.0.2:5000/mem-tfrs-dev/httpd-example:latest
    phase: New
    stages:
    - durationMilliseconds: 1136
      name: FetchInputs
      startTime: 2018-02-27T23:08:16Z
      steps:
      - durationMilliseconds: 1136
        name: FetchGitSource
        startTime: 2018-02-27T23:08:16Z
    - durationMilliseconds: 44336
      name: CommitContainer
      startTime: 2018-02-27T23:10:08Z
      steps:
      - durationMilliseconds: 44336
        name: CommitContainer
        startTime: 2018-02-27T23:10:08Z
    - durationMilliseconds: 47799
      name: Assemble
      startTime: 2018-02-27T23:10:04Z
      steps:
      - durationMilliseconds: 47799
        name: AssembleBuildScripts
        startTime: 2018-02-27T23:10:04Z
    - durationMilliseconds: 79081
      name: PushImage
      startTime: 2018-02-27T23:10:52Z
      steps:
      - durationMilliseconds: 79081
        name: PushImage
        startTime: 2018-02-27T23:10:52Z
- apiVersion: v1
  kind: Build
  metadata:
    annotations:
      openshift.io/build-config.name: request-logger
      openshift.io/build.number: "1"
      openshift.io/build.pod-name: request-logger-1-build
    creationTimestamp: null
    labels:
      app: request-logger
      buildconfig: request-logger
      openshift.io/build-config.name: request-logger
      openshift.io/build.start-policy: Serial
    name: request-logger-1
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: request-logger
      uid: 654b6efb-d53e-11e7-9f70-005056832285
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: request-logger:latest
    postCommit: {}
    resources: {}
    revision:
      git:
        author:
          email: shea.phillips@gmail.com
          name: Shea Phillips
        commit: b46c7b25b3bc079eb1fcd497b3e1eb0f0b60285a
        committer:
          email: shea.phillips@gmail.com
          name: Shea Phillips
        message: '- change to json format - add storage class-based quota'
      type: Git
    serviceAccount: builder
    source:
      contextDir: /utils/request_logger
      git:
        ref: master
        uri: https://github.com/bcdevops/openshift-tools/
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: DockerImage
          name: registry.access.redhat.com/rhscl/python-35-rhel7@sha256:873ab7c799c5da39fb76e27e93f6420a5ab72e73c3daa8bcbc4d198dca53e379
      type: Source
    triggeredBy:
    - imageChangeBuild:
        fromRef:
          kind: ImageStreamTag
          name: python:3.5
          namespace: openshift
        imageID: registry.access.redhat.com/rhscl/python-35-rhel7@sha256:873ab7c799c5da39fb76e27e93f6420a5ab72e73c3daa8bcbc4d198dca53e379
      message: Image change
  status:
    config:
      name: request-logger
    logSnippet: 'Error on reading termination message from logs: failed to ...f70-005056832285/sti-build_0.log:
      no such file or directory'
    message: Failed to push the image to the registry.
    output: {}
    outputDockerImageReference: 172.50.0.2:5000/mem-tfrs-dev/request-logger:latest
    phase: New
    reason: PushImageToRegistryFailed
    stages:
    - durationMilliseconds: 1505
      name: FetchInputs
      startTime: 2017-11-29T19:50:48Z
      steps:
      - durationMilliseconds: 1505
        name: FetchGitSource
        startTime: 2017-11-29T19:50:48Z
    - durationMilliseconds: 5508
      name: CommitContainer
      startTime: 2017-11-29T19:51:00Z
      steps:
      - durationMilliseconds: 5508
        name: CommitContainer
        startTime: 2017-11-29T19:51:00Z
    - durationMilliseconds: 15396
      name: Assemble
      startTime: 2017-11-29T19:50:50Z
      steps:
      - durationMilliseconds: 15396
        name: AssembleBuildScripts
        startTime: 2017-11-29T19:50:50Z
    - name: PostCommit
      startTime: 2017-11-29T19:51:06Z
      steps:
      - name: RunPostCommitHook
        startTime: 2017-11-29T19:51:06Z
    - durationMilliseconds: 1016
      name: PushImage
      startTime: 2017-11-29T19:51:06Z
      steps:
      - durationMilliseconds: 1016
        name: PushImage
        startTime: 2017-11-29T19:51:06Z
- apiVersion: v1
  kind: Build
  metadata:
    annotations:
      openshift.io/build-config.name: request-logger
      openshift.io/build.number: "2"
      openshift.io/build.pod-name: request-logger-2-build
    creationTimestamp: null
    labels:
      app: request-logger
      buildconfig: request-logger
      openshift.io/build-config.name: request-logger
      openshift.io/build.start-policy: Serial
    name: request-logger-2
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: request-logger
      uid: 654b6efb-d53e-11e7-9f70-005056832285
  spec:
    nodeSelector: null
    output:
      pushSecret:
        name: builder-dockercfg-hy7p9
      to:
        kind: ImageStreamTag
        name: request-logger:latest
    postCommit: {}
    resources: {}
    revision:
      git:
        author:
          email: shea.phillips@gmail.com
          name: Shea Phillips
        commit: b46c7b25b3bc079eb1fcd497b3e1eb0f0b60285a
        committer:
          email: shea.phillips@gmail.com
          name: Shea Phillips
        message: '- change to json format - add storage class-based quota'
      type: Git
    serviceAccount: builder
    source:
      contextDir: /utils/request_logger
      git:
        ref: master
        uri: https://github.com/bcdevops/openshift-tools/
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: DockerImage
          name: registry.access.redhat.com/rhscl/python-35-rhel7@sha256:873ab7c799c5da39fb76e27e93f6420a5ab72e73c3daa8bcbc4d198dca53e379
      type: Source
    triggeredBy:
    - message: Manually triggered
  status:
    config:
      name: request-logger
    output:
      to:
        imageDigest: sha256:6a09a8baa58acd905518d5ff502f01d00c32ebead94853b2202db39991b0ccc3
    outputDockerImageReference: 172.50.0.2:5000/mem-tfrs-dev/request-logger:latest
    phase: New
    stages:
    - durationMilliseconds: 1288
      name: FetchInputs
      startTime: 2017-11-29T19:51:21Z
      steps:
      - durationMilliseconds: 1288
        name: FetchGitSource
        startTime: 2017-11-29T19:51:21Z
    - durationMilliseconds: 4813
      name: CommitContainer
      startTime: 2017-11-29T19:51:27Z
      steps:
      - durationMilliseconds: 4813
        name: CommitContainer
        startTime: 2017-11-29T19:51:27Z
    - durationMilliseconds: 8924
      name: Assemble
      startTime: 2017-11-29T19:51:23Z
      steps:
      - durationMilliseconds: 8924
        name: AssembleBuildScripts
        startTime: 2017-11-29T19:51:23Z
    - name: PostCommit
      startTime: 2017-11-29T19:51:32Z
      steps:
      - name: RunPostCommitHook
        startTime: 2017-11-29T19:51:32Z
    - durationMilliseconds: 26277
      name: PushImage
      startTime: 2017-11-29T19:51:32Z
      steps:
      - durationMilliseconds: 26277
        name: PushImage
        startTime: 2017-11-29T19:51:32Z
- apiVersion: v1
  kind: Build
  metadata:
    annotations:
      openshift.io/build-config.name: request-logger
      openshift.io/build.number: "3"
      openshift.io/build.pod-name: request-logger-3-build
    creationTimestamp: null
    labels:
      app: request-logger
      buildconfig: request-logger
      openshift.io/build-config.name: request-logger
      openshift.io/build.start-policy: Serial
    name: request-logger-3
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: request-logger
      uid: 654b6efb-d53e-11e7-9f70-005056832285
  spec:
    nodeSelector: null
    output:
      pushSecret:
        name: builder-dockercfg-hy7p9
      to:
        kind: ImageStreamTag
        name: request-logger:latest
    postCommit: {}
    resources: {}
    revision:
      git:
        author:
          email: steven.barre@dxcas.com
          name: Steven Barre
        commit: 08e595837031dd35528ba68c5a29fcfb37201abe
        committer:
          email: steven.barre@dxcas.com
          name: Steven Barre
        message: Adding storage group to rolling-reboot
      type: Git
    serviceAccount: builder
    source:
      contextDir: /utils/request_logger
      git:
        ref: master
        uri: https://github.com/bcdevops/openshift-tools/
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: DockerImage
          name: registry.access.redhat.com/rhscl/python-35-rhel7@sha256:27ce32b0855dea7b078048064b72e1554069ec737ef3398fa740cc72ec82ddb9
      type: Source
    triggeredBy:
    - imageChangeBuild:
        fromRef:
          kind: ImageStreamTag
          name: python:3.5
          namespace: openshift
        imageID: registry.access.redhat.com/rhscl/python-35-rhel7@sha256:27ce32b0855dea7b078048064b72e1554069ec737ef3398fa740cc72ec82ddb9
      message: Image change
  status:
    config:
      name: request-logger
    output:
      to:
        imageDigest: sha256:a6226da1c2150ea1079ee99c562588be59141547159365e72c8c0d1f8d69110e
    outputDockerImageReference: 172.50.0.2:5000/mem-tfrs-dev/request-logger:latest
    phase: New
    stages:
    - durationMilliseconds: 1637
      name: FetchInputs
      startTime: 2018-02-27T23:11:12Z
      steps:
      - durationMilliseconds: 1637
        name: FetchGitSource
        startTime: 2018-02-27T23:11:12Z
    - durationMilliseconds: 5590
      name: CommitContainer
      startTime: 2018-02-27T23:11:49Z
      steps:
      - durationMilliseconds: 5590
        name: CommitContainer
        startTime: 2018-02-27T23:11:49Z
    - durationMilliseconds: 12626
      name: Assemble
      startTime: 2018-02-27T23:11:42Z
      steps:
      - durationMilliseconds: 12626
        name: AssembleBuildScripts
        startTime: 2018-02-27T23:11:42Z
    - durationMilliseconds: 27853
      name: PushImage
      startTime: 2018-02-27T23:11:55Z
      steps:
      - durationMilliseconds: 27853
        name: PushImage
        startTime: 2018-02-27T23:11:55Z
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    generation: 1
    name: caddy-app
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: 172.50.0.2:5000/mem-tfrs-dev/caddy-app:latest
      generation: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      description: Keeps track of changes in the application image
    creationTimestamp: null
    generation: 1
    labels:
      app: httpd-example
      template: httpd-example
    name: httpd-example
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: 172.50.0.2:5000/mem-tfrs-dev/httpd-example:latest
      generation: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    generation: 1
    name: request-logger
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: 172.50.0.2:5000/mem-tfrs-dev/request-logger:latest
      generation: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: caddy-app
      template: caddy-template
    name: caddy-app
  spec:
    replicas: 0
    selector:
      app: caddy-app
      deploymentconfig: caddy-app
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/container.pathfinder.image.entrypoint: '["/sbin/tini","caddy","-quic","--conf","/etc/Caddyfile"]'
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: caddy-app
          deploymentconfig: caddy-app
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:7220588395b9149195c2cfec67dda62e7cd37ce1adebcd4a2330905af86f453f
          imagePullPolicy: Always
          name: caddy-app
          ports:
          - containerPort: 2015
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc
            name: caddyfile-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: caddyfile
              path: Caddyfile
            name: caddyfile
          name: caddyfile-volume
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - caddy-app
        from:
          kind: ImageStreamTag
          name: caddy-app:latest
          namespace: mem-tfrs-dev
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the application server
    creationTimestamp: null
    generation: 1
    labels:
      template: tfrs-app-environment
    name: client
  spec:
    replicas: 1
    selector:
      name: client
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: client
        name: client
      spec:
        containers:
        - env:
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:bc1d33a5fc5041c14a897bd2a58fa09969db686f400c2c425ea43a2bc3653842
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - client
        from:
          kind: ImageStreamTag
          name: client-develop:dev
          namespace: mem-tfrs-tools
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the application server
      template.alpha.openshift.io/wait-for-ready: "true"
    creationTimestamp: null
    generation: 1
    labels:
      app: httpd-example
      template: httpd-example
    name: httpd-example
  spec:
    replicas: 0
    selector:
      name: httpd-example
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: httpd-example
        name: httpd-example
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-dev/httpd-example@sha256:adfd91fa3cf3291bc99ed841c232e7eb7069fa0feb9436906ec1471a0f8cc6f3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: httpd-example
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data-old
            name: volume-ds536
          - mountPath: /data-new
            name: volume-te11a
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: volume-ds536
          persistentVolumeClaim:
            claimName: postgresql-cns
        - name: volume-te11a
          persistentVolumeClaim:
            claimName: postgresql-bypass-cns
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - httpd-example
        from:
          kind: ImageStreamTag
          name: httpd-example:latest
          namespace: mem-tfrs-dev
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      template: postgresql-persistent-template
    name: postgresql
  spec:
    replicas: 1
    selector:
      name: postgresql
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2Gi
            requests:
              cpu: 500m
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
          - mountPath: /postgresql-backup
            name: volume-r83io
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-cns
        - name: volume-r83io
          persistentVolumeClaim:
            claimName: postgresql-backup-cns
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:9.5
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      template: postgresql-persistent-template
    name: postgresql-bypass
  spec:
    replicas: 1
    selector:
      name: postgresql-bypass
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: postgresql-bypass
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql-bypass
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data-bypass
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data-bypass
          persistentVolumeClaim:
            claimName: postgresql-bypass-cns
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql-bypass
        from:
          kind: ImageStreamTag
          name: postgresql:9.5
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      template: postgresql-persistent-template
    name: postgresql-standby
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: postgresql-standby
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: postgresql-standby
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql-standby
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data-standby
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data-standby
          persistentVolumeClaim:
            claimName: postgresql-standby-cns
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql-standby
        from:
          kind: ImageStreamTag
          name: postgresql:9.5
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 1
    labels:
      app: request-logger
    name: request-logger
  spec:
    replicas: 0
    selector:
      deploymentconfig: request-logger
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: request-logger
          deploymentconfig: request-logger
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:a6226da1c2150ea1079ee99c562588be59141547159365e72c8c0d1f8d69110e
          imagePullPolicy: Always
          name: request-logger
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/app-root/src
            name: volume-8g9sa
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: reques_logger.py
              path: request_logger.py
            name: reques-logger
          name: volume-8g9sa
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - request-logger
        from:
          kind: ImageStreamTag
          name: request-logger:latest
          namespace: mem-tfrs-dev
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the container.
    creationTimestamp: null
    generation: 1
    name: schema-spy
  spec:
    replicas: 1
    selector:
      name: schema-spy
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: schema-spy
        name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - schema-spy
        from:
          kind: ImageStreamTag
          name: schema-spy:latest
          namespace: mem-tfrs-tools
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the application server
    creationTimestamp: null
    generation: 1
    labels:
      template: tfrs-app-environment
    name: tfrs
  spec:
    replicas: 1
    selector:
      name: tfrs
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        mid:
          execNewPod:
            command:
            - /bin/sh
            - -c
            - python manage.py migrate
            containerName: tfrs-app
          failurePolicy: Abort
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: tfrs
        name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:7796028de7c24ac8b151b72520579b86535107488f763a4ca702cf7b5f16c844
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - tfrs-app
        from:
          kind: ImageStreamTag
          name: tfrs-develop:dev
          namespace: mem-tfrs-tools
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the application server
    creationTimestamp: null
    generation: 1
    labels:
      template: tfrs-app-environment
    name: tfrs-bypass
  spec:
    replicas: 1
    selector:
      name: tfrs-bypass
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        mid:
          execNewPod:
            command:
            - /bin/sh
            - -c
            - python manage.py migrate
            containerName: tfrs-bypass-app
          failurePolicy: Abort
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: tfrs-bypass
        name: tfrs-bypass
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql-bypass
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: BYPASS_HEADER_AUTHENTICATION
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:9a3f7138e27abdd286ed7dfb38260914991cb8ef747e3a45a4df38e5992d961e
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-bypass-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - tfrs-bypass-app
        from:
          kind: ImageStreamTag
          name: tfrs-bypass:dev
          namespace: mem-tfrs-tools
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/desired-replicas: "1"
      openshift.io/deployer-pod.name: caddy-app-1-deploy
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: caddy-app
      openshift.io/deployment.cancelled: "true"
      openshift.io/deployment.phase: Failed
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: newer deployment was found running
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"caddy-app","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/caddy-app","uid":"e7332439-d53d-11e7-9f70-005056832285","resourceVersion":"276077289","generation":2,"creationTimestamp":"2017-11-29T19:45:50Z","labels":{"app":"caddy-app","template":"caddy-template"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ConfigChange"},{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["caddy-app"],"from":{"kind":"ImageStreamTag","namespace":"devops-sandbox-dev","name":"caddy-app:latest"},"lastTriggeredImage":"172.50.0.2:5000/devops-sandbox-dev/caddy-app@sha256:18fd4a39981dfacbf469064f7d1831a649fe54729dc4d0b2ac6392e29a788c0b"}}],"replicas":1,"test":false,"selector":{"app":"caddy-app","deploymentconfig":"caddy-app"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"caddy-app","deploymentconfig":"caddy-app"},"annotations":{"openshift.io/container.pathfinder.image.entrypoint":"[\"/sbin/tini\",\"caddy\",\"-quic\",\"--conf\",\"/etc/Caddyfile\"]","openshift.io/generated-by":"OpenShiftNewApp"}},"spec":{"volumes":[{"name":"caddyfile-volume","configMap":{"name":"caddyfile","items":[{"key":"caddyfile","path":"Caddyfile"}],"defaultMode":420}}],"containers":[{"name":"caddy-app","image":"172.50.0.2:5000/devops-sandbox-dev/caddy-app@sha256:18fd4a39981dfacbf469064f7d1831a649fe54729dc4d0b2ac6392e29a788c0b","ports":[{"containerPort":2015,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"caddyfile-volume","mountPath":"/etc"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":1,"observedGeneration":1,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"devops-sandbox-dev","name":"caddy-app:latest"}}}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2017-11-29T19:45:50Z","lastTransitionTime":"2017-11-29T19:45:50Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: caddy-app
      openshift.io/deployment-config.name: caddy-app
      template: caddy-template
    name: caddy-app-1
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: caddy-app
      uid: e7332439-d53d-11e7-9f70-005056832285
  spec:
    replicas: 0
    selector:
      app: caddy-app
      deployment: caddy-app-1
      deploymentconfig: caddy-app
    template:
      metadata:
        annotations:
          openshift.io/container.pathfinder.image.entrypoint: '["/sbin/tini","caddy","-quic","--conf","/etc/Caddyfile"]'
          openshift.io/deployment-config.latest-version: "1"
          openshift.io/deployment-config.name: caddy-app
          openshift.io/deployment.name: caddy-app-1
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: caddy-app
          deployment: caddy-app-1
          deploymentconfig: caddy-app
      spec:
        containers:
        - image: 172.50.0.2:5000/devops-sandbox-dev/caddy-app@sha256:18fd4a39981dfacbf469064f7d1831a649fe54729dc4d0b2ac6392e29a788c0b
          imagePullPolicy: Always
          name: caddy-app
          ports:
          - containerPort: 2015
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc
            name: caddyfile-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: caddyfile
              path: Caddyfile
            name: caddyfile
          name: caddyfile-volume
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.name: caddy-app-2-deploy
      openshift.io/deployment-config.latest-version: "2"
      openshift.io/deployment-config.name: caddy-app
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"caddy-app","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/caddy-app","uid":"e7332439-d53d-11e7-9f70-005056832285","resourceVersion":"276078749","generation":5,"creationTimestamp":"2017-11-29T19:45:50Z","labels":{"app":"caddy-app","template":"caddy-template"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["caddy-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-dev","name":"caddy-app:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:7220588395b9149195c2cfec67dda62e7cd37ce1adebcd4a2330905af86f453f"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"app":"caddy-app","deploymentconfig":"caddy-app"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"caddy-app","deploymentconfig":"caddy-app"},"annotations":{"openshift.io/container.pathfinder.image.entrypoint":"[\"/sbin/tini\",\"caddy\",\"-quic\",\"--conf\",\"/etc/Caddyfile\"]","openshift.io/generated-by":"OpenShiftNewApp"}},"spec":{"volumes":[{"name":"caddyfile-volume","configMap":{"name":"caddyfile","items":[{"key":"caddyfile","path":"Caddyfile"}],"defaultMode":420}}],"containers":[{"name":"caddy-app","image":"172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:7220588395b9149195c2cfec67dda62e7cd37ce1adebcd4a2330905af86f453f","ports":[{"containerPort":2015,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"caddyfile-volume","mountPath":"/etc"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":2,"observedGeneration":4,"replicas":1,"updatedReplicas":1,"availableReplicas":0,"unavailableReplicas":1,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-dev","name":"caddy-app:latest"}}}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2017-11-29T19:45:50Z","lastTransitionTime":"2017-11-29T19:45:50Z","message":"Deployment config does not have minimum availability."},{"type":"Progressing","status":"Unknown","lastUpdateTime":"2017-11-29T19:45:50Z","lastTransitionTime":"2017-11-29T19:45:50Z","message":"replication controller \"caddy-app-1\" is waiting for pod \"caddy-app-1-deploy\" to run"}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: caddy-app
      openshift.io/deployment-config.name: caddy-app
      template: caddy-template
    name: caddy-app-2
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: caddy-app
      uid: e7332439-d53d-11e7-9f70-005056832285
  spec:
    replicas: 0
    selector:
      app: caddy-app
      deployment: caddy-app-2
      deploymentconfig: caddy-app
    template:
      metadata:
        annotations:
          openshift.io/container.pathfinder.image.entrypoint: '["/sbin/tini","caddy","-quic","--conf","/etc/Caddyfile"]'
          openshift.io/deployment-config.latest-version: "2"
          openshift.io/deployment-config.name: caddy-app
          openshift.io/deployment.name: caddy-app-2
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: caddy-app
          deployment: caddy-app-2
          deploymentconfig: caddy-app
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:7220588395b9149195c2cfec67dda62e7cd37ce1adebcd4a2330905af86f453f
          imagePullPolicy: Always
          name: caddy-app
          ports:
          - containerPort: 2015
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc
            name: caddyfile-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: caddyfile
              path: Caddyfile
            name: caddyfile
          name: caddyfile-volume
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.name: caddy-app-3-deploy
      openshift.io/deployment-config.latest-version: "3"
      openshift.io/deployment-config.name: caddy-app
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: manual change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"caddy-app","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/caddy-app","uid":"e7332439-d53d-11e7-9f70-005056832285","resourceVersion":"276082556","generation":6,"creationTimestamp":"2017-11-29T19:45:50Z","labels":{"app":"caddy-app","template":"caddy-template"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["caddy-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-dev","name":"caddy-app:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:7220588395b9149195c2cfec67dda62e7cd37ce1adebcd4a2330905af86f453f"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"app":"caddy-app","deploymentconfig":"caddy-app"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"caddy-app","deploymentconfig":"caddy-app"},"annotations":{"openshift.io/container.pathfinder.image.entrypoint":"[\"/sbin/tini\",\"caddy\",\"-quic\",\"--conf\",\"/etc/Caddyfile\"]","openshift.io/generated-by":"OpenShiftNewApp"}},"spec":{"volumes":[{"name":"caddyfile-volume","configMap":{"name":"caddyfile","items":[{"key":"caddyfile","path":"Caddyfile"}],"defaultMode":420}}],"containers":[{"name":"caddy-app","image":"172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:7220588395b9149195c2cfec67dda62e7cd37ce1adebcd4a2330905af86f453f","ports":[{"containerPort":2015,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"caddyfile-volume","mountPath":"/etc"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":3,"observedGeneration":5,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"manual change","causes":[{"type":"Manual"}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2017-11-29T19:48:36Z","lastTransitionTime":"2017-11-29T19:48:36Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2017-11-29T19:48:36Z","lastTransitionTime":"2017-11-29T19:48:31Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"caddy-app-2\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      app: caddy-app
      openshift.io/deployment-config.name: caddy-app
      template: caddy-template
    name: caddy-app-3
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: caddy-app
      uid: e7332439-d53d-11e7-9f70-005056832285
  spec:
    replicas: 0
    selector:
      app: caddy-app
      deployment: caddy-app-3
      deploymentconfig: caddy-app
    template:
      metadata:
        annotations:
          openshift.io/container.pathfinder.image.entrypoint: '["/sbin/tini","caddy","-quic","--conf","/etc/Caddyfile"]'
          openshift.io/deployment-config.latest-version: "3"
          openshift.io/deployment-config.name: caddy-app
          openshift.io/deployment.name: caddy-app-3
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: caddy-app
          deployment: caddy-app-3
          deploymentconfig: caddy-app
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:7220588395b9149195c2cfec67dda62e7cd37ce1adebcd4a2330905af86f453f
          imagePullPolicy: Always
          name: caddy-app
          ports:
          - containerPort: 2015
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc
            name: caddyfile-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: caddyfile
              path: Caddyfile
            name: caddyfile
          name: caddyfile-volume
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.name: caddy-app-4-deploy
      openshift.io/deployment-config.latest-version: "4"
      openshift.io/deployment-config.name: caddy-app
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"caddy-app","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/caddy-app","uid":"e7332439-d53d-11e7-9f70-005056832285","resourceVersion":"286173719","generation":8,"creationTimestamp":"2017-11-29T19:45:50Z","labels":{"app":"caddy-app","template":"caddy-template"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["caddy-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-dev","name":"caddy-app:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:7220588395b9149195c2cfec67dda62e7cd37ce1adebcd4a2330905af86f453f"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"app":"caddy-app","deploymentconfig":"caddy-app"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"caddy-app","deploymentconfig":"caddy-app"},"annotations":{"openshift.io/container.pathfinder.image.entrypoint":"[\"/sbin/tini\",\"caddy\",\"-quic\",\"--conf\",\"/etc/Caddyfile\"]","openshift.io/generated-by":"OpenShiftNewApp"}},"spec":{"volumes":[{"name":"caddyfile-volume","configMap":{"name":"caddyfile","items":[{"key":"caddyfile","path":"Caddyfile"}],"defaultMode":420}}],"containers":[{"name":"caddy-app","image":"172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:7220588395b9149195c2cfec67dda62e7cd37ce1adebcd4a2330905af86f453f","ports":[{"containerPort":2015,"protocol":"TCP"}],"resources":{"limits":{"memory":"512Mi"}},"volumeMounts":[{"name":"caddyfile-volume","mountPath":"/etc"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":4,"observedGeneration":7,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2017-11-29T19:54:04Z","lastTransitionTime":"2017-11-29T19:54:01Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"caddy-app-3\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2017-12-05T03:22:18Z","lastTransitionTime":"2017-12-05T03:22:18Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      app: caddy-app
      openshift.io/deployment-config.name: caddy-app
      template: caddy-template
    name: caddy-app-4
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: caddy-app
      uid: e7332439-d53d-11e7-9f70-005056832285
  spec:
    replicas: 0
    selector:
      app: caddy-app
      deployment: caddy-app-4
      deploymentconfig: caddy-app
    template:
      metadata:
        annotations:
          openshift.io/container.pathfinder.image.entrypoint: '["/sbin/tini","caddy","-quic","--conf","/etc/Caddyfile"]'
          openshift.io/deployment-config.latest-version: "4"
          openshift.io/deployment-config.name: caddy-app
          openshift.io/deployment.name: caddy-app-4
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: caddy-app
          deployment: caddy-app-4
          deploymentconfig: caddy-app
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:7220588395b9149195c2cfec67dda62e7cd37ce1adebcd4a2330905af86f453f
          imagePullPolicy: Always
          name: caddy-app
          ports:
          - containerPort: 2015
            protocol: TCP
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc
            name: caddyfile-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: caddyfile
              path: Caddyfile
            name: caddyfile
          name: caddyfile-volume
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: caddy-app-5-deploy
      openshift.io/deployment-config.latest-version: "5"
      openshift.io/deployment-config.name: caddy-app
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"caddy-app","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/caddy-app","uid":"e7332439-d53d-11e7-9f70-005056832285","resourceVersion":"286174620","generation":10,"creationTimestamp":"2017-11-29T19:45:50Z","labels":{"app":"caddy-app","template":"caddy-template"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["caddy-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-dev","name":"caddy-app:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:7220588395b9149195c2cfec67dda62e7cd37ce1adebcd4a2330905af86f453f"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"app":"caddy-app","deploymentconfig":"caddy-app"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"caddy-app","deploymentconfig":"caddy-app"},"annotations":{"openshift.io/container.pathfinder.image.entrypoint":"[\"/sbin/tini\",\"caddy\",\"-quic\",\"--conf\",\"/etc/Caddyfile\"]","openshift.io/generated-by":"OpenShiftNewApp"}},"spec":{"volumes":[{"name":"caddyfile-volume","configMap":{"name":"caddyfile","items":[{"key":"caddyfile","path":"Caddyfile"}],"defaultMode":420}}],"containers":[{"name":"caddy-app","image":"172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:7220588395b9149195c2cfec67dda62e7cd37ce1adebcd4a2330905af86f453f","ports":[{"containerPort":2015,"protocol":"TCP"}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"volumeMounts":[{"name":"caddyfile-volume","mountPath":"/etc"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":5,"observedGeneration":9,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2017-12-05T03:22:18Z","lastTransitionTime":"2017-12-05T03:22:18Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2017-12-13T00:02:36Z","lastTransitionTime":"2017-12-13T00:02:34Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"caddy-app-4\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      app: caddy-app
      openshift.io/deployment-config.name: caddy-app
      template: caddy-template
    name: caddy-app-5
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: caddy-app
      uid: e7332439-d53d-11e7-9f70-005056832285
  spec:
    replicas: 0
    selector:
      app: caddy-app
      deployment: caddy-app-5
      deploymentconfig: caddy-app
    template:
      metadata:
        annotations:
          openshift.io/container.pathfinder.image.entrypoint: '["/sbin/tini","caddy","-quic","--conf","/etc/Caddyfile"]'
          openshift.io/deployment-config.latest-version: "5"
          openshift.io/deployment-config.name: caddy-app
          openshift.io/deployment.name: caddy-app-5
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: caddy-app
          deployment: caddy-app-5
          deploymentconfig: caddy-app
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:7220588395b9149195c2cfec67dda62e7cd37ce1adebcd4a2330905af86f453f
          imagePullPolicy: Always
          name: caddy-app
          ports:
          - containerPort: 2015
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc
            name: caddyfile-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: caddyfile
              path: Caddyfile
            name: caddyfile
          name: caddyfile-volume
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/desired-replicas: "1"
      kubectl.kubernetes.io/update-source-id: client-167:ae3932ac-e1d7-11e7-9b28-0050568379a2
      openshift.io/deployer-pod.name: client-168-deploy
      openshift.io/deployment-config.latest-version: "168"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Failed
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/client","uid":"ff67acf7-77c2-11e7-af69-0050568348cc","resourceVersion":"288561965","generation":253,"creationTimestamp":"2017-08-02T20:41:45Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:c7437f44a719763f3ae0a223d0aee9b1828d3ceeef29fc4ca19972496e2e4b05"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:c7437f44a719763f3ae0a223d0aee9b1828d3ceeef29fc4ca19972496e2e4b05","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":168,"observedGeneration":252,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:dev"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2017-12-12T19:37:54Z","lastTransitionTime":"2017-12-12T19:37:54Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2017-12-15T20:37:19Z","lastTransitionTime":"2017-12-15T20:37:17Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-167\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
      template: tfrs-app-environment
    name: client-168
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: ff67acf7-77c2-11e7-af69-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: client-168
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "168"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-168
        creationTimestamp: null
        labels:
          deployment: client-168
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client@sha256:c7437f44a719763f3ae0a223d0aee9b1828d3ceeef29fc4ca19972496e2e4b05
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: client-275-deploy
      openshift.io/deployment-config.latest-version: "275"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/client","uid":"ff67acf7-77c2-11e7-af69-0050568348cc","resourceVersion":"342439060","generation":472,"creationTimestamp":"2017-08-02T20:41:45Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:f5093210f1d8ce80aeefd2e6892419a58676039e4b902ba25325e9df384323db"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:f5093210f1d8ce80aeefd2e6892419a58676039e4b902ba25325e9df384323db","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":275,"observedGeneration":471,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client-develop:dev"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-02-15T07:24:13Z","lastTransitionTime":"2018-02-15T07:24:13Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-15T07:24:15Z","lastTransitionTime":"2018-02-15T07:23:53Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-274\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
      template: tfrs-app-environment
    name: client-275
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: ff67acf7-77c2-11e7-af69-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: client-275
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "275"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-275
        creationTimestamp: null
        labels:
          deployment: client-275
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:f5093210f1d8ce80aeefd2e6892419a58676039e4b902ba25325e9df384323db
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: client-276-deploy
      openshift.io/deployment-config.latest-version: "276"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/client","uid":"ff67acf7-77c2-11e7-af69-0050568348cc","resourceVersion":"343207461","generation":474,"creationTimestamp":"2017-08-02T20:41:45Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:0c686d076728792db1e910140cab3a204081c3bd414bf52febfa71171235af54"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:0c686d076728792db1e910140cab3a204081c3bd414bf52febfa71171235af54","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":276,"observedGeneration":473,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client-develop:dev"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-02-16T00:43:07Z","lastTransitionTime":"2018-02-16T00:43:07Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-16T00:43:09Z","lastTransitionTime":"2018-02-16T00:42:47Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-275\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
      template: tfrs-app-environment
    name: client-276
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: ff67acf7-77c2-11e7-af69-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: client-276
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "276"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-276
        creationTimestamp: null
        labels:
          deployment: client-276
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:0c686d076728792db1e910140cab3a204081c3bd414bf52febfa71171235af54
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: client-277-deploy
      openshift.io/deployment-config.latest-version: "277"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/client","uid":"ff67acf7-77c2-11e7-af69-0050568348cc","resourceVersion":"343236939","generation":476,"creationTimestamp":"2017-08-02T20:41:45Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:24c260aeb19c9a6e500695a48032c0c4fe809d747257ca107f3b9a68b395c530"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:24c260aeb19c9a6e500695a48032c0c4fe809d747257ca107f3b9a68b395c530","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":277,"observedGeneration":475,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client-develop:dev"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-02-16T19:30:31Z","lastTransitionTime":"2018-02-16T19:30:31Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-16T19:30:32Z","lastTransitionTime":"2018-02-16T19:30:11Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-276\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
      template: tfrs-app-environment
    name: client-277
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: ff67acf7-77c2-11e7-af69-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: client-277
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "277"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-277
        creationTimestamp: null
        labels:
          deployment: client-277
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:24c260aeb19c9a6e500695a48032c0c4fe809d747257ca107f3b9a68b395c530
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: client-278-deploy
      openshift.io/deployment-config.latest-version: "278"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/client","uid":"ff67acf7-77c2-11e7-af69-0050568348cc","resourceVersion":"346799731","generation":478,"creationTimestamp":"2017-08-02T20:41:45Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:2a82c1f0ebaacadbb8aa38d0e6b1d98e904f58f1a47be55a80be90b2da163118"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:2a82c1f0ebaacadbb8aa38d0e6b1d98e904f58f1a47be55a80be90b2da163118","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":278,"observedGeneration":477,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client-develop:dev"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-02-16T19:58:27Z","lastTransitionTime":"2018-02-16T19:58:27Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-16T19:58:29Z","lastTransitionTime":"2018-02-16T19:58:07Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-277\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
      template: tfrs-app-environment
    name: client-278
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: ff67acf7-77c2-11e7-af69-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: client-278
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "278"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-278
        creationTimestamp: null
        labels:
          deployment: client-278
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:2a82c1f0ebaacadbb8aa38d0e6b1d98e904f58f1a47be55a80be90b2da163118
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: client-279-deploy
      openshift.io/deployment-config.latest-version: "279"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/client","uid":"ff67acf7-77c2-11e7-af69-0050568348cc","resourceVersion":"354056984","generation":480,"creationTimestamp":"2017-08-02T20:41:45Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:bdd31463e48ad22619b0ea4288e29f41c99e204f425b33d9c57639900c1ddf64"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:bdd31463e48ad22619b0ea4288e29f41c99e204f425b33d9c57639900c1ddf64","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":279,"observedGeneration":479,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client-develop:dev"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-20T23:16:51Z","lastTransitionTime":"2018-02-20T23:16:30Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-278\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-02-26T14:53:15Z","lastTransitionTime":"2018-02-26T14:53:15Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
      template: tfrs-app-environment
    name: client-279
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: ff67acf7-77c2-11e7-af69-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: client-279
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "279"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-279
        creationTimestamp: null
        labels:
          deployment: client-279
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:bdd31463e48ad22619b0ea4288e29f41c99e204f425b33d9c57639900c1ddf64
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-02 10:15:15 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-02 10:14:15 -0800 PST
      openshift.io/deployer-pod.name: client-280-deploy
      openshift.io/deployment-config.latest-version: "280"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/client","uid":"ff67acf7-77c2-11e7-af69-0050568348cc","resourceVersion":"358951606","generation":481,"creationTimestamp":"2017-08-02T20:41:45Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:4078714bd16554077e52c4f6913e4b3b5fb3fbfc383450004956d88076144288"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:4078714bd16554077e52c4f6913e4b3b5fb3fbfc383450004956d88076144288","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":280,"observedGeneration":481,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:4078714bd16554077e52c4f6913e4b3b5fb3fbfc383450004956d88076144288"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-26T19:24:02Z","lastTransitionTime":"2018-02-26T19:23:41Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-279\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-02-27T19:10:09Z","lastTransitionTime":"2018-02-27T19:10:09Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
      template: tfrs-app-environment
    name: client-280
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: ff67acf7-77c2-11e7-af69-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: client-280
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "280"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-280
        creationTimestamp: null
        labels:
          deployment: client-280
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:4078714bd16554077e52c4f6913e4b3b5fb3fbfc383450004956d88076144288
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-02 15:09:34 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-02 15:08:38 -0800 PST
      openshift.io/deployer-pod.name: client-281-deploy
      openshift.io/deployment-config.latest-version: "281"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/client","uid":"ff67acf7-77c2-11e7-af69-0050568348cc","resourceVersion":"359238325","generation":482,"creationTimestamp":"2017-08-02T20:41:45Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:22d47bf01c5e778ad54df2f83c2e6d4b752c2b2018c968ddd3d7b301d8718a7b"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:22d47bf01c5e778ad54df2f83c2e6d4b752c2b2018c968ddd3d7b301d8718a7b","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":281,"observedGeneration":482,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:22d47bf01c5e778ad54df2f83c2e6d4b752c2b2018c968ddd3d7b301d8718a7b"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-03-02T18:15:15Z","lastTransitionTime":"2018-03-02T18:14:54Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-280\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-03-02T20:27:15Z","lastTransitionTime":"2018-03-02T20:27:15Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
      template: tfrs-app-environment
    name: client-281
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: ff67acf7-77c2-11e7-af69-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: client-281
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "281"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-281
        creationTimestamp: null
        labels:
          deployment: client-281
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:22d47bf01c5e778ad54df2f83c2e6d4b752c2b2018c968ddd3d7b301d8718a7b
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-02 16:02:41 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-02 16:01:46 -0800 PST
      openshift.io/deployer-pod.name: client-282-deploy
      openshift.io/deployment-config.latest-version: "282"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/client","uid":"ff67acf7-77c2-11e7-af69-0050568348cc","resourceVersion":"359282398","generation":483,"creationTimestamp":"2017-08-02T20:41:45Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:a590cba61634285899e9875bffc79309d108c3002438eff9d7439e9dce0e3b16"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:a590cba61634285899e9875bffc79309d108c3002438eff9d7439e9dce0e3b16","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":282,"observedGeneration":483,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:a590cba61634285899e9875bffc79309d108c3002438eff9d7439e9dce0e3b16"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-03-02T23:09:34Z","lastTransitionTime":"2018-03-02T23:09:34Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-03-02T23:09:35Z","lastTransitionTime":"2018-03-02T23:09:14Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-281\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
      template: tfrs-app-environment
    name: client-282
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: ff67acf7-77c2-11e7-af69-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: client-282
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "282"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-282
        creationTimestamp: null
        labels:
          deployment: client-282
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:a590cba61634285899e9875bffc79309d108c3002438eff9d7439e9dce0e3b16
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-02 16:45:28 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-02 16:44:32 -0800 PST
      openshift.io/deployer-pod.name: client-283-deploy
      openshift.io/deployment-config.latest-version: "283"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/client","uid":"ff67acf7-77c2-11e7-af69-0050568348cc","resourceVersion":"359319950","generation":484,"creationTimestamp":"2017-08-02T20:41:45Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:a077c1d44afcf9b76e481a884fdb959a22388d4f521644ebb58ae3182a75e753"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:a077c1d44afcf9b76e481a884fdb959a22388d4f521644ebb58ae3182a75e753","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":283,"observedGeneration":484,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:a077c1d44afcf9b76e481a884fdb959a22388d4f521644ebb58ae3182a75e753"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-03-03T00:02:41Z","lastTransitionTime":"2018-03-03T00:02:41Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-03-03T00:02:42Z","lastTransitionTime":"2018-03-03T00:02:21Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-282\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
      template: tfrs-app-environment
    name: client-283
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: ff67acf7-77c2-11e7-af69-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: client-283
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "283"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-283
        creationTimestamp: null
        labels:
          deployment: client-283
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:a077c1d44afcf9b76e481a884fdb959a22388d4f521644ebb58ae3182a75e753
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-02 23:22:56 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-02 23:22:00 -0800 PST
      openshift.io/deployer-pod.name: client-284-deploy
      openshift.io/deployment-config.latest-version: "284"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/client","uid":"ff67acf7-77c2-11e7-af69-0050568348cc","resourceVersion":"359530826","generation":485,"creationTimestamp":"2017-08-02T20:41:45Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:4c91271c4a4dc17d33852c1c401fb4d300656e85c7bc399ecaa6fc6ef31de676"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:4c91271c4a4dc17d33852c1c401fb4d300656e85c7bc399ecaa6fc6ef31de676","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":284,"observedGeneration":485,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:4c91271c4a4dc17d33852c1c401fb4d300656e85c7bc399ecaa6fc6ef31de676"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-03-03T00:45:28Z","lastTransitionTime":"2018-03-03T00:45:28Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-03-03T00:45:29Z","lastTransitionTime":"2018-03-03T00:45:08Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-283\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
      template: tfrs-app-environment
    name: client-284
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: ff67acf7-77c2-11e7-af69-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: client-284
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "284"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-284
        creationTimestamp: null
        labels:
          deployment: client-284
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:4c91271c4a4dc17d33852c1c401fb4d300656e85c7bc399ecaa6fc6ef31de676
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-03 23:21:29 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-03 23:20:25 -0800 PST
      openshift.io/deployer-pod.name: client-285-deploy
      openshift.io/deployment-config.latest-version: "285"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/client","uid":"ff67acf7-77c2-11e7-af69-0050568348cc","resourceVersion":"360137194","generation":486,"creationTimestamp":"2017-08-02T20:41:45Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:33a5fd76a2a5caaa272bacbe3b0766e1163cea31a98323f74a3ba853e16fd7e2"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:33a5fd76a2a5caaa272bacbe3b0766e1163cea31a98323f74a3ba853e16fd7e2","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":285,"observedGeneration":486,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:33a5fd76a2a5caaa272bacbe3b0766e1163cea31a98323f74a3ba853e16fd7e2"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-03-03T07:22:55Z","lastTransitionTime":"2018-03-03T07:22:55Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-03-03T07:22:56Z","lastTransitionTime":"2018-03-03T07:22:35Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-284\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
      template: tfrs-app-environment
    name: client-285
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: ff67acf7-77c2-11e7-af69-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: client-285
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "285"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-285
        creationTimestamp: null
        labels:
          deployment: client-285
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:33a5fd76a2a5caaa272bacbe3b0766e1163cea31a98323f74a3ba853e16fd7e2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-04 23:21:54 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-04 23:20:39 -0800 PST
      openshift.io/deployer-pod.name: client-286-deploy
      openshift.io/deployment-config.latest-version: "286"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/client","uid":"ff67acf7-77c2-11e7-af69-0050568348cc","resourceVersion":"360621267","generation":487,"creationTimestamp":"2017-08-02T20:41:45Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:bc1d33a5fc5041c14a897bd2a58fa09969db686f400c2c425ea43a2bc3653842"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:bc1d33a5fc5041c14a897bd2a58fa09969db686f400c2c425ea43a2bc3653842","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":286,"observedGeneration":487,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:bc1d33a5fc5041c14a897bd2a58fa09969db686f400c2c425ea43a2bc3653842"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-03-04T07:21:29Z","lastTransitionTime":"2018-03-04T07:21:29Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-03-04T07:21:30Z","lastTransitionTime":"2018-03-04T07:21:09Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-285\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
      template: tfrs-app-environment
    name: client-286
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: ff67acf7-77c2-11e7-af69-0050568348cc
  spec:
    replicas: 1
    selector:
      deployment: client-286
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "286"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-286
        creationTimestamp: null
        labels:
          deployment: client-286
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:bc1d33a5fc5041c14a897bd2a58fa09969db686f400c2c425ea43a2bc3653842
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/desired-replicas: "1"
      openshift.io/deployer-pod.name: httpd-example-1-deploy
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: httpd-example
      openshift.io/deployment.cancelled: "true"
      openshift.io/deployment.phase: Failed
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: newer deployment was found running
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"httpd-example","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/httpd-example","uid":"fa4ebfed-1369-11e8-844f-005056832285","resourceVersion":"343411015","generation":2,"creationTimestamp":"2018-02-16T22:37:32Z","labels":{"app":"httpd-example","template":"httpd-example"},"annotations":{"description":"Defines how to deploy the application server","template.alpha.openshift.io/wait-for-ready":"true"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["httpd-example"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-dev","name":"httpd-example:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-dev/httpd-example@sha256:c8e14d463b99166a739cef7ce85c376d85e8d3cf5f303767df22970ac9bf3a57"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"httpd-example"},"template":{"metadata":{"name":"httpd-example","creationTimestamp":null,"labels":{"name":"httpd-example"}},"spec":{"containers":[{"name":"httpd-example","image":"172.50.0.2:5000/mem-tfrs-dev/httpd-example@sha256:c8e14d463b99166a739cef7ce85c376d85e8d3cf5f303767df22970ac9bf3a57","ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":1,"observedGeneration":1,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-dev","name":"httpd-example:latest"}}}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-02-16T22:37:32Z","lastTransitionTime":"2018-02-16T22:37:32Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: httpd-example
      openshift.io/deployment-config.name: httpd-example
      template: httpd-example
    name: httpd-example-1
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: httpd-example
      uid: fa4ebfed-1369-11e8-844f-005056832285
  spec:
    replicas: 0
    selector:
      deployment: httpd-example-1
      deploymentconfig: httpd-example
      name: httpd-example
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "1"
          openshift.io/deployment-config.name: httpd-example
          openshift.io/deployment.name: httpd-example-1
        creationTimestamp: null
        labels:
          deployment: httpd-example-1
          deploymentconfig: httpd-example
          name: httpd-example
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-dev/httpd-example@sha256:c8e14d463b99166a739cef7ce85c376d85e8d3cf5f303767df22970ac9bf3a57
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: httpd-example
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.name: httpd-example-2-deploy
      openshift.io/deployment-config.latest-version: "2"
      openshift.io/deployment-config.name: httpd-example
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"httpd-example","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/httpd-example","uid":"fa4ebfed-1369-11e8-844f-005056832285","resourceVersion":"343411501","generation":4,"creationTimestamp":"2018-02-16T22:37:32Z","labels":{"app":"httpd-example","template":"httpd-example"},"annotations":{"description":"Defines how to deploy the application server","template.alpha.openshift.io/wait-for-ready":"true"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["httpd-example"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-dev","name":"httpd-example:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-dev/httpd-example@sha256:00f92d88868c0281fe2b06563b639d6bd1b58d3d7d3100793ecde2dbdee0d441"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"httpd-example"},"template":{"metadata":{"name":"httpd-example","creationTimestamp":null,"labels":{"name":"httpd-example"}},"spec":{"containers":[{"name":"httpd-example","image":"172.50.0.2:5000/mem-tfrs-dev/httpd-example@sha256:00f92d88868c0281fe2b06563b639d6bd1b58d3d7d3100793ecde2dbdee0d441","ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":2,"observedGeneration":3,"replicas":1,"updatedReplicas":1,"availableReplicas":0,"unavailableReplicas":1,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-dev","name":"httpd-example:latest"}}}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-02-16T22:37:32Z","lastTransitionTime":"2018-02-16T22:37:32Z","message":"Deployment config does not have minimum availability."},{"type":"Progressing","status":"Unknown","lastUpdateTime":"2018-02-16T22:37:33Z","lastTransitionTime":"2018-02-16T22:37:33Z","message":"replication controller \"httpd-example-1\" is waiting for pod \"httpd-example-1-deploy\" to run"}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: httpd-example
      openshift.io/deployment-config.name: httpd-example
      template: httpd-example
    name: httpd-example-2
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: httpd-example
      uid: fa4ebfed-1369-11e8-844f-005056832285
  spec:
    replicas: 0
    selector:
      deployment: httpd-example-2
      deploymentconfig: httpd-example
      name: httpd-example
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "2"
          openshift.io/deployment-config.name: httpd-example
          openshift.io/deployment.name: httpd-example-2
        creationTimestamp: null
        labels:
          deployment: httpd-example-2
          deploymentconfig: httpd-example
          name: httpd-example
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-dev/httpd-example@sha256:00f92d88868c0281fe2b06563b639d6bd1b58d3d7d3100793ecde2dbdee0d441
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: httpd-example
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.name: httpd-example-3-deploy
      openshift.io/deployment-config.latest-version: "3"
      openshift.io/deployment-config.name: httpd-example
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"httpd-example","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/httpd-example","uid":"fa4ebfed-1369-11e8-844f-005056832285","resourceVersion":"343412516","generation":6,"creationTimestamp":"2018-02-16T22:37:32Z","labels":{"app":"httpd-example","template":"httpd-example"},"annotations":{"description":"Defines how to deploy the application server","template.alpha.openshift.io/wait-for-ready":"true"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["httpd-example"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-dev","name":"httpd-example:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-dev/httpd-example@sha256:00f92d88868c0281fe2b06563b639d6bd1b58d3d7d3100793ecde2dbdee0d441"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"httpd-example"},"template":{"metadata":{"name":"httpd-example","creationTimestamp":null,"labels":{"name":"httpd-example"}},"spec":{"volumes":[{"name":"volume-ds536","persistentVolumeClaim":{"claimName":"postgresql-cns"}}],"containers":[{"name":"httpd-example","image":"172.50.0.2:5000/mem-tfrs-dev/httpd-example@sha256:00f92d88868c0281fe2b06563b639d6bd1b58d3d7d3100793ecde2dbdee0d441","ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{"limits":{"memory":"512Mi"}},"volumeMounts":[{"name":"volume-ds536","mountPath":"/data-old"}],"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":3,"observedGeneration":5,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-02-16T22:38:14Z","lastTransitionTime":"2018-02-16T22:38:14Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-16T22:38:15Z","lastTransitionTime":"2018-02-16T22:38:15Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"httpd-example-2\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      app: httpd-example
      openshift.io/deployment-config.name: httpd-example
      template: httpd-example
    name: httpd-example-3
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: httpd-example
      uid: fa4ebfed-1369-11e8-844f-005056832285
  spec:
    replicas: 0
    selector:
      deployment: httpd-example-3
      deploymentconfig: httpd-example
      name: httpd-example
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "3"
          openshift.io/deployment-config.name: httpd-example
          openshift.io/deployment.name: httpd-example-3
        creationTimestamp: null
        labels:
          deployment: httpd-example-3
          deploymentconfig: httpd-example
          name: httpd-example
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-dev/httpd-example@sha256:00f92d88868c0281fe2b06563b639d6bd1b58d3d7d3100793ecde2dbdee0d441
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: httpd-example
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data-old
            name: volume-ds536
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: volume-ds536
          persistentVolumeClaim:
            claimName: postgresql-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "0"
      openshift.io/deployer-pod.name: httpd-example-4-deploy
      openshift.io/deployment-config.latest-version: "4"
      openshift.io/deployment-config.name: httpd-example
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"httpd-example","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/httpd-example","uid":"fa4ebfed-1369-11e8-844f-005056832285","resourceVersion":"343413120","generation":8,"creationTimestamp":"2018-02-16T22:37:32Z","labels":{"app":"httpd-example","template":"httpd-example"},"annotations":{"description":"Defines how to deploy the application server","template.alpha.openshift.io/wait-for-ready":"true"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["httpd-example"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-dev","name":"httpd-example:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-dev/httpd-example@sha256:00f92d88868c0281fe2b06563b639d6bd1b58d3d7d3100793ecde2dbdee0d441"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"httpd-example"},"template":{"metadata":{"name":"httpd-example","creationTimestamp":null,"labels":{"name":"httpd-example"}},"spec":{"volumes":[{"name":"volume-ds536","persistentVolumeClaim":{"claimName":"postgresql-cns"}},{"name":"volume-te11a","persistentVolumeClaim":{"claimName":"postgresql-bypass-cns"}}],"containers":[{"name":"httpd-example","image":"172.50.0.2:5000/mem-tfrs-dev/httpd-example@sha256:00f92d88868c0281fe2b06563b639d6bd1b58d3d7d3100793ecde2dbdee0d441","ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{"limits":{"memory":"512Mi"}},"volumeMounts":[{"name":"volume-ds536","mountPath":"/data-old"},{"name":"volume-te11a","mountPath":"/data-new"}],"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":4,"observedGeneration":7,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-02-16T22:38:14Z","lastTransitionTime":"2018-02-16T22:38:14Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-16T22:39:06Z","lastTransitionTime":"2018-02-16T22:39:04Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"httpd-example-3\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      app: httpd-example
      openshift.io/deployment-config.name: httpd-example
      template: httpd-example
    name: httpd-example-4
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: httpd-example
      uid: fa4ebfed-1369-11e8-844f-005056832285
  spec:
    replicas: 0
    selector:
      deployment: httpd-example-4
      deploymentconfig: httpd-example
      name: httpd-example
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "4"
          openshift.io/deployment-config.name: httpd-example
          openshift.io/deployment.name: httpd-example-4
        creationTimestamp: null
        labels:
          deployment: httpd-example-4
          deploymentconfig: httpd-example
          name: httpd-example
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-dev/httpd-example@sha256:00f92d88868c0281fe2b06563b639d6bd1b58d3d7d3100793ecde2dbdee0d441
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: httpd-example
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data-old
            name: volume-ds536
          - mountPath: /data-new
            name: volume-te11a
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: volume-ds536
          persistentVolumeClaim:
            claimName: postgresql-cns
        - name: volume-te11a
          persistentVolumeClaim:
            claimName: postgresql-bypass-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-02-27 15:12:19 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-02-27 15:12:11 -0800 PST
      openshift.io/deployer-pod.name: httpd-example-5-deploy
      openshift.io/deployment-config.latest-version: "5"
      openshift.io/deployment-config.name: httpd-example
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"httpd-example","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/httpd-example","uid":"fa4ebfed-1369-11e8-844f-005056832285","resourceVersion":"355786724","generation":10,"creationTimestamp":"2018-02-16T22:37:32Z","labels":{"app":"httpd-example","template":"httpd-example"},"annotations":{"description":"Defines how to deploy the application server","template.alpha.openshift.io/wait-for-ready":"true"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["httpd-example"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-dev","name":"httpd-example:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-dev/httpd-example@sha256:adfd91fa3cf3291bc99ed841c232e7eb7069fa0feb9436906ec1471a0f8cc6f3"}},{"type":"ConfigChange"}],"replicas":0,"test":false,"selector":{"name":"httpd-example"},"template":{"metadata":{"name":"httpd-example","creationTimestamp":null,"labels":{"name":"httpd-example"}},"spec":{"volumes":[{"name":"volume-ds536","persistentVolumeClaim":{"claimName":"postgresql-cns"}},{"name":"volume-te11a","persistentVolumeClaim":{"claimName":"postgresql-bypass-cns"}}],"containers":[{"name":"httpd-example","image":"172.50.0.2:5000/mem-tfrs-dev/httpd-example@sha256:adfd91fa3cf3291bc99ed841c232e7eb7069fa0feb9436906ec1471a0f8cc6f3","ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{"limits":{"memory":"512Mi"}},"volumeMounts":[{"name":"volume-ds536","mountPath":"/data-old"},{"name":"volume-te11a","mountPath":"/data-new"}],"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":5,"observedGeneration":10,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-dev/httpd-example@sha256:adfd91fa3cf3291bc99ed841c232e7eb7069fa0feb9436906ec1471a0f8cc6f3"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-16T22:39:38Z","lastTransitionTime":"2018-02-16T22:39:36Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"httpd-example-4\" successfully rolled out"},{"type":"Available","status":"False","lastUpdateTime":"2018-02-16T22:46:26Z","lastTransitionTime":"2018-02-16T22:46:26Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: httpd-example
      openshift.io/deployment-config.name: httpd-example
      template: httpd-example
    name: httpd-example-5
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: httpd-example
      uid: fa4ebfed-1369-11e8-844f-005056832285
  spec:
    replicas: 0
    selector:
      deployment: httpd-example-5
      deploymentconfig: httpd-example
      name: httpd-example
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "5"
          openshift.io/deployment-config.name: httpd-example
          openshift.io/deployment.name: httpd-example-5
        creationTimestamp: null
        labels:
          deployment: httpd-example-5
          deploymentconfig: httpd-example
          name: httpd-example
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-dev/httpd-example@sha256:adfd91fa3cf3291bc99ed841c232e7eb7069fa0feb9436906ec1471a0f8cc6f3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: httpd-example
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data-old
            name: volume-ds536
          - mountPath: /data-new
            name: volume-te11a
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: volume-ds536
          persistentVolumeClaim:
            claimName: postgresql-cns
        - name: volume-te11a
          persistentVolumeClaim:
            claimName: postgresql-bypass-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/desired-replicas: "1"
      openshift.io/deployer-pod.name: postgresql-16-deploy
      openshift.io/deployment-config.latest-version: "16"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.cancelled: "true"
      openshift.io/deployment.phase: Failed
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: newer deployment was found running
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/postgresql","uid":"6553cf4d-fa1e-11e6-b4f5-0050568379a2","resourceVersion":"354238248","generation":59,"creationTimestamp":"2017-02-23T23:18:33Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.4"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-94-rhel7@sha256:999f3041aed3bbdbca5c55bfc5849ca15e5546f457e82582863ae271b6485478"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"postgresql"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql"}},"spec":{"volumes":[{"name":"postgresql-data","persistentVolumeClaim":{"claimName":"postgresql-cns"}}],"containers":[{"name":"postgresql","image":"registry.access.redhat.com/rhscl/postgresql-94-rhel7@sha256:999f3041aed3bbdbca5c55bfc5849ca15e5546f457e82582863ae271b6485478","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"2Gi"},"requests":{"cpu":"500m"}},"volumeMounts":[{"name":"postgresql-data","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-c","pwd"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":16,"observedGeneration":58,"replicas":1,"updatedReplicas":1,"availableReplicas":0,"unavailableReplicas":1,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.4"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-26T20:31:39Z","lastTransitionTime":"2018-02-26T20:31:39Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"postgresql-15\" successfully rolled out"},{"type":"Available","status":"False","lastUpdateTime":"2018-02-26T22:15:12Z","lastTransitionTime":"2018-02-26T22:15:12Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql
      template: postgresql-persistent-template
    name: postgresql-16
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql
      uid: 6553cf4d-fa1e-11e6-b4f5-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: postgresql-16
      deploymentconfig: postgresql
      name: postgresql
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "16"
          openshift.io/deployment-config.name: postgresql
          openshift.io/deployment.name: postgresql-16
        creationTimestamp: null
        labels:
          deployment: postgresql-16
          deploymentconfig: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-94-rhel7@sha256:999f3041aed3bbdbca5c55bfc5849ca15e5546f457e82582863ae271b6485478
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - pwd
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2Gi
            requests:
              cpu: 500m
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: postgresql-17-deploy
      openshift.io/deployment-config.latest-version: "17"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/postgresql","uid":"6553cf4d-fa1e-11e6-b4f5-0050568379a2","resourceVersion":"354239363","generation":62,"creationTimestamp":"2017-02-23T23:18:33Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"postgresql"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql"}},"spec":{"volumes":[{"name":"postgresql-data","persistentVolumeClaim":{"claimName":"postgresql-cns"}}],"containers":[{"name":"postgresql","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"2Gi"},"requests":{"cpu":"500m"}},"volumeMounts":[{"name":"postgresql-data","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-c","pwd"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":17,"observedGeneration":61,"replicas":1,"updatedReplicas":1,"availableReplicas":0,"unavailableReplicas":1,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"}}}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-02-26T22:15:12Z","lastTransitionTime":"2018-02-26T22:15:12Z","message":"Deployment config does not have minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-26T22:15:56Z","lastTransitionTime":"2018-02-26T22:15:56Z","reason":"ReplicationControllerUpdated","message":"replication controller \"postgresql-16\" is progressing"}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql
      template: postgresql-persistent-template
    name: postgresql-17
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql
      uid: 6553cf4d-fa1e-11e6-b4f5-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: postgresql-17
      deploymentconfig: postgresql
      name: postgresql
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "17"
          openshift.io/deployment-config.name: postgresql
          openshift.io/deployment.name: postgresql-17
        creationTimestamp: null
        labels:
          deployment: postgresql-17
          deploymentconfig: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - pwd
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2Gi
            requests:
              cpu: 500m
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: postgresql-18-deploy
      openshift.io/deployment-config.latest-version: "18"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/postgresql","uid":"6553cf4d-fa1e-11e6-b4f5-0050568379a2","resourceVersion":"354308573","generation":65,"creationTimestamp":"2017-02-23T23:18:33Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a"}},{"type":"ConfigChange"}],"replicas":0,"test":false,"selector":{"name":"postgresql"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql"}},"spec":{"volumes":[{"name":"postgresql-data","persistentVolumeClaim":{"claimName":"postgresql-cns"}}],"containers":[{"name":"postgresql","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"2Gi"},"requests":{"cpu":"500m"}},"volumeMounts":[{"name":"postgresql-data","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":18,"observedGeneration":64,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-26T22:23:23Z","lastTransitionTime":"2018-02-26T22:23:23Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"postgresql-17\" successfully rolled out"},{"type":"Available","status":"False","lastUpdateTime":"2018-02-26T23:13:57Z","lastTransitionTime":"2018-02-26T23:13:57Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql
      template: postgresql-persistent-template
    name: postgresql-18
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql
      uid: 6553cf4d-fa1e-11e6-b4f5-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: postgresql-18
      deploymentconfig: postgresql
      name: postgresql
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "18"
          openshift.io/deployment-config.name: postgresql
          openshift.io/deployment.name: postgresql-18
        creationTimestamp: null
        labels:
          deployment: postgresql-18
          deploymentconfig: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2Gi
            requests:
              cpu: 500m
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: postgresql-19-deploy
      openshift.io/deployment-config.latest-version: "19"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: manual change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/postgresql","uid":"6553cf4d-fa1e-11e6-b4f5-0050568379a2","resourceVersion":"354309077","generation":66,"creationTimestamp":"2017-02-23T23:18:33Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a"}},{"type":"ConfigChange"}],"replicas":0,"test":false,"selector":{"name":"postgresql"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql"}},"spec":{"volumes":[{"name":"postgresql-data","persistentVolumeClaim":{"claimName":"postgresql-cns"}}],"containers":[{"name":"postgresql","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"2Gi"},"requests":{"cpu":"500m"}},"volumeMounts":[{"name":"postgresql-data","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":19,"observedGeneration":65,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"manual change","causes":[{"type":"Manual"}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-02-26T23:13:57Z","lastTransitionTime":"2018-02-26T23:13:57Z","message":"Deployment config does not have minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-26T23:16:10Z","lastTransitionTime":"2018-02-26T23:16:10Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"postgresql-18\" successfully rolled out"}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql
      template: postgresql-persistent-template
    name: postgresql-19
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql
      uid: 6553cf4d-fa1e-11e6-b4f5-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: postgresql-19
      deploymentconfig: postgresql
      name: postgresql
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "19"
          openshift.io/deployment-config.name: postgresql
          openshift.io/deployment.name: postgresql-19
        creationTimestamp: null
        labels:
          deployment: postgresql-19
          deploymentconfig: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2Gi
            requests:
              cpu: 500m
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: postgresql-20-deploy
      openshift.io/deployment-config.latest-version: "20"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: manual change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/postgresql","uid":"6553cf4d-fa1e-11e6-b4f5-0050568379a2","resourceVersion":"354310975","generation":67,"creationTimestamp":"2017-02-23T23:18:33Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a"}},{"type":"ConfigChange"}],"replicas":0,"test":false,"selector":{"name":"postgresql"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql"}},"spec":{"volumes":[{"name":"postgresql-data","persistentVolumeClaim":{"claimName":"postgresql-cns"}}],"containers":[{"name":"postgresql","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"2Gi"},"requests":{"cpu":"500m"}},"volumeMounts":[{"name":"postgresql-data","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":20,"observedGeneration":66,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"manual change","causes":[{"type":"Manual"}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-02-26T23:13:57Z","lastTransitionTime":"2018-02-26T23:13:57Z","message":"Deployment config does not have minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-26T23:16:34Z","lastTransitionTime":"2018-02-26T23:16:34Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"postgresql-19\" successfully rolled out"}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql
      template: postgresql-persistent-template
    name: postgresql-20
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql
      uid: 6553cf4d-fa1e-11e6-b4f5-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: postgresql-20
      deploymentconfig: postgresql
      name: postgresql
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "20"
          openshift.io/deployment-config.name: postgresql
          openshift.io/deployment.name: postgresql-20
        creationTimestamp: null
        labels:
          deployment: postgresql-20
          deploymentconfig: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2Gi
            requests:
              cpu: 500m
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-02-27 15:10:43 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-02-27 15:08:29 -0800 PST
      openshift.io/deployer-pod.name: postgresql-21-deploy
      openshift.io/deployment-config.latest-version: "21"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/postgresql","uid":"6553cf4d-fa1e-11e6-b4f5-0050568379a2","resourceVersion":"355775929","generation":69,"creationTimestamp":"2017-02-23T23:18:33Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"postgresql"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql"}},"spec":{"volumes":[{"name":"postgresql-data","persistentVolumeClaim":{"claimName":"postgresql-cns"}}],"containers":[{"name":"postgresql","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"2Gi"},"requests":{"cpu":"500m"}},"volumeMounts":[{"name":"postgresql-data","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":21,"observedGeneration":69,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-26T23:18:04Z","lastTransitionTime":"2018-02-26T23:18:04Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"postgresql-20\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-02-27T18:49:00Z","lastTransitionTime":"2018-02-27T18:49:00Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql
      template: postgresql-persistent-template
    name: postgresql-21
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql
      uid: 6553cf4d-fa1e-11e6-b4f5-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: postgresql-21
      deploymentconfig: postgresql
      name: postgresql
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "21"
          openshift.io/deployment-config.name: postgresql
          openshift.io/deployment.name: postgresql-21
        creationTimestamp: null
        labels:
          deployment: postgresql-21
          deploymentconfig: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2Gi
            requests:
              cpu: 500m
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-02-28 15:32:13 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-02-28 15:31:43 -0800 PST
      openshift.io/deployer-pod.name: postgresql-22-deploy
      openshift.io/deployment-config.latest-version: "22"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/postgresql","uid":"6553cf4d-fa1e-11e6-b4f5-0050568379a2","resourceVersion":"356665758","generation":73,"creationTimestamp":"2017-02-23T23:18:33Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"postgresql"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql"}},"spec":{"volumes":[{"name":"postgresql-data","persistentVolumeClaim":{"claimName":"postgresql-cns"}},{"name":"volume-r83io","persistentVolumeClaim":{"claimName":"postgresql-backup-cns"}}],"containers":[{"name":"postgresql","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"2Gi"},"requests":{"cpu":"500m"}},"volumeMounts":[{"name":"postgresql-data","mountPath":"/var/lib/pgsql/data"},{"name":"volume-r83io","mountPath":"/postgresql-backup"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":22,"observedGeneration":73,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-27T23:10:44Z","lastTransitionTime":"2018-02-27T23:09:12Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"postgresql-21\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-02-28T23:10:14Z","lastTransitionTime":"2018-02-28T23:10:14Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql
      template: postgresql-persistent-template
    name: postgresql-22
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql
      uid: 6553cf4d-fa1e-11e6-b4f5-0050568379a2
  spec:
    replicas: 1
    selector:
      deployment: postgresql-22
      deploymentconfig: postgresql
      name: postgresql
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "22"
          openshift.io/deployment-config.name: postgresql
          openshift.io/deployment.name: postgresql-22
        creationTimestamp: null
        labels:
          deployment: postgresql-22
          deploymentconfig: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2Gi
            requests:
              cpu: 500m
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
          - mountPath: /postgresql-backup
            name: volume-r83io
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-cns
        - name: volume-r83io
          persistentVolumeClaim:
            claimName: postgresql-backup-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: postgresql-bypass-1-deploy
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: postgresql-bypass
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql-bypass","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/postgresql-bypass","uid":"ace4a28f-136b-11e8-844f-005056832285","resourceVersion":"343424778","generation":2,"creationTimestamp":"2018-02-16T22:49:41Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql-bypass"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"postgresql-bypass"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql-bypass"}},"spec":{"volumes":[{"name":"postgresql-data-bypass","persistentVolumeClaim":{"claimName":"postgresql-bypass-cns"}}],"containers":[{"name":"postgresql-bypass","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"volumeMounts":[{"name":"postgresql-data-bypass","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":1,"observedGeneration":1,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"}}}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-02-16T22:49:41Z","lastTransitionTime":"2018-02-16T22:49:41Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql-bypass
      template: postgresql-persistent-template
    name: postgresql-bypass-1
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql-bypass
      uid: ace4a28f-136b-11e8-844f-005056832285
  spec:
    replicas: 0
    selector:
      deployment: postgresql-bypass-1
      deploymentconfig: postgresql-bypass
      name: postgresql-bypass
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "1"
          openshift.io/deployment-config.name: postgresql-bypass
          openshift.io/deployment.name: postgresql-bypass-1
        creationTimestamp: null
        labels:
          deployment: postgresql-bypass-1
          deploymentconfig: postgresql-bypass
          name: postgresql-bypass
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql-bypass
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data-bypass
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data-bypass
          persistentVolumeClaim:
            claimName: postgresql-bypass-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-02-27 15:10:29 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-02-27 15:08:30 -0800 PST
      openshift.io/deployer-pod.name: postgresql-bypass-2-deploy
      openshift.io/deployment-config.latest-version: "2"
      openshift.io/deployment-config.name: postgresql-bypass
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql-bypass","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/postgresql-bypass","uid":"ace4a28f-136b-11e8-844f-005056832285","resourceVersion":"355775949","generation":5,"creationTimestamp":"2018-02-16T22:49:41Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql-bypass"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"postgresql-bypass"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql-bypass"}},"spec":{"volumes":[{"name":"postgresql-data-bypass","persistentVolumeClaim":{"claimName":"postgresql-bypass-cns"}}],"containers":[{"name":"postgresql-bypass","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"volumeMounts":[{"name":"postgresql-data-bypass","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":2,"observedGeneration":5,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-16T22:49:57Z","lastTransitionTime":"2018-02-16T22:49:57Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"postgresql-bypass-1\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-02-27T19:10:21Z","lastTransitionTime":"2018-02-27T19:10:21Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql-bypass
      template: postgresql-persistent-template
    name: postgresql-bypass-2
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql-bypass
      uid: ace4a28f-136b-11e8-844f-005056832285
  spec:
    replicas: 0
    selector:
      deployment: postgresql-bypass-2
      deploymentconfig: postgresql-bypass
      name: postgresql-bypass
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "2"
          openshift.io/deployment-config.name: postgresql-bypass
          openshift.io/deployment.name: postgresql-bypass-2
        creationTimestamp: null
        labels:
          deployment: postgresql-bypass-2
          deploymentconfig: postgresql-bypass
          name: postgresql-bypass
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql-bypass
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data-bypass
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data-bypass
          persistentVolumeClaim:
            claimName: postgresql-bypass-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-02 15:12:58 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-02 15:12:32 -0800 PST
      openshift.io/deployer-pod.name: postgresql-bypass-3-deploy
      openshift.io/deployment-config.latest-version: "3"
      openshift.io/deployment-config.name: postgresql-bypass
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql-bypass","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/postgresql-bypass","uid":"ace4a28f-136b-11e8-844f-005056832285","resourceVersion":"359242146","generation":7,"creationTimestamp":"2018-02-16T22:49:41Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql-bypass"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"postgresql-bypass"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql-bypass"}},"spec":{"volumes":[{"name":"postgresql-data-bypass","persistentVolumeClaim":{"claimName":"postgresql-bypass-cns"}}],"containers":[{"name":"postgresql-bypass","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"volumeMounts":[{"name":"postgresql-data-bypass","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":3,"observedGeneration":7,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-27T23:10:30Z","lastTransitionTime":"2018-02-27T23:10:30Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"postgresql-bypass-2\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-03-02T20:59:59Z","lastTransitionTime":"2018-03-02T20:59:59Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql-bypass
      template: postgresql-persistent-template
    name: postgresql-bypass-3
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql-bypass
      uid: ace4a28f-136b-11e8-844f-005056832285
  spec:
    replicas: 1
    selector:
      deployment: postgresql-bypass-3
      deploymentconfig: postgresql-bypass
      name: postgresql-bypass
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "3"
          openshift.io/deployment-config.name: postgresql-bypass
          openshift.io/deployment.name: postgresql-bypass-3
        creationTimestamp: null
        labels:
          deployment: postgresql-bypass-3
          deploymentconfig: postgresql-bypass
          name: postgresql-bypass
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql-bypass
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data-bypass
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data-bypass
          persistentVolumeClaim:
            claimName: postgresql-bypass-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-01 15:50:44 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-01 15:50:09 -0800 PST
      openshift.io/deployer-pod.name: postgresql-standby-1-deploy
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: postgresql-standby
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql-standby","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/postgresql-standby","uid":"45b9112f-1dab-11e8-8a7d-005056832285","resourceVersion":"357895857","generation":2,"creationTimestamp":"2018-03-01T23:50:08Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql-standby"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed"}},{"type":"ConfigChange"}],"replicas":1,"revisionHistoryLimit":10,"test":false,"selector":{"name":"postgresql-standby"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql-standby"}},"spec":{"volumes":[{"name":"postgresql-data-standby","persistentVolumeClaim":{"claimName":"postgresql-standby-cns"}}],"containers":[{"name":"postgresql-standby","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"volumeMounts":[{"name":"postgresql-data-standby","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":1,"observedGeneration":2,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-03-01T23:50:08Z","lastTransitionTime":"2018-03-01T23:50:08Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql-standby
      template: postgresql-persistent-template
    name: postgresql-standby-1
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql-standby
      uid: 45b9112f-1dab-11e8-8a7d-005056832285
  spec:
    replicas: 1
    selector:
      deployment: postgresql-standby-1
      deploymentconfig: postgresql-standby
      name: postgresql-standby
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "1"
          openshift.io/deployment-config.name: postgresql-standby
          openshift.io/deployment.name: postgresql-standby-1
        creationTimestamp: null
        labels:
          deployment: postgresql-standby-1
          deploymentconfig: postgresql-standby
          name: postgresql-standby
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql-standby
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data-standby
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data-standby
          persistentVolumeClaim:
            claimName: postgresql-standby-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/desired-replicas: "1"
      openshift.io/deployer-pod.name: request-logger-1-deploy
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: request-logger
      openshift.io/deployment.cancelled: "true"
      openshift.io/deployment.phase: Failed
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: newer deployment was found running
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"request-logger","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/request-logger","uid":"6b547dd1-d53e-11e7-9f70-005056832285","resourceVersion":"276079600","generation":3,"creationTimestamp":"2017-11-29T19:49:32Z","labels":{"app":"request-logger"},"annotations":{"openshift.io/generated-by":"OpenShiftWebConsole"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["request-logger"],"from":{"kind":"ImageStreamTag","namespace":"devops-sandbox-dev","name":"request-logger:latest"},"lastTriggeredImage":"172.50.0.2:5000/devops-sandbox-dev/request-logger@sha256:9c0a10650dea1229cd9853f81884baa25795a00f95e2d6722ddafa00b73f00cd"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"deploymentconfig":"request-logger"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"request-logger","deploymentconfig":"request-logger"}},"spec":{"containers":[{"name":"request-logger","image":"172.50.0.2:5000/devops-sandbox-dev/request-logger@sha256:9c0a10650dea1229cd9853f81884baa25795a00f95e2d6722ddafa00b73f00cd","ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":1,"observedGeneration":2,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"devops-sandbox-dev","name":"request-logger:latest"}}}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2017-11-29T19:49:32Z","lastTransitionTime":"2017-11-29T19:49:32Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: request-logger
      openshift.io/deployment-config.name: request-logger
    name: request-logger-1
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: request-logger
      uid: 6b547dd1-d53e-11e7-9f70-005056832285
  spec:
    replicas: 0
    selector:
      deployment: request-logger-1
      deploymentconfig: request-logger
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "1"
          openshift.io/deployment-config.name: request-logger
          openshift.io/deployment.name: request-logger-1
        creationTimestamp: null
        labels:
          app: request-logger
          deployment: request-logger-1
          deploymentconfig: request-logger
      spec:
        containers:
        - image: 172.50.0.2:5000/devops-sandbox-dev/request-logger@sha256:9c0a10650dea1229cd9853f81884baa25795a00f95e2d6722ddafa00b73f00cd
          imagePullPolicy: Always
          name: request-logger
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.name: request-logger-2-deploy
      openshift.io/deployment-config.latest-version: "2"
      openshift.io/deployment-config.name: request-logger
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"request-logger","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/request-logger","uid":"6b547dd1-d53e-11e7-9f70-005056832285","resourceVersion":"276081679","generation":6,"creationTimestamp":"2017-11-29T19:49:32Z","labels":{"app":"request-logger"},"annotations":{"openshift.io/generated-by":"OpenShiftWebConsole"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["request-logger"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-dev","name":"request-logger:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:6a09a8baa58acd905518d5ff502f01d00c32ebead94853b2202db39991b0ccc3"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"deploymentconfig":"request-logger"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"request-logger","deploymentconfig":"request-logger"}},"spec":{"containers":[{"name":"request-logger","image":"172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:6a09a8baa58acd905518d5ff502f01d00c32ebead94853b2202db39991b0ccc3","ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":2,"observedGeneration":5,"replicas":1,"updatedReplicas":1,"availableReplicas":0,"unavailableReplicas":1,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-dev","name":"request-logger:latest"}}}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2017-11-29T19:49:32Z","lastTransitionTime":"2017-11-29T19:49:32Z","message":"Deployment config does not have minimum availability."},{"type":"Progressing","status":"Unknown","lastUpdateTime":"2017-11-29T19:49:32Z","lastTransitionTime":"2017-11-29T19:49:32Z","message":"replication controller \"request-logger-1\" is waiting for pod \"request-logger-1-deploy\" to run"}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: request-logger
      openshift.io/deployment-config.name: request-logger
    name: request-logger-2
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: request-logger
      uid: 6b547dd1-d53e-11e7-9f70-005056832285
  spec:
    replicas: 0
    selector:
      deployment: request-logger-2
      deploymentconfig: request-logger
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "2"
          openshift.io/deployment-config.name: request-logger
          openshift.io/deployment.name: request-logger-2
        creationTimestamp: null
        labels:
          app: request-logger
          deployment: request-logger-2
          deploymentconfig: request-logger
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:6a09a8baa58acd905518d5ff502f01d00c32ebead94853b2202db39991b0ccc3
          imagePullPolicy: Always
          name: request-logger
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.name: request-logger-3-deploy
      openshift.io/deployment-config.latest-version: "3"
      openshift.io/deployment-config.name: request-logger
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"request-logger","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/request-logger","uid":"6b547dd1-d53e-11e7-9f70-005056832285","resourceVersion":"283896279","generation":8,"creationTimestamp":"2017-11-29T19:49:32Z","labels":{"app":"request-logger"},"annotations":{"openshift.io/generated-by":"OpenShiftWebConsole"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["request-logger"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-dev","name":"request-logger:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:6a09a8baa58acd905518d5ff502f01d00c32ebead94853b2202db39991b0ccc3"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"deploymentconfig":"request-logger"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"request-logger","deploymentconfig":"request-logger"}},"spec":{"volumes":[{"name":"volume-8g9sa","configMap":{"name":"reques-logger","items":[{"key":"reques_logger.py","path":"request_logger.py"}],"defaultMode":420}}],"containers":[{"name":"request-logger","image":"172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:6a09a8baa58acd905518d5ff502f01d00c32ebead94853b2202db39991b0ccc3","ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"volume-8g9sa","mountPath":"/opt/app-root/src"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":3,"observedGeneration":7,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2017-11-29T19:52:52Z","lastTransitionTime":"2017-11-29T19:52:52Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"request-logger-2\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2017-12-05T03:22:15Z","lastTransitionTime":"2017-12-05T03:22:15Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      app: request-logger
      openshift.io/deployment-config.name: request-logger
    name: request-logger-3
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: request-logger
      uid: 6b547dd1-d53e-11e7-9f70-005056832285
  spec:
    replicas: 0
    selector:
      deployment: request-logger-3
      deploymentconfig: request-logger
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "3"
          openshift.io/deployment-config.name: request-logger
          openshift.io/deployment.name: request-logger-3
        creationTimestamp: null
        labels:
          app: request-logger
          deployment: request-logger-3
          deploymentconfig: request-logger
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:6a09a8baa58acd905518d5ff502f01d00c32ebead94853b2202db39991b0ccc3
          imagePullPolicy: Always
          name: request-logger
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/app-root/src
            name: volume-8g9sa
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: reques_logger.py
              path: request_logger.py
            name: reques-logger
          name: volume-8g9sa
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "0"
      openshift.io/deployer-pod.name: request-logger-4-deploy
      openshift.io/deployment-config.latest-version: "4"
      openshift.io/deployment-config.name: request-logger
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"request-logger","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/request-logger","uid":"6b547dd1-d53e-11e7-9f70-005056832285","resourceVersion":"286174352","generation":14,"creationTimestamp":"2017-11-29T19:49:32Z","labels":{"app":"request-logger"},"annotations":{"openshift.io/generated-by":"OpenShiftWebConsole"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["request-logger"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-dev","name":"request-logger:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:6a09a8baa58acd905518d5ff502f01d00c32ebead94853b2202db39991b0ccc3"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"deploymentconfig":"request-logger"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"request-logger","deploymentconfig":"request-logger"}},"spec":{"volumes":[{"name":"volume-8g9sa","configMap":{"name":"reques-logger","items":[{"key":"reques_logger.py","path":"request_logger.py"}],"defaultMode":420}}],"containers":[{"name":"request-logger","image":"172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:6a09a8baa58acd905518d5ff502f01d00c32ebead94853b2202db39991b0ccc3","ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"volumeMounts":[{"name":"volume-8g9sa","mountPath":"/opt/app-root/src"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":4,"observedGeneration":13,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2017-12-08T23:06:02Z","lastTransitionTime":"2017-12-08T23:05:59Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"request-logger-3\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2017-12-11T00:13:05Z","lastTransitionTime":"2017-12-11T00:13:05Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      app: request-logger
      openshift.io/deployment-config.name: request-logger
    name: request-logger-4
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: request-logger
      uid: 6b547dd1-d53e-11e7-9f70-005056832285
  spec:
    replicas: 0
    selector:
      deployment: request-logger-4
      deploymentconfig: request-logger
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "4"
          openshift.io/deployment-config.name: request-logger
          openshift.io/deployment.name: request-logger-4
        creationTimestamp: null
        labels:
          app: request-logger
          deployment: request-logger-4
          deploymentconfig: request-logger
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:6a09a8baa58acd905518d5ff502f01d00c32ebead94853b2202db39991b0ccc3
          imagePullPolicy: Always
          name: request-logger
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/app-root/src
            name: volume-8g9sa
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: reques_logger.py
              path: request_logger.py
            name: reques-logger
          name: volume-8g9sa
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-02-27 15:12:30 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-02-27 15:12:22 -0800 PST
      openshift.io/deployer-pod.name: request-logger-5-deploy
      openshift.io/deployment-config.latest-version: "5"
      openshift.io/deployment-config.name: request-logger
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"request-logger","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/request-logger","uid":"6b547dd1-d53e-11e7-9f70-005056832285","resourceVersion":"355786935","generation":18,"creationTimestamp":"2017-11-29T19:49:32Z","labels":{"app":"request-logger"},"annotations":{"openshift.io/generated-by":"OpenShiftWebConsole"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["request-logger"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-dev","name":"request-logger:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:a6226da1c2150ea1079ee99c562588be59141547159365e72c8c0d1f8d69110e"}},{"type":"ConfigChange"}],"replicas":0,"test":false,"selector":{"deploymentconfig":"request-logger"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"request-logger","deploymentconfig":"request-logger"}},"spec":{"volumes":[{"name":"volume-8g9sa","configMap":{"name":"reques-logger","items":[{"key":"reques_logger.py","path":"request_logger.py"}],"defaultMode":420}}],"containers":[{"name":"request-logger","image":"172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:a6226da1c2150ea1079ee99c562588be59141547159365e72c8c0d1f8d69110e","ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"volumeMounts":[{"name":"volume-8g9sa","mountPath":"/opt/app-root/src"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":5,"observedGeneration":18,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:a6226da1c2150ea1079ee99c562588be59141547159365e72c8c0d1f8d69110e"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2017-12-13T00:03:18Z","lastTransitionTime":"2017-12-13T00:03:16Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"request-logger-4\" successfully rolled out"},{"type":"Available","status":"False","lastUpdateTime":"2018-02-10T00:14:17Z","lastTransitionTime":"2018-02-10T00:14:17Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: request-logger
      openshift.io/deployment-config.name: request-logger
    name: request-logger-5
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: request-logger
      uid: 6b547dd1-d53e-11e7-9f70-005056832285
  spec:
    replicas: 0
    selector:
      deployment: request-logger-5
      deploymentconfig: request-logger
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "5"
          openshift.io/deployment-config.name: request-logger
          openshift.io/deployment.name: request-logger-5
        creationTimestamp: null
        labels:
          app: request-logger
          deployment: request-logger-5
          deploymentconfig: request-logger
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:a6226da1c2150ea1079ee99c562588be59141547159365e72c8c0d1f8d69110e
          imagePullPolicy: Always
          name: request-logger
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/app-root/src
            name: volume-8g9sa
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: reques_logger.py
              path: request_logger.py
            name: reques-logger
          name: volume-8g9sa
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: schema-spy-10-deploy
      openshift.io/deployment-config.latest-version: "10"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"schema-spy","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/schema-spy","uid":"786e9578-d61c-11e7-9b28-0050568379a2","resourceVersion":"327866186","generation":25,"creationTimestamp":"2017-11-30T22:19:02Z","annotations":{"description":"Defines how to deploy the container."}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ConfigChange"},{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["schema-spy"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf"}}],"replicas":0,"test":false,"selector":{"name":"schema-spy"},"template":{"metadata":{"name":"schema-spy","creationTimestamp":null,"labels":{"name":"schema-spy"}},"spec":{"containers":[{"name":"schema-spy","image":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":10,"observedGeneration":24,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-01-30T19:35:01Z","lastTransitionTime":"2018-01-30T19:35:01Z","message":"Deployment config does not have minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-01-30T19:37:43Z","lastTransitionTime":"2018-01-30T19:37:43Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"schema-spy-9\" successfully rolled out"}]}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: schema-spy
    name: schema-spy-10
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: schema-spy
      uid: 786e9578-d61c-11e7-9b28-0050568379a2
  spec:
    replicas: 1
    selector:
      deployment: schema-spy-10
      deploymentconfig: schema-spy
      name: schema-spy
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "10"
          openshift.io/deployment-config.name: schema-spy
          openshift.io/deployment.name: schema-spy-10
        creationTimestamp: null
        labels:
          deployment: schema-spy-10
          deploymentconfig: schema-spy
          name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.name: schema-spy-5-deploy
      openshift.io/deployment-config.latest-version: "5"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: manual change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"schema-spy","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/schema-spy","uid":"786e9578-d61c-11e7-9b28-0050568379a2","resourceVersion":"310867829","generation":10,"creationTimestamp":"2017-11-30T22:19:02Z","annotations":{"description":"Defines how to deploy the container."}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ConfigChange"},{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["schema-spy"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:43e43d8b988b50b5eb6b09fdb34c350e3efa1500108d208c0f754f7217f19274"}}],"replicas":1,"test":false,"selector":{"name":"schema-spy"},"template":{"metadata":{"name":"schema-spy","creationTimestamp":null,"labels":{"name":"schema-spy"}},"spec":{"containers":[{"name":"schema-spy","image":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:43e43d8b988b50b5eb6b09fdb34c350e3efa1500108d208c0f754f7217f19274","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"username"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"password"}}}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":5,"observedGeneration":9,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"manual change","causes":[{"type":"Manual"}]},"conditions":[{"type":"Progressing","status":"False","lastUpdateTime":"2017-12-13T00:14:28Z","lastTransitionTime":"2017-12-13T00:14:28Z","reason":"ProgressDeadlineExceeded","message":"replication controller \"schema-spy-4\" has failed progressing"},{"type":"Available","status":"True","lastUpdateTime":"2018-01-09T03:09:07Z","lastTransitionTime":"2018-01-09T03:09:07Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: schema-spy
    name: schema-spy-5
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: schema-spy
      uid: 786e9578-d61c-11e7-9b28-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: schema-spy-5
      deploymentconfig: schema-spy
      name: schema-spy
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "5"
          openshift.io/deployment-config.name: schema-spy
          openshift.io/deployment.name: schema-spy-5
        creationTimestamp: null
        labels:
          deployment: schema-spy-5
          deploymentconfig: schema-spy
          name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:43e43d8b988b50b5eb6b09fdb34c350e3efa1500108d208c0f754f7217f19274
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.name: schema-spy-6-deploy
      openshift.io/deployment-config.latest-version: "6"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"schema-spy","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/schema-spy","uid":"786e9578-d61c-11e7-9b28-0050568379a2","resourceVersion":"327770072","generation":16,"creationTimestamp":"2017-11-30T22:19:02Z","annotations":{"description":"Defines how to deploy the container."}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ConfigChange"},{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["schema-spy"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf"}}],"replicas":1,"test":false,"selector":{"name":"schema-spy"},"template":{"metadata":{"name":"schema-spy","creationTimestamp":null,"labels":{"name":"schema-spy"}},"spec":{"containers":[{"name":"schema-spy","image":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"username"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"password"}}}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":6,"observedGeneration":15,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-01-10T00:39:56Z","lastTransitionTime":"2018-01-10T00:39:53Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"schema-spy-5\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-01-30T12:09:16Z","lastTransitionTime":"2018-01-30T12:09:16Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: schema-spy
    name: schema-spy-6
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: schema-spy
      uid: 786e9578-d61c-11e7-9b28-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: schema-spy-6
      deploymentconfig: schema-spy
      name: schema-spy
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "6"
          openshift.io/deployment-config.name: schema-spy
          openshift.io/deployment.name: schema-spy-6
        creationTimestamp: null
        labels:
          deployment: schema-spy-6
          deploymentconfig: schema-spy
          name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/desired-replicas: "1"
      kubectl.kubernetes.io/update-source-id: schema-spy-6:31ee4fc6-05e3-11e8-b39a-0050568348cc
      openshift.io/deployer-pod.name: schema-spy-7-deploy
      openshift.io/deployment-config.latest-version: "7"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.cancelled: "true"
      openshift.io/deployment.phase: Failed
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: newer deployment was found running
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"schema-spy","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/schema-spy","uid":"786e9578-d61c-11e7-9b28-0050568379a2","resourceVersion":"327823567","generation":18,"creationTimestamp":"2017-11-30T22:19:02Z","annotations":{"description":"Defines how to deploy the container."}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ConfigChange"},{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["schema-spy"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf"}}],"replicas":1,"test":false,"selector":{"name":"schema-spy"},"template":{"metadata":{"name":"schema-spy","creationTimestamp":null,"labels":{"name":"schema-spy"}},"spec":{"containers":[{"name":"schema-spy","image":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER_OLD","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"username"}}},{"name":"POSTGRESQL_PASSWORD_OLD","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"password"}}},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"POSTGRESQL_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"POSTGRESQL_PASSWORD"}}}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":7,"observedGeneration":17,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-01-30T12:09:16Z","lastTransitionTime":"2018-01-30T12:09:16Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-01-30T17:31:19Z","lastTransitionTime":"2018-01-30T17:31:16Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"schema-spy-6\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: schema-spy
    name: schema-spy-7
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: schema-spy
      uid: 786e9578-d61c-11e7-9b28-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: schema-spy-7
      deploymentconfig: schema-spy
      name: schema-spy
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "7"
          openshift.io/deployment-config.name: schema-spy
          openshift.io/deployment.name: schema-spy-7
        creationTimestamp: null
        labels:
          deployment: schema-spy-7
          deploymentconfig: schema-spy
          name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER_OLD
            valueFrom:
              secretKeyRef:
                key: username
                name: postgresql
          - name: POSTGRESQL_PASSWORD_OLD
            valueFrom:
              secretKeyRef:
                key: password
                name: postgresql
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: POSTGRESQL_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: POSTGRESQL_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "0"
      openshift.io/deployer-pod.name: schema-spy-8-deploy
      openshift.io/deployment-config.latest-version: "8"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"schema-spy","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/schema-spy","uid":"786e9578-d61c-11e7-9b28-0050568379a2","resourceVersion":"327826607","generation":20,"creationTimestamp":"2017-11-30T22:19:02Z","annotations":{"description":"Defines how to deploy the container."}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ConfigChange"},{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["schema-spy"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf"}}],"replicas":1,"test":false,"selector":{"name":"schema-spy"},"template":{"metadata":{"name":"schema-spy","creationTimestamp":null,"labels":{"name":"schema-spy"}},"spec":{"containers":[{"name":"schema-spy","image":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"username"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"password"}}}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":8,"observedGeneration":19,"replicas":2,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":1,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-01-30T12:09:16Z","lastTransitionTime":"2018-01-30T12:09:16Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"Unknown","lastUpdateTime":"2018-01-30T18:41:11Z","lastTransitionTime":"2018-01-30T18:41:11Z","message":"replication controller \"schema-spy-7\" is waiting for pod \"schema-spy-7-deploy\" to run"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: schema-spy
    name: schema-spy-8
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: schema-spy
      uid: 786e9578-d61c-11e7-9b28-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: schema-spy-8
      deploymentconfig: schema-spy
      name: schema-spy
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "8"
          openshift.io/deployment-config.name: schema-spy
          openshift.io/deployment.name: schema-spy-8
        creationTimestamp: null
        labels:
          deployment: schema-spy-8
          deploymentconfig: schema-spy
          name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "0"
      openshift.io/deployer-pod.name: schema-spy-9-deploy
      openshift.io/deployment-config.latest-version: "9"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"schema-spy","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/schema-spy","uid":"786e9578-d61c-11e7-9b28-0050568379a2","resourceVersion":"327866003","generation":23,"creationTimestamp":"2017-11-30T22:19:02Z","annotations":{"description":"Defines how to deploy the container."}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ConfigChange"},{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["schema-spy"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf"}}],"replicas":0,"test":false,"selector":{"name":"schema-spy"},"template":{"metadata":{"name":"schema-spy","creationTimestamp":null,"labels":{"name":"schema-spy"}},"spec":{"containers":[{"name":"schema-spy","image":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"OLD_POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"username"}}},{"name":"OLD_POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"password"}}},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":9,"observedGeneration":22,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-01-30T18:45:51Z","lastTransitionTime":"2018-01-30T18:45:49Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"schema-spy-8\" successfully rolled out"},{"type":"Available","status":"False","lastUpdateTime":"2018-01-30T19:35:01Z","lastTransitionTime":"2018-01-30T19:35:01Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: schema-spy
    name: schema-spy-9
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: schema-spy
      uid: 786e9578-d61c-11e7-9b28-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: schema-spy-9
      deploymentconfig: schema-spy
      name: schema-spy
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "9"
          openshift.io/deployment-config.name: schema-spy
          openshift.io/deployment.name: schema-spy-9
        creationTimestamp: null
        labels:
          deployment: schema-spy-9
          deploymentconfig: schema-spy
          name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: OLD_POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: postgresql
          - name: OLD_POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: postgresql
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/desired-replicas: "2"
      openshift.io/deployer-pod.name: tfrs-320-deploy
      openshift.io/deployment-config.latest-version: "320"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.cancelled: "true"
      openshift.io/deployment.phase: Failed
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: newer deployment was found running
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs","uid":"21154530-05dd-11e7-a694-005056832285","resourceVersion":"337589063","generation":526,"creationTimestamp":"2017-03-10T22:01:35Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:68bc3d29445823b67788e5c9266e2ef396bb83a88aa2a4de2b47b82dbf1b70d8"}},{"type":"ConfigChange"}],"replicas":2,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:68bc3d29445823b67788e5c9266e2ef396bb83a88aa2a4de2b47b82dbf1b70d8","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":320,"observedGeneration":525,"replicas":2,"updatedReplicas":2,"availableReplicas":2,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-09T23:41:39Z","lastTransitionTime":"2018-02-09T23:41:38Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-319\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-02-09T23:42:18Z","lastTransitionTime":"2018-02-09T23:42:18Z","message":"Deployment config has minimum availability."}],"readyReplicas":2}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-320
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 21154530-05dd-11e7-a694-005056832285
  spec:
    replicas: 0
    selector:
      deployment: tfrs-320
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "320"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-320
        creationTimestamp: null
        labels:
          deployment: tfrs-320
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:68bc3d29445823b67788e5c9266e2ef396bb83a88aa2a4de2b47b82dbf1b70d8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: tfrs-350-deploy
      openshift.io/deployment-config.latest-version: "350"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs","uid":"21154530-05dd-11e7-a694-005056832285","resourceVersion":"352178289","generation":592,"creationTimestamp":"2017-03-10T22:01:35Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:49f9c6436dcfe0e819497076615dea51e8502e6fb296ac0fc5af0c6896a4f941"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:49f9c6436dcfe0e819497076615dea51e8502e6fb296ac0fc5af0c6896a4f941","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":350,"observedGeneration":591,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-02-24T06:16:44Z","lastTransitionTime":"2018-02-24T06:16:44Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-24T06:16:46Z","lastTransitionTime":"2018-02-24T06:16:04Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-349\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-350
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 21154530-05dd-11e7-a694-005056832285
  spec:
    replicas: 0
    selector:
      deployment: tfrs-350
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "350"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-350
        creationTimestamp: null
        labels:
          deployment: tfrs-350
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:49f9c6436dcfe0e819497076615dea51e8502e6fb296ac0fc5af0c6896a4f941
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: tfrs-351-deploy
      openshift.io/deployment-config.latest-version: "351"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs","uid":"21154530-05dd-11e7-a694-005056832285","resourceVersion":"353395018","generation":594,"creationTimestamp":"2017-03-10T22:01:35Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:152c5fd92de6b6704b921f7a49f266a0269428596eb9ae4fb31878c8c8bfbdb5"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:152c5fd92de6b6704b921f7a49f266a0269428596eb9ae4fb31878c8c8bfbdb5","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":351,"observedGeneration":593,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-02-25T06:16:13Z","lastTransitionTime":"2018-02-25T06:16:13Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-25T06:16:15Z","lastTransitionTime":"2018-02-25T06:15:32Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-350\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-351
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 21154530-05dd-11e7-a694-005056832285
  spec:
    replicas: 0
    selector:
      deployment: tfrs-351
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "351"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-351
        creationTimestamp: null
        labels:
          deployment: tfrs-351
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:152c5fd92de6b6704b921f7a49f266a0269428596eb9ae4fb31878c8c8bfbdb5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: tfrs-353-deploy
      openshift.io/deployment-config.latest-version: "353"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: manual change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs","uid":"21154530-05dd-11e7-a694-005056832285","resourceVersion":"354301371","generation":599,"creationTimestamp":"2017-03-10T22:01:35Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:5e7262e3083d44b79c6e054ddbfe6df6d22e2e2e02d296b16ce6a4d6dfc5b0f8"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:5e7262e3083d44b79c6e054ddbfe6df6d22e2e2e02d296b16ce6a4d6dfc5b0f8","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":353,"observedGeneration":598,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"manual change","causes":[{"type":"Manual"}]},"conditions":[{"type":"Progressing","status":"False","lastUpdateTime":"2018-02-26T19:24:24Z","lastTransitionTime":"2018-02-26T19:24:24Z","reason":"ProgressDeadlineExceeded","message":"replication controller \"tfrs-352\" has failed progressing"},{"type":"Available","status":"True","lastUpdateTime":"2018-02-26T23:09:57Z","lastTransitionTime":"2018-02-26T23:09:57Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-353
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 21154530-05dd-11e7-a694-005056832285
  spec:
    replicas: 0
    selector:
      deployment: tfrs-353
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "353"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-353
        creationTimestamp: null
        labels:
          deployment: tfrs-353
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:5e7262e3083d44b79c6e054ddbfe6df6d22e2e2e02d296b16ce6a4d6dfc5b0f8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: tfrs-354-deploy
      openshift.io/deployment-config.latest-version: "354"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: manual change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs","uid":"21154530-05dd-11e7-a694-005056832285","resourceVersion":"354317945","generation":601,"creationTimestamp":"2017-03-10T22:01:35Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:5e7262e3083d44b79c6e054ddbfe6df6d22e2e2e02d296b16ce6a4d6dfc5b0f8"}},{"type":"ConfigChange"}],"replicas":0,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:5e7262e3083d44b79c6e054ddbfe6df6d22e2e2e02d296b16ce6a4d6dfc5b0f8","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":354,"observedGeneration":600,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"manual change","causes":[{"type":"Manual"}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-26T23:11:07Z","lastTransitionTime":"2018-02-26T23:10:25Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-353\" successfully rolled out"},{"type":"Available","status":"False","lastUpdateTime":"2018-02-26T23:14:23Z","lastTransitionTime":"2018-02-26T23:14:23Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-354
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 21154530-05dd-11e7-a694-005056832285
  spec:
    replicas: 0
    selector:
      deployment: tfrs-354
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "354"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-354
        creationTimestamp: null
        labels:
          deployment: tfrs-354
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:5e7262e3083d44b79c6e054ddbfe6df6d22e2e2e02d296b16ce6a4d6dfc5b0f8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: tfrs-355-deploy
      openshift.io/deployment-config.latest-version: "355"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs","uid":"21154530-05dd-11e7-a694-005056832285","resourceVersion":"354745198","generation":604,"creationTimestamp":"2017-03-10T22:01:35Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:2892faa85d1f9b63f6cbd79dd26161e3da1cbe24fcf4133b6cd124347b1e8307"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:2892faa85d1f9b63f6cbd79dd26161e3da1cbe24fcf4133b6cd124347b1e8307","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":355,"observedGeneration":603,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-26T23:24:01Z","lastTransitionTime":"2018-02-26T23:24:01Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-354\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-02-27T06:03:13Z","lastTransitionTime":"2018-02-27T06:03:13Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-355
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 21154530-05dd-11e7-a694-005056832285
  spec:
    replicas: 0
    selector:
      deployment: tfrs-355
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "355"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-355
        creationTimestamp: null
        labels:
          deployment: tfrs-355
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:2892faa85d1f9b63f6cbd79dd26161e3da1cbe24fcf4133b6cd124347b1e8307
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-01 11:33:35 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-01 11:32:17 -0800 PST
      openshift.io/deployer-pod.name: tfrs-356-deploy
      openshift.io/deployment-config.latest-version: "356"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs","uid":"21154530-05dd-11e7-a694-005056832285","resourceVersion":"357623575","generation":611,"creationTimestamp":"2017-03-10T22:01:35Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:e4c0525088e1ed76d8883c88a85ff94d1d69376eacbfd9b8fa4ca5940700258a"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:e4c0525088e1ed76d8883c88a85ff94d1d69376eacbfd9b8fa4ca5940700258a","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":356,"observedGeneration":611,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:e4c0525088e1ed76d8883c88a85ff94d1d69376eacbfd9b8fa4ca5940700258a"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-27T06:16:20Z","lastTransitionTime":"2018-02-27T06:15:37Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-355\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-03-01T00:52:29Z","lastTransitionTime":"2018-03-01T00:52:29Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-356
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 21154530-05dd-11e7-a694-005056832285
  spec:
    replicas: 0
    selector:
      deployment: tfrs-356
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "356"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-356
        creationTimestamp: null
        labels:
          deployment: tfrs-356
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:e4c0525088e1ed76d8883c88a85ff94d1d69376eacbfd9b8fa4ca5940700258a
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-01 11:35:27 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-01 11:34:15 -0800 PST
      openshift.io/deployer-pod.name: tfrs-357-deploy
      openshift.io/deployment-config.latest-version: "357"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs","uid":"21154530-05dd-11e7-a694-005056832285","resourceVersion":"357625257","generation":612,"creationTimestamp":"2017-03-10T22:01:35Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:1b97cc6592d07cdccf86dd9fac40de80903c915646a17fda6a56e2f6e7fc6a0a"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:1b97cc6592d07cdccf86dd9fac40de80903c915646a17fda6a56e2f6e7fc6a0a","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":357,"observedGeneration":612,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:1b97cc6592d07cdccf86dd9fac40de80903c915646a17fda6a56e2f6e7fc6a0a"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-03-01T19:33:35Z","lastTransitionTime":"2018-03-01T19:33:35Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-03-01T19:33:36Z","lastTransitionTime":"2018-03-01T19:32:55Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-356\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-357
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 21154530-05dd-11e7-a694-005056832285
  spec:
    replicas: 0
    selector:
      deployment: tfrs-357
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "357"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-357
        creationTimestamp: null
        labels:
          deployment: tfrs-357
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:1b97cc6592d07cdccf86dd9fac40de80903c915646a17fda6a56e2f6e7fc6a0a
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-01 15:15:36 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-01 15:14:26 -0800 PST
      openshift.io/deployer-pod.name: tfrs-358-deploy
      openshift.io/deployment-config.latest-version: "358"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs","uid":"21154530-05dd-11e7-a694-005056832285","resourceVersion":"357847025","generation":613,"creationTimestamp":"2017-03-10T22:01:35Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:dba5cfc56d7ceac78a7c245c4c230ce5afdbc56e0e18537c0a459231d851699d"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:dba5cfc56d7ceac78a7c245c4c230ce5afdbc56e0e18537c0a459231d851699d","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":358,"observedGeneration":613,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:dba5cfc56d7ceac78a7c245c4c230ce5afdbc56e0e18537c0a459231d851699d"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-03-01T19:35:27Z","lastTransitionTime":"2018-03-01T19:35:27Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-03-01T19:35:28Z","lastTransitionTime":"2018-03-01T19:34:46Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-357\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-358
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 21154530-05dd-11e7-a694-005056832285
  spec:
    replicas: 0
    selector:
      deployment: tfrs-358
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "358"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-358
        creationTimestamp: null
        labels:
          deployment: tfrs-358
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:dba5cfc56d7ceac78a7c245c4c230ce5afdbc56e0e18537c0a459231d851699d
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-01 22:16:51 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-01 22:15:25 -0800 PST
      openshift.io/deployer-pod.name: tfrs-359-deploy
      openshift.io/deployment-config.latest-version: "359"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs","uid":"21154530-05dd-11e7-a694-005056832285","resourceVersion":"358359982","generation":618,"creationTimestamp":"2017-03-10T22:01:35Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:a881a7f0945775fd244f981ea1144cae74dd4ce73be6e797ee41cffd8701b251"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:a881a7f0945775fd244f981ea1144cae74dd4ce73be6e797ee41cffd8701b251","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":359,"observedGeneration":618,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:a881a7f0945775fd244f981ea1144cae74dd4ce73be6e797ee41cffd8701b251"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-03-01T23:15:37Z","lastTransitionTime":"2018-03-01T23:14:55Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-358\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-03-02T00:27:54Z","lastTransitionTime":"2018-03-02T00:27:54Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-359
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 21154530-05dd-11e7-a694-005056832285
  spec:
    replicas: 0
    selector:
      deployment: tfrs-359
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "359"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-359
        creationTimestamp: null
        labels:
          deployment: tfrs-359
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:a881a7f0945775fd244f981ea1144cae74dd4ce73be6e797ee41cffd8701b251
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-02 09:46:09 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-02 09:45:02 -0800 PST
      openshift.io/deployer-pod.name: tfrs-360-deploy
      openshift.io/deployment-config.latest-version: "360"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs","uid":"21154530-05dd-11e7-a694-005056832285","resourceVersion":"358920854","generation":619,"creationTimestamp":"2017-03-10T22:01:35Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:e1680eb1c448009dedeeb3e0f334f0dd9111b9951f44311782b4a2530c0b5f88"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:e1680eb1c448009dedeeb3e0f334f0dd9111b9951f44311782b4a2530c0b5f88","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":360,"observedGeneration":619,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:e1680eb1c448009dedeeb3e0f334f0dd9111b9951f44311782b4a2530c0b5f88"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-03-02T06:16:50Z","lastTransitionTime":"2018-03-02T06:16:50Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-03-02T06:16:52Z","lastTransitionTime":"2018-03-02T06:16:10Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-359\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-360
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 21154530-05dd-11e7-a694-005056832285
  spec:
    replicas: 0
    selector:
      deployment: tfrs-360
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "360"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-360
        creationTimestamp: null
        labels:
          deployment: tfrs-360
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:e1680eb1c448009dedeeb3e0f334f0dd9111b9951f44311782b4a2530c0b5f88
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-02 09:50:43 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-02 09:49:24 -0800 PST
      openshift.io/deployer-pod.name: tfrs-361-deploy
      openshift.io/deployment-config.latest-version: "361"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs","uid":"21154530-05dd-11e7-a694-005056832285","resourceVersion":"358925472","generation":620,"creationTimestamp":"2017-03-10T22:01:35Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:f91b83f644c628fcb266da7f4825c5255847a5fd7d5e34abdb5fca28401c29b8"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:f91b83f644c628fcb266da7f4825c5255847a5fd7d5e34abdb5fca28401c29b8","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":361,"observedGeneration":620,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:f91b83f644c628fcb266da7f4825c5255847a5fd7d5e34abdb5fca28401c29b8"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-03-02T17:46:08Z","lastTransitionTime":"2018-03-02T17:46:08Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-03-02T17:46:09Z","lastTransitionTime":"2018-03-02T17:45:28Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-360\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-361
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 21154530-05dd-11e7-a694-005056832285
  spec:
    replicas: 0
    selector:
      deployment: tfrs-361
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "361"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-361
        creationTimestamp: null
        labels:
          deployment: tfrs-361
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:f91b83f644c628fcb266da7f4825c5255847a5fd7d5e34abdb5fca28401c29b8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-02 15:13:01 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-02 15:11:58 -0800 PST
      openshift.io/deployer-pod.name: tfrs-362-deploy
      openshift.io/deployment-config.latest-version: "362"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs","uid":"21154530-05dd-11e7-a694-005056832285","resourceVersion":"359241503","generation":621,"creationTimestamp":"2017-03-10T22:01:35Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:387ac9f4d92edffdb01bc145323e068a0b370cab4b56952c63560bae7cc06d58"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:387ac9f4d92edffdb01bc145323e068a0b370cab4b56952c63560bae7cc06d58","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":362,"observedGeneration":621,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:387ac9f4d92edffdb01bc145323e068a0b370cab4b56952c63560bae7cc06d58"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-03-02T17:50:43Z","lastTransitionTime":"2018-03-02T17:50:02Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-361\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-03-02T20:11:22Z","lastTransitionTime":"2018-03-02T20:11:22Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-362
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 21154530-05dd-11e7-a694-005056832285
  spec:
    replicas: 0
    selector:
      deployment: tfrs-362
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "362"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-362
        creationTimestamp: null
        labels:
          deployment: tfrs-362
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:387ac9f4d92edffdb01bc145323e068a0b370cab4b56952c63560bae7cc06d58
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-02 16:02:39 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-02 16:01:39 -0800 PST
      openshift.io/deployer-pod.name: tfrs-363-deploy
      openshift.io/deployment-config.latest-version: "363"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs","uid":"21154530-05dd-11e7-a694-005056832285","resourceVersion":"359282257","generation":622,"creationTimestamp":"2017-03-10T22:01:35Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:38c3ade8a1a5df50a2978c92071d0cedeea76b5d1f4e454dadadd1e81ddaba16"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:38c3ade8a1a5df50a2978c92071d0cedeea76b5d1f4e454dadadd1e81ddaba16","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":363,"observedGeneration":622,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:38c3ade8a1a5df50a2978c92071d0cedeea76b5d1f4e454dadadd1e81ddaba16"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-03-02T23:13:00Z","lastTransitionTime":"2018-03-02T23:13:00Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-03-02T23:13:02Z","lastTransitionTime":"2018-03-02T23:12:19Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-362\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-363
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 21154530-05dd-11e7-a694-005056832285
  spec:
    replicas: 0
    selector:
      deployment: tfrs-363
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "363"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-363
        creationTimestamp: null
        labels:
          deployment: tfrs-363
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:38c3ade8a1a5df50a2978c92071d0cedeea76b5d1f4e454dadadd1e81ddaba16
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-02 22:16:01 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-02 22:15:00 -0800 PST
      openshift.io/deployer-pod.name: tfrs-364-deploy
      openshift.io/deployment-config.latest-version: "364"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs","uid":"21154530-05dd-11e7-a694-005056832285","resourceVersion":"359499450","generation":623,"creationTimestamp":"2017-03-10T22:01:35Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:a66a92f6bd5b623e558799271572bca950ca736b6d13d6b0bac90b39b78b4c9e"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:a66a92f6bd5b623e558799271572bca950ca736b6d13d6b0bac90b39b78b4c9e","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":364,"observedGeneration":623,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:a66a92f6bd5b623e558799271572bca950ca736b6d13d6b0bac90b39b78b4c9e"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-03-03T00:02:38Z","lastTransitionTime":"2018-03-03T00:02:38Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-03-03T00:02:39Z","lastTransitionTime":"2018-03-03T00:01:58Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-363\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-364
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 21154530-05dd-11e7-a694-005056832285
  spec:
    replicas: 0
    selector:
      deployment: tfrs-364
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "364"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-364
        creationTimestamp: null
        labels:
          deployment: tfrs-364
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:a66a92f6bd5b623e558799271572bca950ca736b6d13d6b0bac90b39b78b4c9e
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-03 22:15:40 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-03 22:14:46 -0800 PST
      openshift.io/deployer-pod.name: tfrs-365-deploy
      openshift.io/deployment-config.latest-version: "365"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs","uid":"21154530-05dd-11e7-a694-005056832285","resourceVersion":"360114911","generation":624,"creationTimestamp":"2017-03-10T22:01:35Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:dd0175af2d3e68ba3b463753fad158195edc5190b68d26a2bd449b3d47711dfe"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:dd0175af2d3e68ba3b463753fad158195edc5190b68d26a2bd449b3d47711dfe","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":365,"observedGeneration":624,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:dd0175af2d3e68ba3b463753fad158195edc5190b68d26a2bd449b3d47711dfe"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-03-03T06:16:01Z","lastTransitionTime":"2018-03-03T06:16:01Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-03-03T06:16:02Z","lastTransitionTime":"2018-03-03T06:15:20Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-364\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-365
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 21154530-05dd-11e7-a694-005056832285
  spec:
    replicas: 0
    selector:
      deployment: tfrs-365
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "365"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-365
        creationTimestamp: null
        labels:
          deployment: tfrs-365
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:dd0175af2d3e68ba3b463753fad158195edc5190b68d26a2bd449b3d47711dfe
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-04 22:16:35 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-04 22:15:26 -0800 PST
      openshift.io/deployer-pod.name: tfrs-366-deploy
      openshift.io/deployment-config.latest-version: "366"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs","uid":"21154530-05dd-11e7-a694-005056832285","resourceVersion":"360599361","generation":625,"creationTimestamp":"2017-03-10T22:01:35Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:7796028de7c24ac8b151b72520579b86535107488f763a4ca702cf7b5f16c844"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:7796028de7c24ac8b151b72520579b86535107488f763a4ca702cf7b5f16c844","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":366,"observedGeneration":625,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:7796028de7c24ac8b151b72520579b86535107488f763a4ca702cf7b5f16c844"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-03-04T06:15:40Z","lastTransitionTime":"2018-03-04T06:15:40Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-03-04T06:15:40Z","lastTransitionTime":"2018-03-04T06:14:59Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-365\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-366
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 21154530-05dd-11e7-a694-005056832285
  spec:
    replicas: 1
    selector:
      deployment: tfrs-366
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "366"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-366
        creationTimestamp: null
        labels:
          deployment: tfrs-366
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:7796028de7c24ac8b151b72520579b86535107488f763a4ca702cf7b5f16c844
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: tfrs-bypass-10-deploy
      openshift.io/deployment-config.latest-version: "10"
      openshift.io/deployment-config.name: tfrs-bypass
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs-bypass","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs-bypass","uid":"d67fb896-129f-11e8-b39a-0050568348cc","resourceVersion":"346797784","generation":20,"creationTimestamp":"2018-02-15T22:30:34Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-bypass-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-bypass-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-bypass:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:37b1555a5d812ed5ecea5861d332a279d48d95b20e50cc9e5be053688e635d1a"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs-bypass"},"template":{"metadata":{"name":"tfrs-bypass","creationTimestamp":null,"labels":{"name":"tfrs-bypass"}},"spec":{"containers":[{"name":"tfrs-bypass-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:37b1555a5d812ed5ecea5861d332a279d48d95b20e50cc9e5be053688e635d1a","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql-bypass"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"BYPASS_HEADER_AUTHENTICATION","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":10,"observedGeneration":19,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-bypass:dev"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-02-20T22:25:21Z","lastTransitionTime":"2018-02-20T22:25:21Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-20T22:25:23Z","lastTransitionTime":"2018-02-20T22:24:41Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-bypass-9\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs-bypass
      template: tfrs-app-environment
    name: tfrs-bypass-10
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs-bypass
      uid: d67fb896-129f-11e8-b39a-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-bypass-10
      deploymentconfig: tfrs-bypass
      name: tfrs-bypass
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "10"
          openshift.io/deployment-config.name: tfrs-bypass
          openshift.io/deployment.name: tfrs-bypass-10
        creationTimestamp: null
        labels:
          deployment: tfrs-bypass-10
          deploymentconfig: tfrs-bypass
          name: tfrs-bypass
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql-bypass
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: BYPASS_HEADER_AUTHENTICATION
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:37b1555a5d812ed5ecea5861d332a279d48d95b20e50cc9e5be053688e635d1a
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-bypass-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: tfrs-bypass-11-deploy
      openshift.io/deployment-config.latest-version: "11"
      openshift.io/deployment-config.name: tfrs-bypass
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs-bypass","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs-bypass","uid":"d67fb896-129f-11e8-b39a-0050568348cc","resourceVersion":"346819162","generation":22,"creationTimestamp":"2018-02-15T22:30:34Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-bypass-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-bypass-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-bypass:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:a114c8a2042a85e6d4f2e63a4e1a2e91a43d932e01d3a2f409b27eed91e1a6ab"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs-bypass"},"template":{"metadata":{"name":"tfrs-bypass","creationTimestamp":null,"labels":{"name":"tfrs-bypass"}},"spec":{"containers":[{"name":"tfrs-bypass-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:a114c8a2042a85e6d4f2e63a4e1a2e91a43d932e01d3a2f409b27eed91e1a6ab","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql-bypass"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"BYPASS_HEADER_AUTHENTICATION","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":11,"observedGeneration":21,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-bypass:dev"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-02-20T23:14:35Z","lastTransitionTime":"2018-02-20T23:14:35Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-20T23:14:37Z","lastTransitionTime":"2018-02-20T23:13:54Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-bypass-10\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs-bypass
      template: tfrs-app-environment
    name: tfrs-bypass-11
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs-bypass
      uid: d67fb896-129f-11e8-b39a-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-bypass-11
      deploymentconfig: tfrs-bypass
      name: tfrs-bypass
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "11"
          openshift.io/deployment-config.name: tfrs-bypass
          openshift.io/deployment.name: tfrs-bypass-11
        creationTimestamp: null
        labels:
          deployment: tfrs-bypass-11
          deploymentconfig: tfrs-bypass
          name: tfrs-bypass
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql-bypass
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: BYPASS_HEADER_AUTHENTICATION
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:a114c8a2042a85e6d4f2e63a4e1a2e91a43d932e01d3a2f409b27eed91e1a6ab
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-bypass-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: tfrs-bypass-12-deploy
      openshift.io/deployment-config.latest-version: "12"
      openshift.io/deployment-config.name: tfrs-bypass
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs-bypass","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs-bypass","uid":"d67fb896-129f-11e8-b39a-0050568348cc","resourceVersion":"349164592","generation":24,"creationTimestamp":"2018-02-15T22:30:34Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-bypass-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-bypass-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-bypass:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:d718d5b3713796fa56212cbf618b1bcef8bd9224bd8b22904c649b0d2f0cef7c"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs-bypass"},"template":{"metadata":{"name":"tfrs-bypass","creationTimestamp":null,"labels":{"name":"tfrs-bypass"}},"spec":{"containers":[{"name":"tfrs-bypass-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:d718d5b3713796fa56212cbf618b1bcef8bd9224bd8b22904c649b0d2f0cef7c","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql-bypass"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"BYPASS_HEADER_AUTHENTICATION","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":12,"observedGeneration":23,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-bypass:dev"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-20T23:43:27Z","lastTransitionTime":"2018-02-20T23:42:45Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-bypass-11\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-02-22T14:52:58Z","lastTransitionTime":"2018-02-22T14:52:58Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs-bypass
      template: tfrs-app-environment
    name: tfrs-bypass-12
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs-bypass
      uid: d67fb896-129f-11e8-b39a-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-bypass-12
      deploymentconfig: tfrs-bypass
      name: tfrs-bypass
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "12"
          openshift.io/deployment-config.name: tfrs-bypass
          openshift.io/deployment.name: tfrs-bypass-12
        creationTimestamp: null
        labels:
          deployment: tfrs-bypass-12
          deploymentconfig: tfrs-bypass
          name: tfrs-bypass
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql-bypass
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: BYPASS_HEADER_AUTHENTICATION
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:d718d5b3713796fa56212cbf618b1bcef8bd9224bd8b22904c649b0d2f0cef7c
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-bypass-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: tfrs-bypass-13-deploy
      openshift.io/deployment-config.latest-version: "13"
      openshift.io/deployment-config.name: tfrs-bypass
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs-bypass","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs-bypass","uid":"d67fb896-129f-11e8-b39a-0050568348cc","resourceVersion":"350646843","generation":26,"creationTimestamp":"2018-02-15T22:30:34Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-bypass-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-bypass-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-bypass:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:f2ee62d2f005fcd2f4e7a85a8b42bd1e230378fbf965788ee2f215b07dff345a"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs-bypass"},"template":{"metadata":{"name":"tfrs-bypass","creationTimestamp":null,"labels":{"name":"tfrs-bypass"}},"spec":{"containers":[{"name":"tfrs-bypass-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:f2ee62d2f005fcd2f4e7a85a8b42bd1e230378fbf965788ee2f215b07dff345a","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql-bypass"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"BYPASS_HEADER_AUTHENTICATION","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":13,"observedGeneration":25,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-bypass:dev"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-22T20:15:35Z","lastTransitionTime":"2018-02-22T20:14:53Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-bypass-12\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-02-23T14:53:07Z","lastTransitionTime":"2018-02-23T14:53:07Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs-bypass
      template: tfrs-app-environment
    name: tfrs-bypass-13
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs-bypass
      uid: d67fb896-129f-11e8-b39a-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-bypass-13
      deploymentconfig: tfrs-bypass
      name: tfrs-bypass
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "13"
          openshift.io/deployment-config.name: tfrs-bypass
          openshift.io/deployment.name: tfrs-bypass-13
        creationTimestamp: null
        labels:
          deployment: tfrs-bypass-13
          deploymentconfig: tfrs-bypass
          name: tfrs-bypass
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql-bypass
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: BYPASS_HEADER_AUTHENTICATION
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:f2ee62d2f005fcd2f4e7a85a8b42bd1e230378fbf965788ee2f215b07dff345a
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-bypass-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: tfrs-bypass-14-deploy
      openshift.io/deployment-config.latest-version: "14"
      openshift.io/deployment-config.name: tfrs-bypass
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs-bypass","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs-bypass","uid":"d67fb896-129f-11e8-b39a-0050568348cc","resourceVersion":"350661680","generation":28,"creationTimestamp":"2018-02-15T22:30:34Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-bypass-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-bypass-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-bypass:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:26c400586a68bf0ebdd72245fb2cc61052d11597a894de4f2eb062397abf5342"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs-bypass"},"template":{"metadata":{"name":"tfrs-bypass","creationTimestamp":null,"labels":{"name":"tfrs-bypass"}},"spec":{"containers":[{"name":"tfrs-bypass-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:26c400586a68bf0ebdd72245fb2cc61052d11597a894de4f2eb062397abf5342","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql-bypass"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"BYPASS_HEADER_AUTHENTICATION","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":14,"observedGeneration":27,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-bypass:dev"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-02-23T23:41:14Z","lastTransitionTime":"2018-02-23T23:41:14Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-23T23:41:16Z","lastTransitionTime":"2018-02-23T23:40:33Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-bypass-13\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs-bypass
      template: tfrs-app-environment
    name: tfrs-bypass-14
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs-bypass
      uid: d67fb896-129f-11e8-b39a-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-bypass-14
      deploymentconfig: tfrs-bypass
      name: tfrs-bypass
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "14"
          openshift.io/deployment-config.name: tfrs-bypass
          openshift.io/deployment.name: tfrs-bypass-14
        creationTimestamp: null
        labels:
          deployment: tfrs-bypass-14
          deploymentconfig: tfrs-bypass
          name: tfrs-bypass
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql-bypass
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: BYPASS_HEADER_AUTHENTICATION
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:26c400586a68bf0ebdd72245fb2cc61052d11597a894de4f2eb062397abf5342
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-bypass-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-02 09:40:57 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-02 09:39:42 -0800 PST
      openshift.io/deployer-pod.name: tfrs-bypass-15-deploy
      openshift.io/deployment-config.latest-version: "15"
      openshift.io/deployment-config.name: tfrs-bypass
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs-bypass","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs-bypass","uid":"d67fb896-129f-11e8-b39a-0050568348cc","resourceVersion":"358915151","generation":33,"creationTimestamp":"2018-02-15T22:30:34Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-bypass-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-bypass-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-bypass:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:2754d4c72c64ebb930e326fbe26e99a53f7d72354335605a253c5acfce9c01d3"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs-bypass"},"template":{"metadata":{"name":"tfrs-bypass","creationTimestamp":null,"labels":{"name":"tfrs-bypass"}},"spec":{"containers":[{"name":"tfrs-bypass-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:2754d4c72c64ebb930e326fbe26e99a53f7d72354335605a253c5acfce9c01d3","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql-bypass"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"BYPASS_HEADER_AUTHENTICATION","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":15,"observedGeneration":33,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:2754d4c72c64ebb930e326fbe26e99a53f7d72354335605a253c5acfce9c01d3"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-24T00:02:03Z","lastTransitionTime":"2018-02-24T00:01:20Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-bypass-14\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-03-02T03:31:25Z","lastTransitionTime":"2018-03-02T03:31:25Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs-bypass
      template: tfrs-app-environment
    name: tfrs-bypass-15
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs-bypass
      uid: d67fb896-129f-11e8-b39a-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-bypass-15
      deploymentconfig: tfrs-bypass
      name: tfrs-bypass
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "15"
          openshift.io/deployment-config.name: tfrs-bypass
          openshift.io/deployment.name: tfrs-bypass-15
        creationTimestamp: null
        labels:
          deployment: tfrs-bypass-15
          deploymentconfig: tfrs-bypass
          name: tfrs-bypass
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql-bypass
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: BYPASS_HEADER_AUTHENTICATION
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:2754d4c72c64ebb930e326fbe26e99a53f7d72354335605a253c5acfce9c01d3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-bypass-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-02 15:06:41 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-02 15:05:45 -0800 PST
      openshift.io/deployer-pod.name: tfrs-bypass-16-deploy
      openshift.io/deployment-config.latest-version: "16"
      openshift.io/deployment-config.name: tfrs-bypass
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs-bypass","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs-bypass","uid":"d67fb896-129f-11e8-b39a-0050568348cc","resourceVersion":"359235588","generation":34,"creationTimestamp":"2018-02-15T22:30:34Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-bypass-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-bypass-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-bypass:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:4af8303212cd46515b160f5554f785693ca53208c518a4c6d45638975d1a7c88"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs-bypass"},"template":{"metadata":{"name":"tfrs-bypass","creationTimestamp":null,"labels":{"name":"tfrs-bypass"}},"spec":{"containers":[{"name":"tfrs-bypass-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:4af8303212cd46515b160f5554f785693ca53208c518a4c6d45638975d1a7c88","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql-bypass"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"BYPASS_HEADER_AUTHENTICATION","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":16,"observedGeneration":34,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:4af8303212cd46515b160f5554f785693ca53208c518a4c6d45638975d1a7c88"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-03-02T17:40:58Z","lastTransitionTime":"2018-03-02T17:40:16Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-bypass-15\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-03-02T21:00:42Z","lastTransitionTime":"2018-03-02T21:00:42Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs-bypass
      template: tfrs-app-environment
    name: tfrs-bypass-16
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs-bypass
      uid: d67fb896-129f-11e8-b39a-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-bypass-16
      deploymentconfig: tfrs-bypass
      name: tfrs-bypass
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "16"
          openshift.io/deployment-config.name: tfrs-bypass
          openshift.io/deployment.name: tfrs-bypass-16
        creationTimestamp: null
        labels:
          deployment: tfrs-bypass-16
          deploymentconfig: tfrs-bypass
          name: tfrs-bypass
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql-bypass
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: BYPASS_HEADER_AUTHENTICATION
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:4af8303212cd46515b160f5554f785693ca53208c518a4c6d45638975d1a7c88
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-bypass-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-02 15:13:24 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-02 15:13:14 -0800 PST
      openshift.io/deployer-pod.name: tfrs-bypass-17-deploy
      openshift.io/deployment-config.latest-version: "17"
      openshift.io/deployment-config.name: tfrs-bypass
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs-bypass","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs-bypass","uid":"d67fb896-129f-11e8-b39a-0050568348cc","resourceVersion":"359242930","generation":37,"creationTimestamp":"2018-02-15T22:30:34Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-bypass-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-bypass-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-bypass:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:4af8303212cd46515b160f5554f785693ca53208c518a4c6d45638975d1a7c88"}},{"type":"ConfigChange"}],"replicas":0,"test":false,"selector":{"name":"tfrs-bypass"},"template":{"metadata":{"name":"tfrs-bypass","creationTimestamp":null,"labels":{"name":"tfrs-bypass"}},"spec":{"containers":[{"name":"tfrs-bypass-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:4af8303212cd46515b160f5554f785693ca53208c518a4c6d45638975d1a7c88","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql-bypass"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"BYPASS_HEADER_AUTHENTICATION","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"cpu":"250m","memory":"256Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":17,"observedGeneration":37,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-03-02T23:06:42Z","lastTransitionTime":"2018-03-02T23:06:00Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-bypass-16\" successfully rolled out"},{"type":"Available","status":"False","lastUpdateTime":"2018-03-02T23:12:03Z","lastTransitionTime":"2018-03-02T23:12:03Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs-bypass
      template: tfrs-app-environment
    name: tfrs-bypass-17
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs-bypass
      uid: d67fb896-129f-11e8-b39a-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-bypass-17
      deploymentconfig: tfrs-bypass
      name: tfrs-bypass
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "17"
          openshift.io/deployment-config.name: tfrs-bypass
          openshift.io/deployment.name: tfrs-bypass-17
        creationTimestamp: null
        labels:
          deployment: tfrs-bypass-17
          deploymentconfig: tfrs-bypass
          name: tfrs-bypass
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql-bypass
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: BYPASS_HEADER_AUTHENTICATION
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:4af8303212cd46515b160f5554f785693ca53208c518a4c6d45638975d1a7c88
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-bypass-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-02 15:15:00 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-02 15:13:55 -0800 PST
      openshift.io/deployer-pod.name: tfrs-bypass-18-deploy
      openshift.io/deployment-config.latest-version: "18"
      openshift.io/deployment-config.name: tfrs-bypass
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs-bypass","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs-bypass","uid":"d67fb896-129f-11e8-b39a-0050568348cc","resourceVersion":"359243656","generation":39,"creationTimestamp":"2018-02-15T22:30:34Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-bypass-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-bypass-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-bypass:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:f202e9b3183b81f0219468afe509a769d6e04ed10d6a6759d687b044839d9783"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs-bypass"},"template":{"metadata":{"name":"tfrs-bypass","creationTimestamp":null,"labels":{"name":"tfrs-bypass"}},"spec":{"containers":[{"name":"tfrs-bypass-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:f202e9b3183b81f0219468afe509a769d6e04ed10d6a6759d687b044839d9783","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql-bypass"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"BYPASS_HEADER_AUTHENTICATION","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"cpu":"250m","memory":"256Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":18,"observedGeneration":39,"replicas":1,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":1,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:f202e9b3183b81f0219468afe509a769d6e04ed10d6a6759d687b044839d9783"}}}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-03-02T23:12:03Z","lastTransitionTime":"2018-03-02T23:12:03Z","message":"Deployment config does not have minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-03-02T23:13:25Z","lastTransitionTime":"2018-03-02T23:13:25Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-bypass-17\" successfully rolled out"}]}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs-bypass
      template: tfrs-app-environment
    name: tfrs-bypass-18
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs-bypass
      uid: d67fb896-129f-11e8-b39a-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-bypass-18
      deploymentconfig: tfrs-bypass
      name: tfrs-bypass
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "18"
          openshift.io/deployment-config.name: tfrs-bypass
          openshift.io/deployment.name: tfrs-bypass-18
        creationTimestamp: null
        labels:
          deployment: tfrs-bypass-18
          deploymentconfig: tfrs-bypass
          name: tfrs-bypass
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql-bypass
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: BYPASS_HEADER_AUTHENTICATION
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:f202e9b3183b81f0219468afe509a769d6e04ed10d6a6759d687b044839d9783
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-bypass-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-02 16:42:28 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-02 16:41:19 -0800 PST
      openshift.io/deployer-pod.name: tfrs-bypass-19-deploy
      openshift.io/deployment-config.latest-version: "19"
      openshift.io/deployment-config.name: tfrs-bypass
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs-bypass","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs-bypass","uid":"d67fb896-129f-11e8-b39a-0050568348cc","resourceVersion":"359316985","generation":40,"creationTimestamp":"2018-02-15T22:30:34Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-bypass-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-bypass-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-bypass:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:9a3f7138e27abdd286ed7dfb38260914991cb8ef747e3a45a4df38e5992d961e"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs-bypass"},"template":{"metadata":{"name":"tfrs-bypass","creationTimestamp":null,"labels":{"name":"tfrs-bypass"}},"spec":{"containers":[{"name":"tfrs-bypass-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:9a3f7138e27abdd286ed7dfb38260914991cb8ef747e3a45a4df38e5992d961e","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql-bypass"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"BYPASS_HEADER_AUTHENTICATION","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"cpu":"250m","memory":"256Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":19,"observedGeneration":40,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:9a3f7138e27abdd286ed7dfb38260914991cb8ef747e3a45a4df38e5992d961e"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-03-02T23:15:00Z","lastTransitionTime":"2018-03-02T23:15:00Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-03-02T23:15:01Z","lastTransitionTime":"2018-03-02T23:14:19Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-bypass-18\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs-bypass
      template: tfrs-app-environment
    name: tfrs-bypass-19
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs-bypass
      uid: d67fb896-129f-11e8-b39a-0050568348cc
  spec:
    replicas: 1
    selector:
      deployment: tfrs-bypass-19
      deploymentconfig: tfrs-bypass
      name: tfrs-bypass
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "19"
          openshift.io/deployment-config.name: tfrs-bypass
          openshift.io/deployment.name: tfrs-bypass-19
        creationTimestamp: null
        labels:
          deployment: tfrs-bypass-19
          deploymentconfig: tfrs-bypass
          name: tfrs-bypass
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql-bypass
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: BYPASS_HEADER_AUTHENTICATION
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:9a3f7138e27abdd286ed7dfb38260914991cb8ef747e3a45a4df38e5992d961e
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-bypass-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/desired-replicas: "1"
      openshift.io/deployer-pod.name: tfrs-bypass-3-deploy
      openshift.io/deployment-config.latest-version: "3"
      openshift.io/deployment-config.name: tfrs-bypass
      openshift.io/deployment.phase: Failed
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: manual change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs-bypass","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs-bypass","uid":"d67fb896-129f-11e8-b39a-0050568348cc","resourceVersion":"343433209","generation":6,"creationTimestamp":"2018-02-15T22:30:34Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-bypass-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-bypass-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-bypass:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:4b6bb26f15940a701235b4c4a0551390ef83d738d12181fe89108e54524b80b6"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs-bypass"},"template":{"metadata":{"name":"tfrs-bypass","creationTimestamp":null,"labels":{"name":"tfrs-bypass"}},"spec":{"containers":[{"name":"tfrs-bypass-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:4b6bb26f15940a701235b4c4a0551390ef83d738d12181fe89108e54524b80b6","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql-bypass"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs-bypass"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"BYPASS_HEADER_AUTHENTICATION","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":3,"observedGeneration":5,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"manual change","causes":[{"type":"Manual"}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-02-15T22:30:34Z","lastTransitionTime":"2018-02-15T22:30:34Z","message":"Deployment config does not have minimum availability."},{"type":"Progressing","status":"False","lastUpdateTime":"2018-02-16T22:53:24Z","lastTransitionTime":"2018-02-16T22:53:24Z","reason":"ProgressDeadlineExceeded","message":"replication controller \"tfrs-bypass-2\" has failed progressing"}]}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs-bypass
      template: tfrs-app-environment
    name: tfrs-bypass-3
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs-bypass
      uid: d67fb896-129f-11e8-b39a-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-bypass-3
      deploymentconfig: tfrs-bypass
      name: tfrs-bypass
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "3"
          openshift.io/deployment-config.name: tfrs-bypass
          openshift.io/deployment.name: tfrs-bypass-3
        creationTimestamp: null
        labels:
          deployment: tfrs-bypass-3
          deploymentconfig: tfrs-bypass
          name: tfrs-bypass
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql-bypass
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs-bypass
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: BYPASS_HEADER_AUTHENTICATION
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:4b6bb26f15940a701235b4c4a0551390ef83d738d12181fe89108e54524b80b6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-bypass-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    name: api
  spec:
    host: dev-lowcarbonfuels.pathfinder.bcgov
    path: /api
    port:
      targetPort: web
    to:
      kind: Service
      name: backend
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2017-12-13T17:31:23Z
        status: "True"
        type: Admitted
      host: dev-lowcarbonfuels.pathfinder.bcgov
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: null
    name: api-bypass
  spec:
    host: api-bypass-mem-tfrs-dev.pathfinder.gov.bc.ca
    path: /api
    port:
      targetPort: web
    to:
      kind: Service
      name: backend-bypass
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-02-16T23:09:46Z
        status: "True"
        type: Admitted
      host: api-bypass-mem-tfrs-dev.pathfinder.gov.bc.ca
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: null
    name: api-internal
  spec:
    host: api-internal-mem-tfrs-dev.pathfinder.gov.bc.ca
    path: /api
    port:
      targetPort: web
    to:
      kind: Service
      name: backend
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-02-15T19:55:47Z
        status: "True"
        type: Admitted
      host: api-internal-mem-tfrs-dev.pathfinder.gov.bc.ca
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    name: caddy-app
  spec:
    host: tfrs-dev-caddy-proxy.pathfinder.gov.bc.ca
    port:
      targetPort: 2015-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: caddy-app
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2017-11-29T19:47:30Z
        status: "True"
        type: Admitted
      host: tfrs-dev-caddy-proxy.pathfinder.gov.bc.ca
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
      template.openshift.io/expose-uri: http://{.spec.host}{.spec.path}
    creationTimestamp: null
    labels:
      app: httpd-example
      template: httpd-example
    name: httpd-example
  spec:
    host: httpd-example-mem-tfrs-dev.pathfinder.gov.bc.ca
    to:
      kind: Service
      name: httpd-example
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-02-16T22:37:32Z
        status: "True"
        type: Admitted
      host: httpd-example-mem-tfrs-dev.pathfinder.gov.bc.ca
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    name: main
  spec:
    host: dev-lowcarbonfuels.pathfinder.bcgov
    port:
      targetPort: web
    to:
      kind: Service
      name: client
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2017-12-13T17:32:35Z
        status: "True"
        type: Admitted
      host: dev-lowcarbonfuels.pathfinder.bcgov
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    name: request-logger
  spec:
    host: tfrs-dev-request-logger.pathfinder.gov.bc.ca
    port:
      targetPort: 8080-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: request-logger
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2017-11-29T20:39:46Z
        status: "True"
        type: Admitted
      host: tfrs-dev-request-logger.pathfinder.gov.bc.ca
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    name: schema-spy
  spec:
    host: schema-spy-mem-tfrs-dev.pathfinder.gov.bc.ca
    to:
      kind: Service
      name: schema-spy
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2017-11-30T22:19:02Z
        status: "True"
        type: Admitted
      host: schema-spy-mem-tfrs-dev.pathfinder.gov.bc.ca
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    name: sminfo
  spec:
    host: client-mem-tfrs-dev.pathfinder.gov.bc.ca
    path: /sminfo/
    port:
      targetPort: 8080-tcp
    tls:
      insecureEdgeTerminationPolicy: Allow
      termination: edge
    to:
      kind: Service
      name: request-logger
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2017-12-08T22:30:21Z
        status: "True"
        type: Admitted
      host: client-mem-tfrs-dev.pathfinder.gov.bc.ca
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    name: sminfo3
  spec:
    host: dev-lowcarbonfuels.pathfinder.bcgov
    path: /sminfo
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: request-logger
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2017-12-13T17:29:44Z
        status: "True"
        type: Admitted
      host: dev-lowcarbonfuels.pathfinder.bcgov
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes and load balances the application pods
      service.alpha.openshift.io/dependencies: '[{"name": "postgresql", "kind": "Service"}]'
    creationTimestamp: null
    labels:
      template: tfrs-app-environment
    name: backend
  spec:
    ports:
    - name: web
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: tfrs
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes and load balances the application pods
      service.alpha.openshift.io/dependencies: '[{"name": "postgresql", "kind": "Service"}]'
    creationTimestamp: null
    labels:
      template: tfrs-app-environment
    name: backend-bypass
  spec:
    ports:
    - name: web
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: tfrs-bypass
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: caddy-app
      template: caddy-template
    name: caddy-app
  spec:
    ports:
    - name: 2015-tcp
      port: 2015
      protocol: TCP
      targetPort: 2015
    selector:
      app: caddy-app
      deploymentconfig: caddy-app
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes and load balances the front end pods
    creationTimestamp: null
    labels:
      template: tfrs-app-environment
    name: client
  spec:
    ports:
    - name: web
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: client
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: glusterfs-cluster-app
  spec:
    ports:
    - port: 1
      protocol: TCP
      targetPort: 1
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      gluster.kubernetes.io/provisioned-for-pvc: postgresql-backup-cns
    name: glusterfs-dynamic-postgresql-backup-cns
  spec:
    ports:
    - port: 1
      protocol: TCP
      targetPort: 1
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      gluster.kubernetes.io/provisioned-for-pvc: postgresql-bypass-cns
    name: glusterfs-dynamic-postgresql-bypass-cns
  spec:
    ports:
    - port: 1
      protocol: TCP
      targetPort: 1
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      gluster.kubernetes.io/provisioned-for-pvc: postgresql-cns
    name: glusterfs-dynamic-postgresql-cns
  spec:
    ports:
    - port: 1
      protocol: TCP
      targetPort: 1
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      gluster.kubernetes.io/provisioned-for-pvc: postgresql-standby-cns
    name: glusterfs-dynamic-postgresql-standby-cns
  spec:
    ports:
    - port: 1
      protocol: TCP
      targetPort: 1
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes and load balances the application pods
    creationTimestamp: null
    labels:
      app: httpd-example
      template: httpd-example
    name: httpd-example
  spec:
    ports:
    - name: web
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: httpd-example
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: postgresql-persistent
      template: postgresql-persistent-template
    name: postgresql
  spec:
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      name: postgresql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: postgresql-persistent
      template: postgresql-persistent-template
    name: postgresql-bypass
  spec:
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      name: postgresql-bypass
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: request-logger
    name: request-logger
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: request-logger
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes and load balances the application pods
    creationTimestamp: null
    name: schema-spy
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: schema-spy
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicationController","namespace":"mem-tfrs-dev","name":"client-286","uid":"b519de50-2045-11e8-8a7d-005056832285","apiVersion":"v1","resourceVersion":"360621527"}}
      kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu request for container
        client; cpu limit for container client'
      openshift.io/deployment-config.latest-version: "286"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.name: client-286
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: client-286-
    labels:
      deployment: client-286
      deploymentconfig: client
      name: client
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: client-286
      uid: b519de50-2045-11e8-8a7d-005056832285
  spec:
    containers:
    - env:
      - name: RealIpFrom
      - name: AdditionalRealIpFromRules
      - name: IpFilterRules
      - name: HTTP_BASIC
      - name: API_URL
        value: http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/
      image: 172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:bc1d33a5fc5041c14a897bd2a58fa09969db686f400c2c425ea43a2bc3653842
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      name: client
      ports:
      - containerPort: 3000
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: "1"
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 512Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        runAsUser: 1000220000
        seLinuxOptions:
          level: s0:c15,c5
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-54qx0
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-vuq9e
    nodeName: ociopf-p-194.dmz
    nodeSelector:
      region: app
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000220000
      seLinuxOptions:
        level: s0:c15,c5
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - name: default-token-54qx0
      secret:
        defaultMode: 420
        secretName: default-token-54qx0
  status:
    phase: Pending
    qosClass: Burstable
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicationController","namespace":"mem-tfrs-dev","name":"postgresql-22","uid":"889bb459-1cdf-11e8-8a7d-005056832285","apiVersion":"v1","resourceVersion":"357947351"}}
      kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu limit for container
        postgresql'
      openshift.io/deployment-config.latest-version: "22"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.name: postgresql-22
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: postgresql-22-
    labels:
      deployment: postgresql-22
      deploymentconfig: postgresql
      name: postgresql
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: postgresql-22
      uid: 889bb459-1cdf-11e8-8a7d-005056832285
  spec:
    containers:
    - env:
      - name: POSTGRESQL_DATABASE
        value: tfrs
      - name: POSTGRESQL_USER
        valueFrom:
          secretKeyRef:
            key: DATABASE_USER
            name: tfrs-postgresql
      - name: POSTGRESQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: DATABASE_PASSWORD
            name: tfrs-postgresql
      image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 5432
        timeoutSeconds: 1
      name: postgresql
      ports:
      - containerPort: 5432
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/sh
          - -i
          - -c
          - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT
            1'
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 2Gi
        requests:
          cpu: 500m
          memory: 2Gi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        runAsUser: 1000220000
        seLinuxOptions:
          level: s0:c15,c5
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/pgsql/data
        name: postgresql-data
      - mountPath: /postgresql-backup
        name: volume-r83io
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-54qx0
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-vuq9e
    nodeName: ociopf-p-185.dmz
    nodeSelector:
      region: app
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000220000
      seLinuxOptions:
        level: s0:c15,c5
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - name: postgresql-data
      persistentVolumeClaim:
        claimName: postgresql-cns
    - name: volume-r83io
      persistentVolumeClaim:
        claimName: postgresql-backup-cns
    - name: default-token-54qx0
      secret:
        defaultMode: 420
        secretName: default-token-54qx0
  status:
    phase: Pending
    qosClass: Burstable
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicationController","namespace":"mem-tfrs-dev","name":"postgresql-bypass-3","uid":"2f561937-1e6f-11e8-8a7d-005056832285","apiVersion":"v1","resourceVersion":"359242419"}}
      openshift.io/deployment-config.latest-version: "3"
      openshift.io/deployment-config.name: postgresql-bypass
      openshift.io/deployment.name: postgresql-bypass-3
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: postgresql-bypass-3-
    labels:
      deployment: postgresql-bypass-3
      deploymentconfig: postgresql-bypass
      name: postgresql-bypass
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: postgresql-bypass-3
      uid: 2f561937-1e6f-11e8-8a7d-005056832285
  spec:
    containers:
    - env:
      - name: POSTGRESQL_DATABASE
        value: tfrs
      - name: POSTGRESQL_USER
        valueFrom:
          secretKeyRef:
            key: DATABASE_USER
            name: tfrs-postgresql
      - name: POSTGRESQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: DATABASE_PASSWORD
            name: tfrs-postgresql
      image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 5432
        timeoutSeconds: 1
      name: postgresql-bypass
      ports:
      - containerPort: 5432
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/sh
          - -i
          - -c
          - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT
            1'
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 500m
          memory: 512Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        runAsUser: 1000220000
        seLinuxOptions:
          level: s0:c15,c5
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/pgsql/data
        name: postgresql-data-bypass
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-54qx0
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-vuq9e
    nodeName: ociopf-p-194.dmz
    nodeSelector:
      region: app
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000220000
      seLinuxOptions:
        level: s0:c15,c5
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - name: postgresql-data-bypass
      persistentVolumeClaim:
        claimName: postgresql-bypass-cns
    - name: default-token-54qx0
      secret:
        defaultMode: 420
        secretName: default-token-54qx0
  status:
    phase: Pending
    qosClass: Guaranteed
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicationController","namespace":"mem-tfrs-dev","name":"postgresql-standby-1","uid":"46750da5-1dab-11e8-8a7d-005056832285","apiVersion":"v1","resourceVersion":"359059256"}}
      kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu request for container
        postgresql-standby; cpu limit for container postgresql-standby'
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: postgresql-standby
      openshift.io/deployment.name: postgresql-standby-1
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: postgresql-standby-1-
    labels:
      deployment: postgresql-standby-1
      deploymentconfig: postgresql-standby
      name: postgresql-standby
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: postgresql-standby-1
      uid: 46750da5-1dab-11e8-8a7d-005056832285
  spec:
    containers:
    - env:
      - name: POSTGRESQL_DATABASE
        value: tfrs
      - name: POSTGRESQL_USER
        valueFrom:
          secretKeyRef:
            key: DATABASE_USER
            name: tfrs-postgresql
      - name: POSTGRESQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: DATABASE_PASSWORD
            name: tfrs-postgresql
      image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 5432
        timeoutSeconds: 1
      name: postgresql-standby
      ports:
      - containerPort: 5432
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/sh
          - -i
          - -c
          - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT
            1'
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 512Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        runAsUser: 1000220000
        seLinuxOptions:
          level: s0:c15,c5
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/pgsql/data
        name: postgresql-data-standby
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-54qx0
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-vuq9e
    nodeName: ociopf-p-189.dmz
    nodeSelector:
      region: app
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000220000
      seLinuxOptions:
        level: s0:c15,c5
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - name: postgresql-data-standby
      persistentVolumeClaim:
        claimName: postgresql-standby-cns
    - name: default-token-54qx0
      secret:
        defaultMode: 420
        secretName: default-token-54qx0
  status:
    phase: Pending
    qosClass: Burstable
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicationController","namespace":"mem-tfrs-dev","name":"schema-spy-10","uid":"0d3901f9-05f5-11e8-b39a-0050568348cc","apiVersion":"v1","resourceVersion":"359203534"}}
      openshift.io/deployment-config.latest-version: "10"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.name: schema-spy-10
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: schema-spy-10-
    labels:
      deployment: schema-spy-10
      deploymentconfig: schema-spy
      name: schema-spy
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: schema-spy-10
      uid: 0d3901f9-05f5-11e8-b39a-0050568348cc
  spec:
    containers:
    - env:
      - name: DATABASE_SERVICE_NAME
        value: postgresql
      - name: POSTGRESQL_DATABASE
        value: tfrs
      - name: POSTGRESQL_USER
        valueFrom:
          secretKeyRef:
            key: DATABASE_USER
            name: tfrs-postgresql
      - name: POSTGRESQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: DATABASE_PASSWORD
            name: tfrs-postgresql
      image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3000
      name: schema-spy
      ports:
      - containerPort: 8080
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3000
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 500m
          memory: 512Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        runAsUser: 1000220000
        seLinuxOptions:
          level: s0:c15,c5
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-54qx0
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-vuq9e
    nodeName: ociopf-p-184.dmz
    nodeSelector:
      region: app
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000220000
      seLinuxOptions:
        level: s0:c15,c5
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - name: default-token-54qx0
      secret:
        defaultMode: 420
        secretName: default-token-54qx0
  status:
    phase: Pending
    qosClass: Guaranteed
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicationController","namespace":"mem-tfrs-dev","name":"tfrs-366","uid":"984e7d39-203c-11e8-8a7d-005056832285","apiVersion":"v1","resourceVersion":"360599574"}}
      kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu request for container
        tfrs-app; cpu limit for container tfrs-app'
      openshift.io/deployment-config.latest-version: "366"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.name: tfrs-366
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: tfrs-366-
    labels:
      deployment: tfrs-366
      deploymentconfig: tfrs
      name: tfrs
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: tfrs-366
      uid: 984e7d39-203c-11e8-8a7d-005056832285
  spec:
    containers:
    - env:
      - name: DATABASE_SERVICE_NAME
        value: postgresql
      - name: DATABASE_ENGINE
        value: postgresql
      - name: DATABASE_NAME
        value: tfrs
      - name: APP_CONFIG
      - name: DJANGO_DEBUG
        value: "True"
      - name: DATABASE_USER
        valueFrom:
          secretKeyRef:
            key: DATABASE_USER
            name: tfrs-postgresql
      - name: DATABASE_PASSWORD
        valueFrom:
          secretKeyRef:
            key: DATABASE_PASSWORD
            name: tfrs-postgresql
      image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:7796028de7c24ac8b151b72520579b86535107488f763a4ca702cf7b5f16c844
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      name: tfrs-app
      ports:
      - containerPort: 8080
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: "1"
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 512Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        runAsUser: 1000220000
        seLinuxOptions:
          level: s0:c15,c5
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-54qx0
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-vuq9e
    nodeName: ociopf-p-194.dmz
    nodeSelector:
      region: app
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000220000
      seLinuxOptions:
        level: s0:c15,c5
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - name: default-token-54qx0
      secret:
        defaultMode: 420
        secretName: default-token-54qx0
  status:
    phase: Pending
    qosClass: Burstable
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicationController","namespace":"mem-tfrs-dev","name":"tfrs-bypass-19","uid":"96d03f53-1e7b-11e8-8a7d-005056832285","apiVersion":"v1","resourceVersion":"359317454"}}
      openshift.io/deployment-config.latest-version: "19"
      openshift.io/deployment-config.name: tfrs-bypass
      openshift.io/deployment.name: tfrs-bypass-19
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: tfrs-bypass-19-
    labels:
      deployment: tfrs-bypass-19
      deploymentconfig: tfrs-bypass
      name: tfrs-bypass
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: tfrs-bypass-19
      uid: 96d03f53-1e7b-11e8-8a7d-005056832285
  spec:
    containers:
    - env:
      - name: DATABASE_SERVICE_NAME
        value: postgresql-bypass
      - name: DATABASE_ENGINE
        value: postgresql
      - name: DATABASE_NAME
        value: tfrs
      - name: APP_CONFIG
      - name: DJANGO_DEBUG
        value: "True"
      - name: BYPASS_HEADER_AUTHENTICATION
        value: "True"
      - name: DATABASE_USER
        valueFrom:
          secretKeyRef:
            key: DATABASE_USER
            name: tfrs-postgresql
      - name: DATABASE_PASSWORD
        valueFrom:
          secretKeyRef:
            key: DATABASE_PASSWORD
            name: tfrs-postgresql
      image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:9a3f7138e27abdd286ed7dfb38260914991cb8ef747e3a45a4df38e5992d961e
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      name: tfrs-bypass-app
      ports:
      - containerPort: 8080
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: 250m
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        runAsUser: 1000220000
        seLinuxOptions:
          level: s0:c15,c5
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-54qx0
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-vuq9e
    nodeName: ociopf-p-194.dmz
    nodeSelector:
      region: app
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000220000
      seLinuxOptions:
        level: s0:c15,c5
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - name: default-token-54qx0
      secret:
        defaultMode: 420
        secretName: default-token-54qx0
  status:
    phase: Pending
    qosClass: Guaranteed
kind: List
metadata: {}
