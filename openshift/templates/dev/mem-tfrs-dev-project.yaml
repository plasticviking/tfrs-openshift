apiVersion: v1
items:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      build: caddy-app
      template: caddy-template
    name: caddy-app
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: caddy-app:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: /utils/caddy-proxy
      git:
        uri: https://github.com/BCDevOps/openshift-tools.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: bcgov-s2i-caddy:latest
          namespace: openshift
      type: Source
    triggers:
    - github:
        secret: dLUFqHx4HXi80yTFi5rEaEfbcaoFLtLxsPF5nFJe
      type: GitHub
    - generic:
        secret: KmbAl3HF5ttakkEvGyV20RXwrXge1XhuSQbQPdch
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: request-logger
    name: request-logger
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: request-logger:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: /utils/request_logger
      git:
        ref: master
        uri: https://github.com/bcdevops/openshift-tools/
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: python:3.5
          namespace: openshift
      type: Source
    triggers:
    - generic:
        secret: d8ba7ff148c0970c
      type: Generic
    - github:
        secret: e27a392996821e2d
      type: GitHub
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: Build
  metadata:
    annotations:
      openshift.io/build-config.name: caddy-app
      openshift.io/build.number: "1"
    creationTimestamp: null
    labels:
      build: caddy-app
      buildconfig: caddy-app
      openshift.io/build-config.name: caddy-app
      openshift.io/build.start-policy: Serial
      template: caddy-template
    name: caddy-app-1
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: caddy-app
      uid: 4d94fedd-d53b-11e7-9f70-005056832285
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: caddy-app:latest
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      contextDir: /utils/caddy-proxy
      git:
        uri: https://github.com/BCDevOps/openshift-tools.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: DockerImage
          name: 172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:2170a33f396a7d128c361fed5d582896715a751c41d60cbad406a251d730d817
        pullSecret:
          name: builder-dockercfg-hy7p9
      type: Source
    triggeredBy:
    - imageChangeBuild:
        fromRef:
          kind: ImageStreamTag
          name: bcgov-s2i-caddy:latest
          namespace: openshift
        imageID: 172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:2170a33f396a7d128c361fed5d582896715a751c41d60cbad406a251d730d817
      message: Image change
  status:
    cancelled: true
    config:
      name: caddy-app
    message: The build was cancelled by the user.
    output: {}
    phase: New
    reason: CancelledBuild
- apiVersion: v1
  kind: Build
  metadata:
    annotations:
      openshift.io/build-config.name: caddy-app
      openshift.io/build.number: "4"
      openshift.io/build.pod-name: caddy-app-4-build
    creationTimestamp: null
    labels:
      build: caddy-app
      buildconfig: caddy-app
      openshift.io/build-config.name: caddy-app
      openshift.io/build.start-policy: Serial
      template: caddy-template
    name: caddy-app-4
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: caddy-app
      uid: 4d94fedd-d53b-11e7-9f70-005056832285
  spec:
    nodeSelector: null
    output:
      pushSecret:
        name: builder-dockercfg-hy7p9
      to:
        kind: ImageStreamTag
        name: caddy-app:latest
    postCommit: {}
    resources: {}
    revision:
      git:
        author:
          email: shea.phillips@gmail.com
          name: Shea Phillips
        commit: 0849f017d062e460985f166d3ad888ee9bbf37ba
        committer:
          email: shea.phillips@gmail.com
          name: Shea Phillips
        message: Merge branch 'master' of github.com:BCDevOps/openshift-tools
      type: Git
    serviceAccount: builder
    source:
      contextDir: /utils/caddy-proxy
      git:
        uri: https://github.com/BCDevOps/openshift-tools.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: DockerImage
          name: 172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:ff1bb66dd681074f0b1bef4a983c5dde7cb3a105db2483601b6fc01e7cb487ff
        pullSecret:
          name: builder-dockercfg-hy7p9
      type: Source
    triggeredBy:
    - imageChangeBuild:
        fromRef:
          kind: ImageStreamTag
          name: bcgov-s2i-caddy:latest
          namespace: openshift
        imageID: 172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:ff1bb66dd681074f0b1bef4a983c5dde7cb3a105db2483601b6fc01e7cb487ff
      message: Image change
  status:
    config:
      name: caddy-app
    output:
      to:
        imageDigest: sha256:081ed38c061c0ee87a676cb4306fd9df1226d670b185999c2c4ee2660811e276
    outputDockerImageReference: 172.50.0.2:5000/mem-tfrs-dev/caddy-app:latest
    phase: New
    stages:
    - durationMilliseconds: 1898
      name: FetchInputs
      startTime: 2018-03-08T00:15:55Z
      steps:
      - durationMilliseconds: 1898
        name: FetchGitSource
        startTime: 2018-03-08T00:15:55Z
    - durationMilliseconds: 565
      name: CommitContainer
      startTime: 2018-03-08T00:16:06Z
      steps:
      - durationMilliseconds: 565
        name: CommitContainer
        startTime: 2018-03-08T00:16:06Z
    - durationMilliseconds: 1467
      name: Assemble
      startTime: 2018-03-08T00:16:06Z
      steps:
      - durationMilliseconds: 1467
        name: AssembleBuildScripts
        startTime: 2018-03-08T00:16:06Z
    - durationMilliseconds: 3972
      name: PushImage
      startTime: 2018-03-08T00:16:07Z
      steps:
      - durationMilliseconds: 3972
        name: PushImage
        startTime: 2018-03-08T00:16:07Z
- apiVersion: v1
  kind: Build
  metadata:
    annotations:
      openshift.io/build-config.name: caddy-app
      openshift.io/build.number: "5"
      openshift.io/build.pod-name: caddy-app-5-build
    creationTimestamp: null
    labels:
      build: caddy-app
      buildconfig: caddy-app
      openshift.io/build-config.name: caddy-app
      openshift.io/build.start-policy: Serial
      template: caddy-template
    name: caddy-app-5
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: caddy-app
      uid: 4d94fedd-d53b-11e7-9f70-005056832285
  spec:
    nodeSelector: null
    output:
      pushSecret:
        name: builder-dockercfg-hy7p9
      to:
        kind: ImageStreamTag
        name: caddy-app:latest
    postCommit: {}
    resources: {}
    revision:
      git:
        author:
          email: angelika.ehlers@gov.bc.ca
          name: Angelika Ehlers
        commit: 7cbb153b0d32be58cf6a749359b3a285e8e201c8
        committer:
          email: noreply@github.com
          name: GitHub
        message: Update README.md
      type: Git
    serviceAccount: builder
    source:
      contextDir: /utils/caddy-proxy
      git:
        uri: https://github.com/BCDevOps/openshift-tools.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: DockerImage
          name: 172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:6f11f70d5e50d4b9daef5d5304335fdc43f018d322bb9b74c40738502a9f55ee
        pullSecret:
          name: builder-dockercfg-hy7p9
      type: Source
    triggeredBy:
    - imageChangeBuild:
        fromRef:
          kind: ImageStreamTag
          name: bcgov-s2i-caddy:latest
          namespace: openshift
        imageID: 172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:6f11f70d5e50d4b9daef5d5304335fdc43f018d322bb9b74c40738502a9f55ee
      message: Image change
  status:
    config:
      name: caddy-app
    output:
      to:
        imageDigest: sha256:3fb4bef4b45549ce53c57f4f4992330f9c317f1d92c0b2db6a0415165d8021d4
    outputDockerImageReference: 172.50.0.2:5000/mem-tfrs-dev/caddy-app:latest
    phase: New
    stages:
    - durationMilliseconds: 2070
      name: FetchInputs
      startTime: 2018-03-22T04:05:50Z
      steps:
      - durationMilliseconds: 2070
        name: FetchGitSource
        startTime: 2018-03-22T04:05:50Z
    - durationMilliseconds: 832
      name: CommitContainer
      startTime: 2018-03-22T04:06:07Z
      steps:
      - durationMilliseconds: 832
        name: CommitContainer
        startTime: 2018-03-22T04:06:07Z
    - durationMilliseconds: 2105
      name: Assemble
      startTime: 2018-03-22T04:06:06Z
      steps:
      - durationMilliseconds: 2105
        name: AssembleBuildScripts
        startTime: 2018-03-22T04:06:06Z
    - durationMilliseconds: 5150
      name: PushImage
      startTime: 2018-03-22T04:06:08Z
      steps:
      - durationMilliseconds: 5150
        name: PushImage
        startTime: 2018-03-22T04:06:08Z
- apiVersion: v1
  kind: Build
  metadata:
    annotations:
      openshift.io/build-config.name: caddy-app
      openshift.io/build.number: "6"
      openshift.io/build.pod-name: caddy-app-6-build
    creationTimestamp: null
    labels:
      build: caddy-app
      buildconfig: caddy-app
      openshift.io/build-config.name: caddy-app
      openshift.io/build.start-policy: Serial
      template: caddy-template
    name: caddy-app-6
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: caddy-app
      uid: 4d94fedd-d53b-11e7-9f70-005056832285
  spec:
    nodeSelector: null
    output:
      pushSecret:
        name: builder-dockercfg-hy7p9
      to:
        kind: ImageStreamTag
        name: caddy-app:latest
    postCommit: {}
    resources: {}
    revision:
      git:
        author:
          email: angelika.ehlers@gov.bc.ca
          name: Angelika Ehlers
        commit: 7cbb153b0d32be58cf6a749359b3a285e8e201c8
        committer:
          email: noreply@github.com
          name: GitHub
        message: Update README.md
      type: Git
    serviceAccount: builder
    source:
      contextDir: /utils/caddy-proxy
      git:
        uri: https://github.com/BCDevOps/openshift-tools.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: DockerImage
          name: 172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:aa24e7c04a552b6c41ef41e1b0717dc6895cf41e2d625977a5d569a402b4b0f8
        pullSecret:
          name: builder-dockercfg-hy7p9
      type: Source
    triggeredBy:
    - imageChangeBuild:
        fromRef:
          kind: ImageStreamTag
          name: bcgov-s2i-caddy:latest
          namespace: openshift
        imageID: 172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:aa24e7c04a552b6c41ef41e1b0717dc6895cf41e2d625977a5d569a402b4b0f8
      message: Image change
  status:
    config:
      name: caddy-app
    output:
      to:
        imageDigest: sha256:3a4b217e96a175315d82ab8c93aa78894847e3c472dbce9f1ab3c9e6556e0e3a
    outputDockerImageReference: 172.50.0.2:5000/mem-tfrs-dev/caddy-app:latest
    phase: New
    stages:
    - durationMilliseconds: 2057
      name: FetchInputs
      startTime: 2018-03-22T04:39:33Z
      steps:
      - durationMilliseconds: 2057
        name: FetchGitSource
        startTime: 2018-03-22T04:39:33Z
    - durationMilliseconds: 788
      name: CommitContainer
      startTime: 2018-03-22T04:39:45Z
      steps:
      - durationMilliseconds: 788
        name: CommitContainer
        startTime: 2018-03-22T04:39:45Z
    - durationMilliseconds: 1731
      name: Assemble
      startTime: 2018-03-22T04:39:44Z
      steps:
      - durationMilliseconds: 1731
        name: AssembleBuildScripts
        startTime: 2018-03-22T04:39:44Z
    - durationMilliseconds: 4289
      name: PushImage
      startTime: 2018-03-22T04:39:46Z
      steps:
      - durationMilliseconds: 4289
        name: PushImage
        startTime: 2018-03-22T04:39:46Z
- apiVersion: v1
  kind: Build
  metadata:
    annotations:
      openshift.io/build-config.name: caddy-app
      openshift.io/build.number: "7"
      openshift.io/build.pod-name: caddy-app-7-build
    creationTimestamp: null
    labels:
      build: caddy-app
      buildconfig: caddy-app
      openshift.io/build-config.name: caddy-app
      openshift.io/build.start-policy: Serial
      template: caddy-template
    name: caddy-app-7
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: caddy-app
      uid: 4d94fedd-d53b-11e7-9f70-005056832285
  spec:
    nodeSelector: null
    output:
      pushSecret:
        name: builder-dockercfg-hy7p9
      to:
        kind: ImageStreamTag
        name: caddy-app:latest
    postCommit: {}
    resources: {}
    revision:
      git:
        author:
          email: angelika.ehlers@gov.bc.ca
          name: Angelika Ehlers
        commit: 7cbb153b0d32be58cf6a749359b3a285e8e201c8
        committer:
          email: noreply@github.com
          name: GitHub
        message: Update README.md
      type: Git
    serviceAccount: builder
    source:
      contextDir: /utils/caddy-proxy
      git:
        uri: https://github.com/BCDevOps/openshift-tools.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: DockerImage
          name: 172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:a8444823990723ca355acc269d20fd05c198ba169b7b06b5473fb4b8fa3f3297
        pullSecret:
          name: builder-dockercfg-hy7p9
      type: Source
    triggeredBy:
    - imageChangeBuild:
        fromRef:
          kind: ImageStreamTag
          name: bcgov-s2i-caddy:latest
          namespace: openshift
        imageID: 172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:a8444823990723ca355acc269d20fd05c198ba169b7b06b5473fb4b8fa3f3297
      message: Image change
  status:
    config:
      name: caddy-app
    output:
      to:
        imageDigest: sha256:bf286d31458cd3ecab9016f0d730a4add0a34618624cee7f988f6ae1af83108e
    outputDockerImageReference: 172.50.0.2:5000/mem-tfrs-dev/caddy-app:latest
    phase: New
    stages:
    - durationMilliseconds: 1763
      name: FetchInputs
      startTime: 2018-03-22T04:42:47Z
      steps:
      - durationMilliseconds: 1763
        name: FetchGitSource
        startTime: 2018-03-22T04:42:47Z
    - durationMilliseconds: 795
      name: CommitContainer
      startTime: 2018-03-22T04:42:57Z
      steps:
      - durationMilliseconds: 795
        name: CommitContainer
        startTime: 2018-03-22T04:42:57Z
    - durationMilliseconds: 2055
      name: Assemble
      startTime: 2018-03-22T04:42:56Z
      steps:
      - durationMilliseconds: 2055
        name: AssembleBuildScripts
        startTime: 2018-03-22T04:42:56Z
    - durationMilliseconds: 5652
      name: PushImage
      startTime: 2018-03-22T04:42:58Z
      steps:
      - durationMilliseconds: 5652
        name: PushImage
        startTime: 2018-03-22T04:42:58Z
- apiVersion: v1
  kind: Build
  metadata:
    annotations:
      openshift.io/build-config.name: caddy-app
      openshift.io/build.number: "8"
      openshift.io/build.pod-name: caddy-app-8-build
    creationTimestamp: null
    labels:
      build: caddy-app
      buildconfig: caddy-app
      openshift.io/build-config.name: caddy-app
      openshift.io/build.start-policy: Serial
      template: caddy-template
    name: caddy-app-8
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: caddy-app
      uid: 4d94fedd-d53b-11e7-9f70-005056832285
  spec:
    nodeSelector: null
    output:
      pushSecret:
        name: builder-dockercfg-hy7p9
      to:
        kind: ImageStreamTag
        name: caddy-app:latest
    postCommit: {}
    resources: {}
    revision:
      git:
        author:
          email: angelika.ehlers@gov.bc.ca
          name: Angelika Ehlers
        commit: 7cbb153b0d32be58cf6a749359b3a285e8e201c8
        committer:
          email: noreply@github.com
          name: GitHub
        message: Update README.md
      type: Git
    serviceAccount: builder
    source:
      contextDir: /utils/caddy-proxy
      git:
        uri: https://github.com/BCDevOps/openshift-tools.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: DockerImage
          name: 172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:aa042b6bf86c4a5b2cd22b0d4f87c553f5a4c797c84c92a296024a479f33e5cc
        pullSecret:
          name: builder-dockercfg-hy7p9
      type: Source
    triggeredBy:
    - imageChangeBuild:
        fromRef:
          kind: ImageStreamTag
          name: bcgov-s2i-caddy:latest
          namespace: openshift
        imageID: 172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:aa042b6bf86c4a5b2cd22b0d4f87c553f5a4c797c84c92a296024a479f33e5cc
      message: Image change
  status:
    config:
      name: caddy-app
    output:
      to:
        imageDigest: sha256:d55f8cb8d03c061186d1c0fcb32347dec5e2cb05d73a25ec4fa78522cf31ea36
    outputDockerImageReference: 172.50.0.2:5000/mem-tfrs-dev/caddy-app:latest
    phase: New
    stages:
    - durationMilliseconds: 1652
      name: FetchInputs
      startTime: 2018-03-22T04:46:39Z
      steps:
      - durationMilliseconds: 1652
        name: FetchGitSource
        startTime: 2018-03-22T04:46:39Z
    - durationMilliseconds: 792
      name: CommitContainer
      startTime: 2018-03-22T04:46:49Z
      steps:
      - durationMilliseconds: 792
        name: CommitContainer
        startTime: 2018-03-22T04:46:49Z
    - durationMilliseconds: 1863
      name: Assemble
      startTime: 2018-03-22T04:46:48Z
      steps:
      - durationMilliseconds: 1863
        name: AssembleBuildScripts
        startTime: 2018-03-22T04:46:48Z
    - durationMilliseconds: 3155
      name: PushImage
      startTime: 2018-03-22T04:46:50Z
      steps:
      - durationMilliseconds: 3155
        name: PushImage
        startTime: 2018-03-22T04:46:50Z
- apiVersion: v1
  kind: Build
  metadata:
    annotations:
      openshift.io/build-config.name: request-logger
      openshift.io/build.number: "1"
      openshift.io/build.pod-name: request-logger-1-build
    creationTimestamp: null
    labels:
      app: request-logger
      buildconfig: request-logger
      openshift.io/build-config.name: request-logger
      openshift.io/build.start-policy: Serial
    name: request-logger-1
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: request-logger
      uid: 654b6efb-d53e-11e7-9f70-005056832285
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: request-logger:latest
    postCommit: {}
    resources: {}
    revision:
      git:
        author:
          email: shea.phillips@gmail.com
          name: Shea Phillips
        commit: b46c7b25b3bc079eb1fcd497b3e1eb0f0b60285a
        committer:
          email: shea.phillips@gmail.com
          name: Shea Phillips
        message: '- change to json format - add storage class-based quota'
      type: Git
    serviceAccount: builder
    source:
      contextDir: /utils/request_logger
      git:
        ref: master
        uri: https://github.com/bcdevops/openshift-tools/
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: DockerImage
          name: registry.access.redhat.com/rhscl/python-35-rhel7@sha256:873ab7c799c5da39fb76e27e93f6420a5ab72e73c3daa8bcbc4d198dca53e379
      type: Source
    triggeredBy:
    - imageChangeBuild:
        fromRef:
          kind: ImageStreamTag
          name: python:3.5
          namespace: openshift
        imageID: registry.access.redhat.com/rhscl/python-35-rhel7@sha256:873ab7c799c5da39fb76e27e93f6420a5ab72e73c3daa8bcbc4d198dca53e379
      message: Image change
  status:
    config:
      name: request-logger
    logSnippet: 'Error on reading termination message from logs: failed to ...f70-005056832285/sti-build_0.log:
      no such file or directory'
    message: Failed to push the image to the registry.
    output: {}
    outputDockerImageReference: 172.50.0.2:5000/mem-tfrs-dev/request-logger:latest
    phase: New
    reason: PushImageToRegistryFailed
    stages:
    - durationMilliseconds: 1505
      name: FetchInputs
      startTime: 2017-11-29T19:50:48Z
      steps:
      - durationMilliseconds: 1505
        name: FetchGitSource
        startTime: 2017-11-29T19:50:48Z
    - durationMilliseconds: 5508
      name: CommitContainer
      startTime: 2017-11-29T19:51:00Z
      steps:
      - durationMilliseconds: 5508
        name: CommitContainer
        startTime: 2017-11-29T19:51:00Z
    - durationMilliseconds: 15396
      name: Assemble
      startTime: 2017-11-29T19:50:50Z
      steps:
      - durationMilliseconds: 15396
        name: AssembleBuildScripts
        startTime: 2017-11-29T19:50:50Z
    - name: PostCommit
      startTime: 2017-11-29T19:51:06Z
      steps:
      - name: RunPostCommitHook
        startTime: 2017-11-29T19:51:06Z
    - durationMilliseconds: 1016
      name: PushImage
      startTime: 2017-11-29T19:51:06Z
      steps:
      - durationMilliseconds: 1016
        name: PushImage
        startTime: 2017-11-29T19:51:06Z
- apiVersion: v1
  kind: Build
  metadata:
    annotations:
      openshift.io/build-config.name: request-logger
      openshift.io/build.number: "2"
      openshift.io/build.pod-name: request-logger-2-build
    creationTimestamp: null
    labels:
      app: request-logger
      buildconfig: request-logger
      openshift.io/build-config.name: request-logger
      openshift.io/build.start-policy: Serial
    name: request-logger-2
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: request-logger
      uid: 654b6efb-d53e-11e7-9f70-005056832285
  spec:
    nodeSelector: null
    output:
      pushSecret:
        name: builder-dockercfg-hy7p9
      to:
        kind: ImageStreamTag
        name: request-logger:latest
    postCommit: {}
    resources: {}
    revision:
      git:
        author:
          email: shea.phillips@gmail.com
          name: Shea Phillips
        commit: b46c7b25b3bc079eb1fcd497b3e1eb0f0b60285a
        committer:
          email: shea.phillips@gmail.com
          name: Shea Phillips
        message: '- change to json format - add storage class-based quota'
      type: Git
    serviceAccount: builder
    source:
      contextDir: /utils/request_logger
      git:
        ref: master
        uri: https://github.com/bcdevops/openshift-tools/
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: DockerImage
          name: registry.access.redhat.com/rhscl/python-35-rhel7@sha256:873ab7c799c5da39fb76e27e93f6420a5ab72e73c3daa8bcbc4d198dca53e379
      type: Source
    triggeredBy:
    - message: Manually triggered
  status:
    config:
      name: request-logger
    output:
      to:
        imageDigest: sha256:6a09a8baa58acd905518d5ff502f01d00c32ebead94853b2202db39991b0ccc3
    outputDockerImageReference: 172.50.0.2:5000/mem-tfrs-dev/request-logger:latest
    phase: New
    stages:
    - durationMilliseconds: 1288
      name: FetchInputs
      startTime: 2017-11-29T19:51:21Z
      steps:
      - durationMilliseconds: 1288
        name: FetchGitSource
        startTime: 2017-11-29T19:51:21Z
    - durationMilliseconds: 4813
      name: CommitContainer
      startTime: 2017-11-29T19:51:27Z
      steps:
      - durationMilliseconds: 4813
        name: CommitContainer
        startTime: 2017-11-29T19:51:27Z
    - durationMilliseconds: 8924
      name: Assemble
      startTime: 2017-11-29T19:51:23Z
      steps:
      - durationMilliseconds: 8924
        name: AssembleBuildScripts
        startTime: 2017-11-29T19:51:23Z
    - name: PostCommit
      startTime: 2017-11-29T19:51:32Z
      steps:
      - name: RunPostCommitHook
        startTime: 2017-11-29T19:51:32Z
    - durationMilliseconds: 26277
      name: PushImage
      startTime: 2017-11-29T19:51:32Z
      steps:
      - durationMilliseconds: 26277
        name: PushImage
        startTime: 2017-11-29T19:51:32Z
- apiVersion: v1
  kind: Build
  metadata:
    annotations:
      openshift.io/build-config.name: request-logger
      openshift.io/build.number: "3"
      openshift.io/build.pod-name: request-logger-3-build
    creationTimestamp: null
    labels:
      app: request-logger
      buildconfig: request-logger
      openshift.io/build-config.name: request-logger
      openshift.io/build.start-policy: Serial
    name: request-logger-3
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: request-logger
      uid: 654b6efb-d53e-11e7-9f70-005056832285
  spec:
    nodeSelector: null
    output:
      pushSecret:
        name: builder-dockercfg-hy7p9
      to:
        kind: ImageStreamTag
        name: request-logger:latest
    postCommit: {}
    resources: {}
    revision:
      git:
        author:
          email: steven.barre@dxcas.com
          name: Steven Barre
        commit: 08e595837031dd35528ba68c5a29fcfb37201abe
        committer:
          email: steven.barre@dxcas.com
          name: Steven Barre
        message: Adding storage group to rolling-reboot
      type: Git
    serviceAccount: builder
    source:
      contextDir: /utils/request_logger
      git:
        ref: master
        uri: https://github.com/bcdevops/openshift-tools/
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: DockerImage
          name: registry.access.redhat.com/rhscl/python-35-rhel7@sha256:27ce32b0855dea7b078048064b72e1554069ec737ef3398fa740cc72ec82ddb9
      type: Source
    triggeredBy:
    - imageChangeBuild:
        fromRef:
          kind: ImageStreamTag
          name: python:3.5
          namespace: openshift
        imageID: registry.access.redhat.com/rhscl/python-35-rhel7@sha256:27ce32b0855dea7b078048064b72e1554069ec737ef3398fa740cc72ec82ddb9
      message: Image change
  status:
    config:
      name: request-logger
    output:
      to:
        imageDigest: sha256:a6226da1c2150ea1079ee99c562588be59141547159365e72c8c0d1f8d69110e
    outputDockerImageReference: 172.50.0.2:5000/mem-tfrs-dev/request-logger:latest
    phase: New
    stages:
    - durationMilliseconds: 1637
      name: FetchInputs
      startTime: 2018-02-27T23:11:12Z
      steps:
      - durationMilliseconds: 1637
        name: FetchGitSource
        startTime: 2018-02-27T23:11:12Z
    - durationMilliseconds: 5590
      name: CommitContainer
      startTime: 2018-02-27T23:11:49Z
      steps:
      - durationMilliseconds: 5590
        name: CommitContainer
        startTime: 2018-02-27T23:11:49Z
    - durationMilliseconds: 12626
      name: Assemble
      startTime: 2018-02-27T23:11:42Z
      steps:
      - durationMilliseconds: 12626
        name: AssembleBuildScripts
        startTime: 2018-02-27T23:11:42Z
    - durationMilliseconds: 27853
      name: PushImage
      startTime: 2018-02-27T23:11:55Z
      steps:
      - durationMilliseconds: 27853
        name: PushImage
        startTime: 2018-02-27T23:11:55Z
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    generation: 1
    name: caddy-app
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: 172.50.0.2:5000/mem-tfrs-dev/caddy-app:latest
      generation: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: caddy-app
      template: caddy-template
    name: caddy-app
  spec:
    replicas: 0
    selector:
      app: caddy-app
      deploymentconfig: caddy-app
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/container.pathfinder.image.entrypoint: '["/sbin/tini","caddy","-quic","--conf","/etc/Caddyfile"]'
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: caddy-app
          deploymentconfig: caddy-app
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:d55f8cb8d03c061186d1c0fcb32347dec5e2cb05d73a25ec4fa78522cf31ea36
          imagePullPolicy: Always
          name: caddy-app
          ports:
          - containerPort: 2015
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc
            name: caddyfile-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: caddyfile
              path: Caddyfile
            name: caddyfile
          name: caddyfile-volume
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - caddy-app
        from:
          kind: ImageStreamTag
          name: caddy-app:latest
          namespace: mem-tfrs-dev
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the application server
    creationTimestamp: null
    generation: 1
    labels:
      template: tfrs-app-environment
    name: client
  spec:
    replicas: 1
    selector:
      name: client
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: client
        name: client
      spec:
        containers:
        - env:
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:127388e9d93451b039d0741d53784db4cb617c58d6524e2af8f6fd7d9c235336
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - client
        from:
          kind: ImageStreamTag
          name: client-develop:dev
          namespace: mem-tfrs-tools
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      template: postgresql-persistent-template
    name: postgresql
  spec:
    replicas: 1
    selector:
      name: postgresql
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2Gi
            requests:
              cpu: 500m
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
          - mountPath: /postgresql-backup
            name: volume-r83io
          - mountPath: /backup
            name: volume-wh3ob
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-cns
        - name: volume-r83io
          persistentVolumeClaim:
            claimName: postgresql-backup-cns
        - name: volume-wh3ob
          persistentVolumeClaim:
            claimName: postgresql-standby-cns
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:9.5
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      template: postgresql-persistent-template
    name: postgresql-bypass
  spec:
    replicas: 1
    selector:
      name: postgresql-bypass
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: postgresql-bypass
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql-bypass
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data-bypass
          - mountPath: /postgresql-backup
            name: volume-s540c
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data-bypass
          persistentVolumeClaim:
            claimName: postgresql-bypass-cns
        - name: volume-s540c
          persistentVolumeClaim:
            claimName: postgresql-backup-cns
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql-bypass
        from:
          kind: ImageStreamTag
          name: postgresql:9.5
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      template: postgresql-persistent-template
    name: postgresql-standby
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: postgresql-standby
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: postgresql-standby
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql-standby
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data-standby
          - mountPath: /postgresql-backup
            name: volume-7v94a
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data-standby
          persistentVolumeClaim:
            claimName: postgresql-standby-cns
        - name: volume-7v94a
          persistentVolumeClaim:
            claimName: postgresql-backup-cns
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql-standby
        from:
          kind: ImageStreamTag
          name: postgresql:9.5
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 1
    labels:
      app: request-logger
    name: request-logger
  spec:
    replicas: 1
    selector:
      deploymentconfig: request-logger
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: request-logger
          deploymentconfig: request-logger
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-tools/request-logger@sha256:bd2071b048447812c46073e247953b7747240033765e60c9ebf3604060566403
          imagePullPolicy: Always
          name: request-logger
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/app-root/src
            name: volume-8g9sa
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: reques_logger.py
              path: request_logger.py
            name: reques-logger
          name: volume-8g9sa
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - request-logger
        from:
          kind: ImageStreamTag
          name: request-logger:latest
          namespace: mem-tfrs-tools
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the container.
    creationTimestamp: null
    generation: 1
    name: schema-spy
  spec:
    replicas: 1
    selector:
      name: schema-spy
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: schema-spy
        name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - schema-spy
        from:
          kind: ImageStreamTag
          name: schema-spy:latest
          namespace: mem-tfrs-tools
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the application server
    creationTimestamp: null
    generation: 1
    labels:
      template: tfrs-app-environment
    name: tfrs
  spec:
    replicas: 1
    selector:
      name: tfrs
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        mid:
          execNewPod:
            command:
            - /bin/sh
            - -c
            - python manage.py migrate
            containerName: tfrs-app
          failurePolicy: Abort
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: tfrs
        name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
            value: /opt/app-root/src/gunicorn.cfg
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:c33fb861288fb55b44a499b9d7aaee1a6ebd14b51137612952b5934b8b013506
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - tfrs-app
        from:
          kind: ImageStreamTag
          name: tfrs-develop:dev
          namespace: mem-tfrs-tools
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the application server
    creationTimestamp: null
    generation: 1
    labels:
      template: tfrs-app-environment
    name: tfrs-bypass
  spec:
    replicas: 1
    selector:
      name: tfrs-bypass
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        mid:
          execNewPod:
            command:
            - /bin/sh
            - -c
            - python manage.py migrate
            containerName: tfrs-bypass-app
          failurePolicy: Abort
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: tfrs-bypass
        name: tfrs-bypass
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql-bypass
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: BYPASS_HEADER_AUTHENTICATION
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:83bfb277ec67d5880b8531a9fed087f3a7a384576696ff0f672a8a6ee893c20f
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-bypass-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - tfrs-bypass-app
        from:
          kind: ImageStreamTag
          name: tfrs-bypass:dev
          namespace: mem-tfrs-tools
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/desired-replicas: "1"
      openshift.io/deployer-pod.name: caddy-app-1-deploy
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: caddy-app
      openshift.io/deployment.cancelled: "true"
      openshift.io/deployment.phase: Failed
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: newer deployment was found running
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"caddy-app","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/caddy-app","uid":"e7332439-d53d-11e7-9f70-005056832285","resourceVersion":"276077289","generation":2,"creationTimestamp":"2017-11-29T19:45:50Z","labels":{"app":"caddy-app","template":"caddy-template"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ConfigChange"},{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["caddy-app"],"from":{"kind":"ImageStreamTag","namespace":"devops-sandbox-dev","name":"caddy-app:latest"},"lastTriggeredImage":"172.50.0.2:5000/devops-sandbox-dev/caddy-app@sha256:18fd4a39981dfacbf469064f7d1831a649fe54729dc4d0b2ac6392e29a788c0b"}}],"replicas":1,"test":false,"selector":{"app":"caddy-app","deploymentconfig":"caddy-app"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"caddy-app","deploymentconfig":"caddy-app"},"annotations":{"openshift.io/container.pathfinder.image.entrypoint":"[\"/sbin/tini\",\"caddy\",\"-quic\",\"--conf\",\"/etc/Caddyfile\"]","openshift.io/generated-by":"OpenShiftNewApp"}},"spec":{"volumes":[{"name":"caddyfile-volume","configMap":{"name":"caddyfile","items":[{"key":"caddyfile","path":"Caddyfile"}],"defaultMode":420}}],"containers":[{"name":"caddy-app","image":"172.50.0.2:5000/devops-sandbox-dev/caddy-app@sha256:18fd4a39981dfacbf469064f7d1831a649fe54729dc4d0b2ac6392e29a788c0b","ports":[{"containerPort":2015,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"caddyfile-volume","mountPath":"/etc"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":1,"observedGeneration":1,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"devops-sandbox-dev","name":"caddy-app:latest"}}}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2017-11-29T19:45:50Z","lastTransitionTime":"2017-11-29T19:45:50Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: caddy-app
      openshift.io/deployment-config.name: caddy-app
      template: caddy-template
    name: caddy-app-1
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: caddy-app
      uid: e7332439-d53d-11e7-9f70-005056832285
  spec:
    replicas: 0
    selector:
      app: caddy-app
      deployment: caddy-app-1
      deploymentconfig: caddy-app
    template:
      metadata:
        annotations:
          openshift.io/container.pathfinder.image.entrypoint: '["/sbin/tini","caddy","-quic","--conf","/etc/Caddyfile"]'
          openshift.io/deployment-config.latest-version: "1"
          openshift.io/deployment-config.name: caddy-app
          openshift.io/deployment.name: caddy-app-1
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: caddy-app
          deployment: caddy-app-1
          deploymentconfig: caddy-app
      spec:
        containers:
        - image: 172.50.0.2:5000/devops-sandbox-dev/caddy-app@sha256:18fd4a39981dfacbf469064f7d1831a649fe54729dc4d0b2ac6392e29a788c0b
          imagePullPolicy: Always
          name: caddy-app
          ports:
          - containerPort: 2015
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc
            name: caddyfile-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: caddyfile
              path: Caddyfile
            name: caddyfile
          name: caddyfile-volume
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "0"
      openshift.io/deployer-pod.completed-at: 2018-03-21 21:43:11 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-03-21 21:43:04 -0700 PDT
      openshift.io/deployer-pod.name: caddy-app-10-deploy
      openshift.io/deployment-config.latest-version: "10"
      openshift.io/deployment-config.name: caddy-app
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"caddy-app","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/caddy-app","uid":"e7332439-d53d-11e7-9f70-005056832285","resourceVersion":"382237653","generation":16,"creationTimestamp":"2017-11-29T19:45:50Z","labels":{"app":"caddy-app","template":"caddy-template"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["caddy-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-dev","name":"caddy-app:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:bf286d31458cd3ecab9016f0d730a4add0a34618624cee7f988f6ae1af83108e"}},{"type":"ConfigChange"}],"replicas":0,"test":false,"selector":{"app":"caddy-app","deploymentconfig":"caddy-app"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"caddy-app","deploymentconfig":"caddy-app"},"annotations":{"openshift.io/container.pathfinder.image.entrypoint":"[\"/sbin/tini\",\"caddy\",\"-quic\",\"--conf\",\"/etc/Caddyfile\"]","openshift.io/generated-by":"OpenShiftNewApp"}},"spec":{"volumes":[{"name":"caddyfile-volume","configMap":{"name":"caddyfile","items":[{"key":"caddyfile","path":"Caddyfile"}],"defaultMode":420}}],"containers":[{"name":"caddy-app","image":"172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:bf286d31458cd3ecab9016f0d730a4add0a34618624cee7f988f6ae1af83108e","ports":[{"containerPort":2015,"protocol":"TCP"}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"volumeMounts":[{"name":"caddyfile-volume","mountPath":"/etc"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":10,"observedGeneration":16,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:bf286d31458cd3ecab9016f0d730a4add0a34618624cee7f988f6ae1af83108e"}}}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-02-01T22:03:57Z","lastTransitionTime":"2018-02-01T22:03:57Z","message":"Deployment config does not have minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-03-22T04:39:59Z","lastTransitionTime":"2018-03-22T04:39:59Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"caddy-app-9\" successfully rolled out"}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: caddy-app
      openshift.io/deployment-config.name: caddy-app
      template: caddy-template
    name: caddy-app-10
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: caddy-app
      uid: e7332439-d53d-11e7-9f70-005056832285
  spec:
    replicas: 0
    selector:
      app: caddy-app
      deployment: caddy-app-10
      deploymentconfig: caddy-app
    template:
      metadata:
        annotations:
          openshift.io/container.pathfinder.image.entrypoint: '["/sbin/tini","caddy","-quic","--conf","/etc/Caddyfile"]'
          openshift.io/deployment-config.latest-version: "10"
          openshift.io/deployment-config.name: caddy-app
          openshift.io/deployment.name: caddy-app-10
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: caddy-app
          deployment: caddy-app-10
          deploymentconfig: caddy-app
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:bf286d31458cd3ecab9016f0d730a4add0a34618624cee7f988f6ae1af83108e
          imagePullPolicy: Always
          name: caddy-app
          ports:
          - containerPort: 2015
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc
            name: caddyfile-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: caddyfile
              path: Caddyfile
            name: caddyfile
          name: caddyfile-volume
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-21 21:47:01 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-03-21 21:46:53 -0700 PDT
      openshift.io/deployer-pod.name: caddy-app-11-deploy
      openshift.io/deployment-config.latest-version: "11"
      openshift.io/deployment-config.name: caddy-app
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"caddy-app","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/caddy-app","uid":"e7332439-d53d-11e7-9f70-005056832285","resourceVersion":"382243026","generation":17,"creationTimestamp":"2017-11-29T19:45:50Z","labels":{"app":"caddy-app","template":"caddy-template"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["caddy-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-dev","name":"caddy-app:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:d55f8cb8d03c061186d1c0fcb32347dec5e2cb05d73a25ec4fa78522cf31ea36"}},{"type":"ConfigChange"}],"replicas":0,"test":false,"selector":{"app":"caddy-app","deploymentconfig":"caddy-app"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"caddy-app","deploymentconfig":"caddy-app"},"annotations":{"openshift.io/container.pathfinder.image.entrypoint":"[\"/sbin/tini\",\"caddy\",\"-quic\",\"--conf\",\"/etc/Caddyfile\"]","openshift.io/generated-by":"OpenShiftNewApp"}},"spec":{"volumes":[{"name":"caddyfile-volume","configMap":{"name":"caddyfile","items":[{"key":"caddyfile","path":"Caddyfile"}],"defaultMode":420}}],"containers":[{"name":"caddy-app","image":"172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:d55f8cb8d03c061186d1c0fcb32347dec5e2cb05d73a25ec4fa78522cf31ea36","ports":[{"containerPort":2015,"protocol":"TCP"}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"volumeMounts":[{"name":"caddyfile-volume","mountPath":"/etc"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":11,"observedGeneration":17,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:d55f8cb8d03c061186d1c0fcb32347dec5e2cb05d73a25ec4fa78522cf31ea36"}}}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-02-01T22:03:57Z","lastTransitionTime":"2018-02-01T22:03:57Z","message":"Deployment config does not have minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-03-22T04:43:12Z","lastTransitionTime":"2018-03-22T04:43:12Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"caddy-app-10\" successfully rolled out"}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: caddy-app
      openshift.io/deployment-config.name: caddy-app
      template: caddy-template
    name: caddy-app-11
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: caddy-app
      uid: e7332439-d53d-11e7-9f70-005056832285
  spec:
    replicas: 0
    selector:
      app: caddy-app
      deployment: caddy-app-11
      deploymentconfig: caddy-app
    template:
      metadata:
        annotations:
          openshift.io/container.pathfinder.image.entrypoint: '["/sbin/tini","caddy","-quic","--conf","/etc/Caddyfile"]'
          openshift.io/deployment-config.latest-version: "11"
          openshift.io/deployment-config.name: caddy-app
          openshift.io/deployment.name: caddy-app-11
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: caddy-app
          deployment: caddy-app-11
          deploymentconfig: caddy-app
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:d55f8cb8d03c061186d1c0fcb32347dec5e2cb05d73a25ec4fa78522cf31ea36
          imagePullPolicy: Always
          name: caddy-app
          ports:
          - containerPort: 2015
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc
            name: caddyfile-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: caddyfile
              path: Caddyfile
            name: caddyfile
          name: caddyfile-volume
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "0"
      openshift.io/deployer-pod.completed-at: 2018-03-07 16:16:17 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-07 16:16:11 -0800 PST
      openshift.io/deployer-pod.name: caddy-app-7-deploy
      openshift.io/deployment-config.latest-version: "7"
      openshift.io/deployment-config.name: caddy-app
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"caddy-app","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/caddy-app","uid":"e7332439-d53d-11e7-9f70-005056832285","resourceVersion":"363365327","generation":13,"creationTimestamp":"2017-11-29T19:45:50Z","labels":{"app":"caddy-app","template":"caddy-template"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["caddy-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-dev","name":"caddy-app:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:081ed38c061c0ee87a676cb4306fd9df1226d670b185999c2c4ee2660811e276"}},{"type":"ConfigChange"}],"replicas":0,"test":false,"selector":{"app":"caddy-app","deploymentconfig":"caddy-app"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"caddy-app","deploymentconfig":"caddy-app"},"annotations":{"openshift.io/container.pathfinder.image.entrypoint":"[\"/sbin/tini\",\"caddy\",\"-quic\",\"--conf\",\"/etc/Caddyfile\"]","openshift.io/generated-by":"OpenShiftNewApp"}},"spec":{"volumes":[{"name":"caddyfile-volume","configMap":{"name":"caddyfile","items":[{"key":"caddyfile","path":"Caddyfile"}],"defaultMode":420}}],"containers":[{"name":"caddy-app","image":"172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:081ed38c061c0ee87a676cb4306fd9df1226d670b185999c2c4ee2660811e276","ports":[{"containerPort":2015,"protocol":"TCP"}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"volumeMounts":[{"name":"caddyfile-volume","mountPath":"/etc"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":7,"observedGeneration":13,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:081ed38c061c0ee87a676cb4306fd9df1226d670b185999c2c4ee2660811e276"}}}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-02-01T22:03:57Z","lastTransitionTime":"2018-02-01T22:03:57Z","message":"Deployment config does not have minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-03-08T00:11:38Z","lastTransitionTime":"2018-03-08T00:11:38Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"caddy-app-6\" successfully rolled out"}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: caddy-app
      openshift.io/deployment-config.name: caddy-app
      template: caddy-template
    name: caddy-app-7
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: caddy-app
      uid: e7332439-d53d-11e7-9f70-005056832285
  spec:
    replicas: 0
    selector:
      app: caddy-app
      deployment: caddy-app-7
      deploymentconfig: caddy-app
    template:
      metadata:
        annotations:
          openshift.io/container.pathfinder.image.entrypoint: '["/sbin/tini","caddy","-quic","--conf","/etc/Caddyfile"]'
          openshift.io/deployment-config.latest-version: "7"
          openshift.io/deployment-config.name: caddy-app
          openshift.io/deployment.name: caddy-app-7
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: caddy-app
          deployment: caddy-app-7
          deploymentconfig: caddy-app
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:081ed38c061c0ee87a676cb4306fd9df1226d670b185999c2c4ee2660811e276
          imagePullPolicy: Always
          name: caddy-app
          ports:
          - containerPort: 2015
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc
            name: caddyfile-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: caddyfile
              path: Caddyfile
            name: caddyfile
          name: caddyfile-volume
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "0"
      openshift.io/deployer-pod.completed-at: 2018-03-21 21:06:22 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-03-21 21:06:14 -0700 PDT
      openshift.io/deployer-pod.name: caddy-app-8-deploy
      openshift.io/deployment-config.latest-version: "8"
      openshift.io/deployment-config.name: caddy-app
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"caddy-app","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/caddy-app","uid":"e7332439-d53d-11e7-9f70-005056832285","resourceVersion":"382189669","generation":14,"creationTimestamp":"2017-11-29T19:45:50Z","labels":{"app":"caddy-app","template":"caddy-template"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["caddy-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-dev","name":"caddy-app:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:3fb4bef4b45549ce53c57f4f4992330f9c317f1d92c0b2db6a0415165d8021d4"}},{"type":"ConfigChange"}],"replicas":0,"test":false,"selector":{"app":"caddy-app","deploymentconfig":"caddy-app"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"caddy-app","deploymentconfig":"caddy-app"},"annotations":{"openshift.io/container.pathfinder.image.entrypoint":"[\"/sbin/tini\",\"caddy\",\"-quic\",\"--conf\",\"/etc/Caddyfile\"]","openshift.io/generated-by":"OpenShiftNewApp"}},"spec":{"volumes":[{"name":"caddyfile-volume","configMap":{"name":"caddyfile","items":[{"key":"caddyfile","path":"Caddyfile"}],"defaultMode":420}}],"containers":[{"name":"caddy-app","image":"172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:3fb4bef4b45549ce53c57f4f4992330f9c317f1d92c0b2db6a0415165d8021d4","ports":[{"containerPort":2015,"protocol":"TCP"}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"volumeMounts":[{"name":"caddyfile-volume","mountPath":"/etc"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":8,"observedGeneration":14,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:3fb4bef4b45549ce53c57f4f4992330f9c317f1d92c0b2db6a0415165d8021d4"}}}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-02-01T22:03:57Z","lastTransitionTime":"2018-02-01T22:03:57Z","message":"Deployment config does not have minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-03-08T00:16:18Z","lastTransitionTime":"2018-03-08T00:16:18Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"caddy-app-7\" successfully rolled out"}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: caddy-app
      openshift.io/deployment-config.name: caddy-app
      template: caddy-template
    name: caddy-app-8
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: caddy-app
      uid: e7332439-d53d-11e7-9f70-005056832285
  spec:
    replicas: 0
    selector:
      app: caddy-app
      deployment: caddy-app-8
      deploymentconfig: caddy-app
    template:
      metadata:
        annotations:
          openshift.io/container.pathfinder.image.entrypoint: '["/sbin/tini","caddy","-quic","--conf","/etc/Caddyfile"]'
          openshift.io/deployment-config.latest-version: "8"
          openshift.io/deployment-config.name: caddy-app
          openshift.io/deployment.name: caddy-app-8
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: caddy-app
          deployment: caddy-app-8
          deploymentconfig: caddy-app
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:3fb4bef4b45549ce53c57f4f4992330f9c317f1d92c0b2db6a0415165d8021d4
          imagePullPolicy: Always
          name: caddy-app
          ports:
          - containerPort: 2015
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc
            name: caddyfile-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: caddyfile
              path: Caddyfile
            name: caddyfile
          name: caddyfile-volume
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "0"
      openshift.io/deployer-pod.completed-at: 2018-03-21 21:39:58 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-03-21 21:39:51 -0700 PDT
      openshift.io/deployer-pod.name: caddy-app-9-deploy
      openshift.io/deployment-config.latest-version: "9"
      openshift.io/deployment-config.name: caddy-app
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"caddy-app","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/caddy-app","uid":"e7332439-d53d-11e7-9f70-005056832285","resourceVersion":"382233024","generation":15,"creationTimestamp":"2017-11-29T19:45:50Z","labels":{"app":"caddy-app","template":"caddy-template"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["caddy-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-dev","name":"caddy-app:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:3a4b217e96a175315d82ab8c93aa78894847e3c472dbce9f1ab3c9e6556e0e3a"}},{"type":"ConfigChange"}],"replicas":0,"test":false,"selector":{"app":"caddy-app","deploymentconfig":"caddy-app"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"caddy-app","deploymentconfig":"caddy-app"},"annotations":{"openshift.io/container.pathfinder.image.entrypoint":"[\"/sbin/tini\",\"caddy\",\"-quic\",\"--conf\",\"/etc/Caddyfile\"]","openshift.io/generated-by":"OpenShiftNewApp"}},"spec":{"volumes":[{"name":"caddyfile-volume","configMap":{"name":"caddyfile","items":[{"key":"caddyfile","path":"Caddyfile"}],"defaultMode":420}}],"containers":[{"name":"caddy-app","image":"172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:3a4b217e96a175315d82ab8c93aa78894847e3c472dbce9f1ab3c9e6556e0e3a","ports":[{"containerPort":2015,"protocol":"TCP"}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"volumeMounts":[{"name":"caddyfile-volume","mountPath":"/etc"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":9,"observedGeneration":15,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:3a4b217e96a175315d82ab8c93aa78894847e3c472dbce9f1ab3c9e6556e0e3a"}}}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-02-01T22:03:57Z","lastTransitionTime":"2018-02-01T22:03:57Z","message":"Deployment config does not have minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-03-22T04:06:22Z","lastTransitionTime":"2018-03-22T04:06:22Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"caddy-app-8\" successfully rolled out"}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: caddy-app
      openshift.io/deployment-config.name: caddy-app
      template: caddy-template
    name: caddy-app-9
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: caddy-app
      uid: e7332439-d53d-11e7-9f70-005056832285
  spec:
    replicas: 0
    selector:
      app: caddy-app
      deployment: caddy-app-9
      deploymentconfig: caddy-app
    template:
      metadata:
        annotations:
          openshift.io/container.pathfinder.image.entrypoint: '["/sbin/tini","caddy","-quic","--conf","/etc/Caddyfile"]'
          openshift.io/deployment-config.latest-version: "9"
          openshift.io/deployment-config.name: caddy-app
          openshift.io/deployment.name: caddy-app-9
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: caddy-app
          deployment: caddy-app-9
          deploymentconfig: caddy-app
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-dev/caddy-app@sha256:3a4b217e96a175315d82ab8c93aa78894847e3c472dbce9f1ab3c9e6556e0e3a
          imagePullPolicy: Always
          name: caddy-app
          ports:
          - containerPort: 2015
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc
            name: caddyfile-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: caddyfile
              path: Caddyfile
            name: caddyfile
          name: caddyfile-volume
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/desired-replicas: "1"
      kubectl.kubernetes.io/update-source-id: client-167:ae3932ac-e1d7-11e7-9b28-0050568379a2
      openshift.io/deployer-pod.name: client-168-deploy
      openshift.io/deployment-config.latest-version: "168"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Failed
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/client","uid":"ff67acf7-77c2-11e7-af69-0050568348cc","resourceVersion":"288561965","generation":253,"creationTimestamp":"2017-08-02T20:41:45Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:c7437f44a719763f3ae0a223d0aee9b1828d3ceeef29fc4ca19972496e2e4b05"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:c7437f44a719763f3ae0a223d0aee9b1828d3ceeef29fc4ca19972496e2e4b05","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":168,"observedGeneration":252,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:dev"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2017-12-12T19:37:54Z","lastTransitionTime":"2017-12-12T19:37:54Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2017-12-15T20:37:19Z","lastTransitionTime":"2017-12-15T20:37:17Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-167\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
      template: tfrs-app-environment
    name: client-168
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: ff67acf7-77c2-11e7-af69-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: client-168
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "168"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-168
        creationTimestamp: null
        labels:
          deployment: client-168
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client@sha256:c7437f44a719763f3ae0a223d0aee9b1828d3ceeef29fc4ca19972496e2e4b05
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-16 00:23:25 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-16 00:22:19 -0700 PDT
      openshift.io/deployer-pod.name: client-308-deploy
      openshift.io/deployment-config.latest-version: "308"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/client","uid":"ff67acf7-77c2-11e7-af69-0050568348cc","resourceVersion":"423259207","generation":514,"creationTimestamp":"2017-08-02T20:41:45Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:3089fb718118a3bb46f70c423504ac6f2395c495bb7d627c560fd631a6405734"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:3089fb718118a3bb46f70c423504ac6f2395c495bb7d627c560fd631a6405734","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":308,"observedGeneration":514,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:3089fb718118a3bb46f70c423504ac6f2395c495bb7d627c560fd631a6405734"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-15T07:23:14Z","lastTransitionTime":"2018-04-15T07:23:14Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-15T07:23:15Z","lastTransitionTime":"2018-04-15T07:22:54Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-307\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
      template: tfrs-app-environment
    name: client-308
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: ff67acf7-77c2-11e7-af69-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: client-308
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "308"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-308
        creationTimestamp: null
        labels:
          deployment: client-308
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:3089fb718118a3bb46f70c423504ac6f2395c495bb7d627c560fd631a6405734
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-17 00:23:16 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-17 00:22:17 -0700 PDT
      openshift.io/deployer-pod.name: client-309-deploy
      openshift.io/deployment-config.latest-version: "309"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/client","uid":"ff67acf7-77c2-11e7-af69-0050568348cc","resourceVersion":"424559449","generation":515,"creationTimestamp":"2017-08-02T20:41:45Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:37464279d4b5d9d6fc41027d0d1b039cb765a9054e080757a17890a23688c117"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:37464279d4b5d9d6fc41027d0d1b039cb765a9054e080757a17890a23688c117","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":309,"observedGeneration":515,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:37464279d4b5d9d6fc41027d0d1b039cb765a9054e080757a17890a23688c117"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-16T07:23:25Z","lastTransitionTime":"2018-04-16T07:23:25Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-16T07:23:27Z","lastTransitionTime":"2018-04-16T07:23:05Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-308\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
      template: tfrs-app-environment
    name: client-309
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: ff67acf7-77c2-11e7-af69-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: client-309
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "309"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-309
        creationTimestamp: null
        labels:
          deployment: client-309
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:37464279d4b5d9d6fc41027d0d1b039cb765a9054e080757a17890a23688c117
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-17 15:20:45 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-17 15:19:41 -0700 PDT
      openshift.io/deployer-pod.name: client-310-deploy
      openshift.io/deployment-config.latest-version: "310"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/client","uid":"ff67acf7-77c2-11e7-af69-0050568348cc","resourceVersion":"425410107","generation":516,"creationTimestamp":"2017-08-02T20:41:45Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:dbf64eed7e10d277650441662f9a07b06278b2b59af97195a0147b16bceffe82"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:dbf64eed7e10d277650441662f9a07b06278b2b59af97195a0147b16bceffe82","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":310,"observedGeneration":516,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:dbf64eed7e10d277650441662f9a07b06278b2b59af97195a0147b16bceffe82"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-17T07:23:16Z","lastTransitionTime":"2018-04-17T07:23:16Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-17T07:23:17Z","lastTransitionTime":"2018-04-17T07:22:56Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-309\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
      template: tfrs-app-environment
    name: client-310
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: ff67acf7-77c2-11e7-af69-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: client-310
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "310"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-310
        creationTimestamp: null
        labels:
          deployment: client-310
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:dbf64eed7e10d277650441662f9a07b06278b2b59af97195a0147b16bceffe82
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-18 00:26:44 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-18 00:25:40 -0700 PDT
      openshift.io/deployer-pod.name: client-311-deploy
      openshift.io/deployment-config.latest-version: "311"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/client","uid":"ff67acf7-77c2-11e7-af69-0050568348cc","resourceVersion":"426010396","generation":517,"creationTimestamp":"2017-08-02T20:41:45Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:66053af9f34999ef74608feb21a446723a4baf42c4d0efea51b5493ed0c2f451"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:66053af9f34999ef74608feb21a446723a4baf42c4d0efea51b5493ed0c2f451","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":311,"observedGeneration":517,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:66053af9f34999ef74608feb21a446723a4baf42c4d0efea51b5493ed0c2f451"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-17T22:20:45Z","lastTransitionTime":"2018-04-17T22:20:45Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-17T22:20:46Z","lastTransitionTime":"2018-04-17T22:20:25Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-310\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
      template: tfrs-app-environment
    name: client-311
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: ff67acf7-77c2-11e7-af69-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: client-311
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "311"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-311
        creationTimestamp: null
        labels:
          deployment: client-311
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:66053af9f34999ef74608feb21a446723a4baf42c4d0efea51b5493ed0c2f451
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-19 00:26:51 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-19 00:25:52 -0700 PDT
      openshift.io/deployer-pod.name: client-312-deploy
      openshift.io/deployment-config.latest-version: "312"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/client","uid":"ff67acf7-77c2-11e7-af69-0050568348cc","resourceVersion":"427906462","generation":518,"creationTimestamp":"2017-08-02T20:41:45Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:88156b763525d6e259494e5ffffe907e27d8a6bf994ab1020c3356f3b91cfbe3"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:88156b763525d6e259494e5ffffe907e27d8a6bf994ab1020c3356f3b91cfbe3","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":312,"observedGeneration":518,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:88156b763525d6e259494e5ffffe907e27d8a6bf994ab1020c3356f3b91cfbe3"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-18T07:26:43Z","lastTransitionTime":"2018-04-18T07:26:43Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-18T07:26:45Z","lastTransitionTime":"2018-04-18T07:26:23Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-311\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
      template: tfrs-app-environment
    name: client-312
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: ff67acf7-77c2-11e7-af69-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: client-312
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "312"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-312
        creationTimestamp: null
        labels:
          deployment: client-312
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:88156b763525d6e259494e5ffffe907e27d8a6bf994ab1020c3356f3b91cfbe3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-20 00:23:43 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-20 00:22:44 -0700 PDT
      openshift.io/deployer-pod.name: client-313-deploy
      openshift.io/deployment-config.latest-version: "313"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/client","uid":"ff67acf7-77c2-11e7-af69-0050568348cc","resourceVersion":"429912463","generation":519,"creationTimestamp":"2017-08-02T20:41:45Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:25512ba8c3e1b7d4102f36a7ec8823dbd27bc75ead9af081ad86bd7e3e0e7bf5"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:25512ba8c3e1b7d4102f36a7ec8823dbd27bc75ead9af081ad86bd7e3e0e7bf5","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":313,"observedGeneration":519,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:25512ba8c3e1b7d4102f36a7ec8823dbd27bc75ead9af081ad86bd7e3e0e7bf5"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-19T07:26:52Z","lastTransitionTime":"2018-04-19T07:26:31Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-312\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-04-20T02:52:49Z","lastTransitionTime":"2018-04-20T02:52:49Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
      template: tfrs-app-environment
    name: client-313
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: ff67acf7-77c2-11e7-af69-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: client-313
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "313"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-313
        creationTimestamp: null
        labels:
          deployment: client-313
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:25512ba8c3e1b7d4102f36a7ec8823dbd27bc75ead9af081ad86bd7e3e0e7bf5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-21 00:22:43 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-21 00:21:45 -0700 PDT
      openshift.io/deployer-pod.name: client-314-deploy
      openshift.io/deployment-config.latest-version: "314"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/client","uid":"ff67acf7-77c2-11e7-af69-0050568348cc","resourceVersion":"431605215","generation":520,"creationTimestamp":"2017-08-02T20:41:45Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:59d8fc5c9b34428d6be88b8bb716ae907c3c368fe6a2cc55bcab77ce7845ce1a"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:59d8fc5c9b34428d6be88b8bb716ae907c3c368fe6a2cc55bcab77ce7845ce1a","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":314,"observedGeneration":520,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:59d8fc5c9b34428d6be88b8bb716ae907c3c368fe6a2cc55bcab77ce7845ce1a"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-20T07:23:45Z","lastTransitionTime":"2018-04-20T07:23:22Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-313\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-04-20T13:52:16Z","lastTransitionTime":"2018-04-20T13:52:16Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
      template: tfrs-app-environment
    name: client-314
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: ff67acf7-77c2-11e7-af69-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: client-314
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "314"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-314
        creationTimestamp: null
        labels:
          deployment: client-314
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:59d8fc5c9b34428d6be88b8bb716ae907c3c368fe6a2cc55bcab77ce7845ce1a
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-22 00:21:40 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-22 00:20:44 -0700 PDT
      openshift.io/deployer-pod.name: client-315-deploy
      openshift.io/deployment-config.latest-version: "315"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/client","uid":"ff67acf7-77c2-11e7-af69-0050568348cc","resourceVersion":"433050733","generation":521,"creationTimestamp":"2017-08-02T20:41:45Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:de7d39a9fe5b9d2616e111d5acc9614dcf2d5be82ee093482c1f47a6c45c9c36"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:de7d39a9fe5b9d2616e111d5acc9614dcf2d5be82ee093482c1f47a6c45c9c36","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":315,"observedGeneration":521,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:de7d39a9fe5b9d2616e111d5acc9614dcf2d5be82ee093482c1f47a6c45c9c36"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-21T07:22:43Z","lastTransitionTime":"2018-04-21T07:22:43Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-21T07:22:44Z","lastTransitionTime":"2018-04-21T07:22:23Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-314\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
      template: tfrs-app-environment
    name: client-315
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: ff67acf7-77c2-11e7-af69-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: client-315
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "315"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-315
        creationTimestamp: null
        labels:
          deployment: client-315
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:de7d39a9fe5b9d2616e111d5acc9614dcf2d5be82ee093482c1f47a6c45c9c36
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-23 00:22:00 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-23 00:21:03 -0700 PDT
      openshift.io/deployer-pod.name: client-316-deploy
      openshift.io/deployment-config.latest-version: "316"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/client","uid":"ff67acf7-77c2-11e7-af69-0050568348cc","resourceVersion":"434341943","generation":522,"creationTimestamp":"2017-08-02T20:41:45Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:127388e9d93451b039d0741d53784db4cb617c58d6524e2af8f6fd7d9c235336"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:127388e9d93451b039d0741d53784db4cb617c58d6524e2af8f6fd7d9c235336","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/"}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":316,"observedGeneration":522,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:127388e9d93451b039d0741d53784db4cb617c58d6524e2af8f6fd7d9c235336"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-22T07:21:40Z","lastTransitionTime":"2018-04-22T07:21:40Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-22T07:21:41Z","lastTransitionTime":"2018-04-22T07:21:19Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-315\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
      template: tfrs-app-environment
    name: client-316
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: ff67acf7-77c2-11e7-af69-0050568348cc
  spec:
    replicas: 1
    selector:
      deployment: client-316
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "316"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-316
        creationTimestamp: null
        labels:
          deployment: client-316
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:127388e9d93451b039d0741d53784db4cb617c58d6524e2af8f6fd7d9c235336
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/desired-replicas: "1"
      openshift.io/deployer-pod.name: postgresql-16-deploy
      openshift.io/deployment-config.latest-version: "16"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.cancelled: "true"
      openshift.io/deployment.phase: Failed
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: newer deployment was found running
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/postgresql","uid":"6553cf4d-fa1e-11e6-b4f5-0050568379a2","resourceVersion":"354238248","generation":59,"creationTimestamp":"2017-02-23T23:18:33Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.4"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-94-rhel7@sha256:999f3041aed3bbdbca5c55bfc5849ca15e5546f457e82582863ae271b6485478"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"postgresql"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql"}},"spec":{"volumes":[{"name":"postgresql-data","persistentVolumeClaim":{"claimName":"postgresql-cns"}}],"containers":[{"name":"postgresql","image":"registry.access.redhat.com/rhscl/postgresql-94-rhel7@sha256:999f3041aed3bbdbca5c55bfc5849ca15e5546f457e82582863ae271b6485478","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"2Gi"},"requests":{"cpu":"500m"}},"volumeMounts":[{"name":"postgresql-data","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-c","pwd"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":16,"observedGeneration":58,"replicas":1,"updatedReplicas":1,"availableReplicas":0,"unavailableReplicas":1,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.4"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-26T20:31:39Z","lastTransitionTime":"2018-02-26T20:31:39Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"postgresql-15\" successfully rolled out"},{"type":"Available","status":"False","lastUpdateTime":"2018-02-26T22:15:12Z","lastTransitionTime":"2018-02-26T22:15:12Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql
      template: postgresql-persistent-template
    name: postgresql-16
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql
      uid: 6553cf4d-fa1e-11e6-b4f5-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: postgresql-16
      deploymentconfig: postgresql
      name: postgresql
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "16"
          openshift.io/deployment-config.name: postgresql
          openshift.io/deployment.name: postgresql-16
        creationTimestamp: null
        labels:
          deployment: postgresql-16
          deploymentconfig: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-94-rhel7@sha256:999f3041aed3bbdbca5c55bfc5849ca15e5546f457e82582863ae271b6485478
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - pwd
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2Gi
            requests:
              cpu: 500m
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: postgresql-19-deploy
      openshift.io/deployment-config.latest-version: "19"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: manual change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/postgresql","uid":"6553cf4d-fa1e-11e6-b4f5-0050568379a2","resourceVersion":"354309077","generation":66,"creationTimestamp":"2017-02-23T23:18:33Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a"}},{"type":"ConfigChange"}],"replicas":0,"test":false,"selector":{"name":"postgresql"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql"}},"spec":{"volumes":[{"name":"postgresql-data","persistentVolumeClaim":{"claimName":"postgresql-cns"}}],"containers":[{"name":"postgresql","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"2Gi"},"requests":{"cpu":"500m"}},"volumeMounts":[{"name":"postgresql-data","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":19,"observedGeneration":65,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"manual change","causes":[{"type":"Manual"}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-02-26T23:13:57Z","lastTransitionTime":"2018-02-26T23:13:57Z","message":"Deployment config does not have minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-26T23:16:10Z","lastTransitionTime":"2018-02-26T23:16:10Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"postgresql-18\" successfully rolled out"}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql
      template: postgresql-persistent-template
    name: postgresql-19
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql
      uid: 6553cf4d-fa1e-11e6-b4f5-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: postgresql-19
      deploymentconfig: postgresql
      name: postgresql
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "19"
          openshift.io/deployment-config.name: postgresql
          openshift.io/deployment.name: postgresql-19
        creationTimestamp: null
        labels:
          deployment: postgresql-19
          deploymentconfig: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2Gi
            requests:
              cpu: 500m
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: postgresql-20-deploy
      openshift.io/deployment-config.latest-version: "20"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: manual change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/postgresql","uid":"6553cf4d-fa1e-11e6-b4f5-0050568379a2","resourceVersion":"354310975","generation":67,"creationTimestamp":"2017-02-23T23:18:33Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a"}},{"type":"ConfigChange"}],"replicas":0,"test":false,"selector":{"name":"postgresql"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql"}},"spec":{"volumes":[{"name":"postgresql-data","persistentVolumeClaim":{"claimName":"postgresql-cns"}}],"containers":[{"name":"postgresql","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"2Gi"},"requests":{"cpu":"500m"}},"volumeMounts":[{"name":"postgresql-data","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":20,"observedGeneration":66,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"manual change","causes":[{"type":"Manual"}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-02-26T23:13:57Z","lastTransitionTime":"2018-02-26T23:13:57Z","message":"Deployment config does not have minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-26T23:16:34Z","lastTransitionTime":"2018-02-26T23:16:34Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"postgresql-19\" successfully rolled out"}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql
      template: postgresql-persistent-template
    name: postgresql-20
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql
      uid: 6553cf4d-fa1e-11e6-b4f5-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: postgresql-20
      deploymentconfig: postgresql
      name: postgresql
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "20"
          openshift.io/deployment-config.name: postgresql
          openshift.io/deployment.name: postgresql-20
        creationTimestamp: null
        labels:
          deployment: postgresql-20
          deploymentconfig: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2Gi
            requests:
              cpu: 500m
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-02-27 15:10:43 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-02-27 15:08:29 -0800 PST
      openshift.io/deployer-pod.name: postgresql-21-deploy
      openshift.io/deployment-config.latest-version: "21"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/postgresql","uid":"6553cf4d-fa1e-11e6-b4f5-0050568379a2","resourceVersion":"355775929","generation":69,"creationTimestamp":"2017-02-23T23:18:33Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"postgresql"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql"}},"spec":{"volumes":[{"name":"postgresql-data","persistentVolumeClaim":{"claimName":"postgresql-cns"}}],"containers":[{"name":"postgresql","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"2Gi"},"requests":{"cpu":"500m"}},"volumeMounts":[{"name":"postgresql-data","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":21,"observedGeneration":69,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-26T23:18:04Z","lastTransitionTime":"2018-02-26T23:18:04Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"postgresql-20\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-02-27T18:49:00Z","lastTransitionTime":"2018-02-27T18:49:00Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql
      template: postgresql-persistent-template
    name: postgresql-21
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql
      uid: 6553cf4d-fa1e-11e6-b4f5-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: postgresql-21
      deploymentconfig: postgresql
      name: postgresql
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "21"
          openshift.io/deployment-config.name: postgresql
          openshift.io/deployment.name: postgresql-21
        creationTimestamp: null
        labels:
          deployment: postgresql-21
          deploymentconfig: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2Gi
            requests:
              cpu: 500m
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-02-28 15:32:13 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-02-28 15:31:43 -0800 PST
      openshift.io/deployer-pod.name: postgresql-22-deploy
      openshift.io/deployment-config.latest-version: "22"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/postgresql","uid":"6553cf4d-fa1e-11e6-b4f5-0050568379a2","resourceVersion":"356665758","generation":73,"creationTimestamp":"2017-02-23T23:18:33Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"postgresql"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql"}},"spec":{"volumes":[{"name":"postgresql-data","persistentVolumeClaim":{"claimName":"postgresql-cns"}},{"name":"volume-r83io","persistentVolumeClaim":{"claimName":"postgresql-backup-cns"}}],"containers":[{"name":"postgresql","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"2Gi"},"requests":{"cpu":"500m"}},"volumeMounts":[{"name":"postgresql-data","mountPath":"/var/lib/pgsql/data"},{"name":"volume-r83io","mountPath":"/postgresql-backup"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":22,"observedGeneration":73,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-27T23:10:44Z","lastTransitionTime":"2018-02-27T23:09:12Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"postgresql-21\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-02-28T23:10:14Z","lastTransitionTime":"2018-02-28T23:10:14Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql
      template: postgresql-persistent-template
    name: postgresql-22
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql
      uid: 6553cf4d-fa1e-11e6-b4f5-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: postgresql-22
      deploymentconfig: postgresql
      name: postgresql
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "22"
          openshift.io/deployment-config.name: postgresql
          openshift.io/deployment.name: postgresql-22
        creationTimestamp: null
        labels:
          deployment: postgresql-22
          deploymentconfig: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2Gi
            requests:
              cpu: 500m
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
          - mountPath: /postgresql-backup
            name: volume-r83io
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-cns
        - name: volume-r83io
          persistentVolumeClaim:
            claimName: postgresql-backup-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-05 15:41:05 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-05 15:41:02 -0800 PST
      openshift.io/deployer-pod.name: postgresql-23-deploy
      openshift.io/deployment-config.latest-version: "23"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/postgresql","uid":"6553cf4d-fa1e-11e6-b4f5-0050568379a2","resourceVersion":"361060427","generation":87,"creationTimestamp":"2017-02-23T23:18:33Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed"}},{"type":"ConfigChange"}],"replicas":0,"test":false,"selector":{"name":"postgresql"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql"}},"spec":{"volumes":[{"name":"postgresql-data","persistentVolumeClaim":{"claimName":"postgresql-cns"}},{"name":"volume-r83io","persistentVolumeClaim":{"claimName":"postgresql-backup-cns"}},{"name":"volume-wh3ob","persistentVolumeClaim":{"claimName":"postgresql-standby-cns"}}],"containers":[{"name":"postgresql","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"2Gi"},"requests":{"cpu":"500m"}},"volumeMounts":[{"name":"postgresql-data","mountPath":"/var/lib/pgsql/data"},{"name":"volume-r83io","mountPath":"/postgresql-backup"},{"name":"volume-wh3ob","mountPath":"/backup"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":23,"observedGeneration":87,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-28T23:32:14Z","lastTransitionTime":"2018-02-28T23:32:02Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"postgresql-22\" successfully rolled out"},{"type":"Available","status":"False","lastUpdateTime":"2018-03-05T23:22:34Z","lastTransitionTime":"2018-03-05T23:22:34Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql
      template: postgresql-persistent-template
    name: postgresql-23
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql
      uid: 6553cf4d-fa1e-11e6-b4f5-0050568379a2
  spec:
    replicas: 1
    selector:
      deployment: postgresql-23
      deploymentconfig: postgresql
      name: postgresql
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "23"
          openshift.io/deployment-config.name: postgresql
          openshift.io/deployment.name: postgresql-23
        creationTimestamp: null
        labels:
          deployment: postgresql-23
          deploymentconfig: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2Gi
            requests:
              cpu: 500m
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
          - mountPath: /postgresql-backup
            name: volume-r83io
          - mountPath: /backup
            name: volume-wh3ob
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-cns
        - name: volume-r83io
          persistentVolumeClaim:
            claimName: postgresql-backup-cns
        - name: volume-wh3ob
          persistentVolumeClaim:
            claimName: postgresql-standby-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: postgresql-bypass-1-deploy
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: postgresql-bypass
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql-bypass","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/postgresql-bypass","uid":"ace4a28f-136b-11e8-844f-005056832285","resourceVersion":"343424778","generation":2,"creationTimestamp":"2018-02-16T22:49:41Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql-bypass"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"postgresql-bypass"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql-bypass"}},"spec":{"volumes":[{"name":"postgresql-data-bypass","persistentVolumeClaim":{"claimName":"postgresql-bypass-cns"}}],"containers":[{"name":"postgresql-bypass","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"volumeMounts":[{"name":"postgresql-data-bypass","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":1,"observedGeneration":1,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"}}}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-02-16T22:49:41Z","lastTransitionTime":"2018-02-16T22:49:41Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql-bypass
      template: postgresql-persistent-template
    name: postgresql-bypass-1
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql-bypass
      uid: ace4a28f-136b-11e8-844f-005056832285
  spec:
    replicas: 0
    selector:
      deployment: postgresql-bypass-1
      deploymentconfig: postgresql-bypass
      name: postgresql-bypass
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "1"
          openshift.io/deployment-config.name: postgresql-bypass
          openshift.io/deployment.name: postgresql-bypass-1
        creationTimestamp: null
        labels:
          deployment: postgresql-bypass-1
          deploymentconfig: postgresql-bypass
          name: postgresql-bypass
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql-bypass
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data-bypass
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data-bypass
          persistentVolumeClaim:
            claimName: postgresql-bypass-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-02-27 15:10:29 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-02-27 15:08:30 -0800 PST
      openshift.io/deployer-pod.name: postgresql-bypass-2-deploy
      openshift.io/deployment-config.latest-version: "2"
      openshift.io/deployment-config.name: postgresql-bypass
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql-bypass","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/postgresql-bypass","uid":"ace4a28f-136b-11e8-844f-005056832285","resourceVersion":"355775949","generation":5,"creationTimestamp":"2018-02-16T22:49:41Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql-bypass"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"postgresql-bypass"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql-bypass"}},"spec":{"volumes":[{"name":"postgresql-data-bypass","persistentVolumeClaim":{"claimName":"postgresql-bypass-cns"}}],"containers":[{"name":"postgresql-bypass","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"volumeMounts":[{"name":"postgresql-data-bypass","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":2,"observedGeneration":5,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-16T22:49:57Z","lastTransitionTime":"2018-02-16T22:49:57Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"postgresql-bypass-1\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-02-27T19:10:21Z","lastTransitionTime":"2018-02-27T19:10:21Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql-bypass
      template: postgresql-persistent-template
    name: postgresql-bypass-2
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql-bypass
      uid: ace4a28f-136b-11e8-844f-005056832285
  spec:
    replicas: 0
    selector:
      deployment: postgresql-bypass-2
      deploymentconfig: postgresql-bypass
      name: postgresql-bypass
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "2"
          openshift.io/deployment-config.name: postgresql-bypass
          openshift.io/deployment.name: postgresql-bypass-2
        creationTimestamp: null
        labels:
          deployment: postgresql-bypass-2
          deploymentconfig: postgresql-bypass
          name: postgresql-bypass
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql-bypass
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data-bypass
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data-bypass
          persistentVolumeClaim:
            claimName: postgresql-bypass-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-02 15:12:58 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-02 15:12:32 -0800 PST
      openshift.io/deployer-pod.name: postgresql-bypass-3-deploy
      openshift.io/deployment-config.latest-version: "3"
      openshift.io/deployment-config.name: postgresql-bypass
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql-bypass","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/postgresql-bypass","uid":"ace4a28f-136b-11e8-844f-005056832285","resourceVersion":"359242146","generation":7,"creationTimestamp":"2018-02-16T22:49:41Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql-bypass"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"postgresql-bypass"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql-bypass"}},"spec":{"volumes":[{"name":"postgresql-data-bypass","persistentVolumeClaim":{"claimName":"postgresql-bypass-cns"}}],"containers":[{"name":"postgresql-bypass","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"volumeMounts":[{"name":"postgresql-data-bypass","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":3,"observedGeneration":7,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-27T23:10:30Z","lastTransitionTime":"2018-02-27T23:10:30Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"postgresql-bypass-2\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-03-02T20:59:59Z","lastTransitionTime":"2018-03-02T20:59:59Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql-bypass
      template: postgresql-persistent-template
    name: postgresql-bypass-3
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql-bypass
      uid: ace4a28f-136b-11e8-844f-005056832285
  spec:
    replicas: 0
    selector:
      deployment: postgresql-bypass-3
      deploymentconfig: postgresql-bypass
      name: postgresql-bypass
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "3"
          openshift.io/deployment-config.name: postgresql-bypass
          openshift.io/deployment.name: postgresql-bypass-3
        creationTimestamp: null
        labels:
          deployment: postgresql-bypass-3
          deploymentconfig: postgresql-bypass
          name: postgresql-bypass
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql-bypass
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data-bypass
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data-bypass
          persistentVolumeClaim:
            claimName: postgresql-bypass-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-13 09:40:41 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-03-13 09:40:37 -0700 PDT
      openshift.io/deployer-pod.name: postgresql-bypass-4-deploy
      openshift.io/deployment-config.latest-version: "4"
      openshift.io/deployment-config.name: postgresql-bypass
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql-bypass","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/postgresql-bypass","uid":"ace4a28f-136b-11e8-844f-005056832285","resourceVersion":"370644952","generation":9,"creationTimestamp":"2018-02-16T22:49:41Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql-bypass"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed"}},{"type":"ConfigChange"}],"replicas":0,"test":false,"selector":{"name":"postgresql-bypass"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql-bypass"}},"spec":{"volumes":[{"name":"postgresql-data-bypass","persistentVolumeClaim":{"claimName":"postgresql-bypass-cns"}},{"name":"volume-s540c","persistentVolumeClaim":{"claimName":"postgresql-backup-cns"}}],"containers":[{"name":"postgresql-bypass","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"volumeMounts":[{"name":"postgresql-data-bypass","mountPath":"/var/lib/pgsql/data"},{"name":"volume-s540c","mountPath":"/postgresql-backup"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":4,"observedGeneration":9,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Progressing","status":"False","lastUpdateTime":"2018-03-12T18:31:29Z","lastTransitionTime":"2018-03-12T18:31:29Z","reason":"ProgressDeadlineExceeded","message":"replication controller \"postgresql-bypass-4\" has failed progressing"},{"type":"Available","status":"False","lastUpdateTime":"2018-03-13T16:38:59Z","lastTransitionTime":"2018-03-13T16:38:59Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql-bypass
      template: postgresql-persistent-template
    name: postgresql-bypass-4
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql-bypass
      uid: ace4a28f-136b-11e8-844f-005056832285
  spec:
    replicas: 1
    selector:
      deployment: postgresql-bypass-4
      deploymentconfig: postgresql-bypass
      name: postgresql-bypass
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "4"
          openshift.io/deployment-config.name: postgresql-bypass
          openshift.io/deployment.name: postgresql-bypass-4
        creationTimestamp: null
        labels:
          deployment: postgresql-bypass-4
          deploymentconfig: postgresql-bypass
          name: postgresql-bypass
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql-bypass
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data-bypass
          - mountPath: /postgresql-backup
            name: volume-s540c
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data-bypass
          persistentVolumeClaim:
            claimName: postgresql-bypass-cns
        - name: volume-s540c
          persistentVolumeClaim:
            claimName: postgresql-backup-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-01 15:50:44 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-01 15:50:09 -0800 PST
      openshift.io/deployer-pod.name: postgresql-standby-1-deploy
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: postgresql-standby
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql-standby","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/postgresql-standby","uid":"45b9112f-1dab-11e8-8a7d-005056832285","resourceVersion":"357895857","generation":2,"creationTimestamp":"2018-03-01T23:50:08Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql-standby"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed"}},{"type":"ConfigChange"}],"replicas":1,"revisionHistoryLimit":10,"test":false,"selector":{"name":"postgresql-standby"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql-standby"}},"spec":{"volumes":[{"name":"postgresql-data-standby","persistentVolumeClaim":{"claimName":"postgresql-standby-cns"}}],"containers":[{"name":"postgresql-standby","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"volumeMounts":[{"name":"postgresql-data-standby","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":1,"observedGeneration":2,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-03-01T23:50:08Z","lastTransitionTime":"2018-03-01T23:50:08Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql-standby
      template: postgresql-persistent-template
    name: postgresql-standby-1
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql-standby
      uid: 45b9112f-1dab-11e8-8a7d-005056832285
  spec:
    replicas: 0
    selector:
      deployment: postgresql-standby-1
      deploymentconfig: postgresql-standby
      name: postgresql-standby
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "1"
          openshift.io/deployment-config.name: postgresql-standby
          openshift.io/deployment.name: postgresql-standby-1
        creationTimestamp: null
        labels:
          deployment: postgresql-standby-1
          deploymentconfig: postgresql-standby
          name: postgresql-standby
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql-standby
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data-standby
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data-standby
          persistentVolumeClaim:
            claimName: postgresql-standby-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-05 16:10:28 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-05 16:10:05 -0800 PST
      openshift.io/deployer-pod.name: postgresql-standby-2-deploy
      openshift.io/deployment-config.latest-version: "2"
      openshift.io/deployment-config.name: postgresql-standby
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql-standby","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/postgresql-standby","uid":"45b9112f-1dab-11e8-8a7d-005056832285","resourceVersion":"361085166","generation":3,"creationTimestamp":"2018-03-01T23:50:08Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql-standby"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed"}},{"type":"ConfigChange"}],"replicas":1,"revisionHistoryLimit":10,"test":false,"selector":{"name":"postgresql-standby"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql-standby"}},"spec":{"volumes":[{"name":"postgresql-data-standby","persistentVolumeClaim":{"claimName":"postgresql-standby-cns"}},{"name":"volume-7v94a","persistentVolumeClaim":{"claimName":"postgresql-backup-cns"}}],"containers":[{"name":"postgresql-standby","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"volumeMounts":[{"name":"postgresql-data-standby","mountPath":"/var/lib/pgsql/data"},{"name":"volume-7v94a","mountPath":"/postgresql-backup"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":2,"observedGeneration":3,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-03-01T23:50:45Z","lastTransitionTime":"2018-03-01T23:50:45Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"postgresql-standby-1\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-03-02T20:35:07Z","lastTransitionTime":"2018-03-02T20:35:07Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql-standby
      template: postgresql-persistent-template
    name: postgresql-standby-2
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql-standby
      uid: 45b9112f-1dab-11e8-8a7d-005056832285
  spec:
    replicas: 0
    selector:
      deployment: postgresql-standby-2
      deploymentconfig: postgresql-standby
      name: postgresql-standby
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "2"
          openshift.io/deployment-config.name: postgresql-standby
          openshift.io/deployment.name: postgresql-standby-2
        creationTimestamp: null
        labels:
          deployment: postgresql-standby-2
          deploymentconfig: postgresql-standby
          name: postgresql-standby
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql-standby
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data-standby
          - mountPath: /postgresql-backup
            name: volume-7v94a
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data-standby
          persistentVolumeClaim:
            claimName: postgresql-standby-cns
        - name: volume-7v94a
          persistentVolumeClaim:
            claimName: postgresql-backup-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-06 12:23:55 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-03-06 12:23:51 -0800 PST
      openshift.io/deployer-pod.name: postgresql-standby-3-deploy
      openshift.io/deployment-config.latest-version: "3"
      openshift.io/deployment-config.name: postgresql-standby
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: manual change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql-standby","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/postgresql-standby","uid":"45b9112f-1dab-11e8-8a7d-005056832285","resourceVersion":"362207850","generation":9,"creationTimestamp":"2018-03-01T23:50:08Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql-standby"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed"}},{"type":"ConfigChange"}],"replicas":0,"revisionHistoryLimit":10,"test":false,"selector":{"name":"postgresql-standby"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql-standby"}},"spec":{"volumes":[{"name":"postgresql-data-standby","persistentVolumeClaim":{"claimName":"postgresql-standby-cns"}},{"name":"volume-7v94a","persistentVolumeClaim":{"claimName":"postgresql-backup-cns"}}],"containers":[{"name":"postgresql-standby","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"volumeMounts":[{"name":"postgresql-data-standby","mountPath":"/var/lib/pgsql/data"},{"name":"volume-7v94a","mountPath":"/postgresql-backup"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":3,"observedGeneration":8,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"manual change","causes":[{"type":"Manual"}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-03-06T00:10:29Z","lastTransitionTime":"2018-03-06T00:10:18Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"postgresql-standby-2\" successfully rolled out"},{"type":"Available","status":"False","lastUpdateTime":"2018-03-06T20:00:40Z","lastTransitionTime":"2018-03-06T20:00:40Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql-standby
      template: postgresql-persistent-template
    name: postgresql-standby-3
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql-standby
      uid: 45b9112f-1dab-11e8-8a7d-005056832285
  spec:
    replicas: 1
    selector:
      deployment: postgresql-standby-3
      deploymentconfig: postgresql-standby
      name: postgresql-standby
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "3"
          openshift.io/deployment-config.name: postgresql-standby
          openshift.io/deployment.name: postgresql-standby-3
        creationTimestamp: null
        labels:
          deployment: postgresql-standby-3
          deploymentconfig: postgresql-standby
          name: postgresql-standby
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql-standby
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data-standby
          - mountPath: /postgresql-backup
            name: volume-7v94a
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data-standby
          persistentVolumeClaim:
            claimName: postgresql-standby-cns
        - name: volume-7v94a
          persistentVolumeClaim:
            claimName: postgresql-backup-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/desired-replicas: "1"
      openshift.io/deployer-pod.name: request-logger-1-deploy
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: request-logger
      openshift.io/deployment.cancelled: "true"
      openshift.io/deployment.phase: Failed
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: newer deployment was found running
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"request-logger","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/request-logger","uid":"6b547dd1-d53e-11e7-9f70-005056832285","resourceVersion":"276079600","generation":3,"creationTimestamp":"2017-11-29T19:49:32Z","labels":{"app":"request-logger"},"annotations":{"openshift.io/generated-by":"OpenShiftWebConsole"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["request-logger"],"from":{"kind":"ImageStreamTag","namespace":"devops-sandbox-dev","name":"request-logger:latest"},"lastTriggeredImage":"172.50.0.2:5000/devops-sandbox-dev/request-logger@sha256:9c0a10650dea1229cd9853f81884baa25795a00f95e2d6722ddafa00b73f00cd"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"deploymentconfig":"request-logger"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"request-logger","deploymentconfig":"request-logger"}},"spec":{"containers":[{"name":"request-logger","image":"172.50.0.2:5000/devops-sandbox-dev/request-logger@sha256:9c0a10650dea1229cd9853f81884baa25795a00f95e2d6722ddafa00b73f00cd","ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":1,"observedGeneration":2,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"devops-sandbox-dev","name":"request-logger:latest"}}}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2017-11-29T19:49:32Z","lastTransitionTime":"2017-11-29T19:49:32Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: request-logger
      openshift.io/deployment-config.name: request-logger
    name: request-logger-1
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: request-logger
      uid: 6b547dd1-d53e-11e7-9f70-005056832285
  spec:
    replicas: 0
    selector:
      deployment: request-logger-1
      deploymentconfig: request-logger
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "1"
          openshift.io/deployment-config.name: request-logger
          openshift.io/deployment.name: request-logger-1
        creationTimestamp: null
        labels:
          app: request-logger
          deployment: request-logger-1
          deploymentconfig: request-logger
      spec:
        containers:
        - image: 172.50.0.2:5000/devops-sandbox-dev/request-logger@sha256:9c0a10650dea1229cd9853f81884baa25795a00f95e2d6722ddafa00b73f00cd
          imagePullPolicy: Always
          name: request-logger
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.name: request-logger-2-deploy
      openshift.io/deployment-config.latest-version: "2"
      openshift.io/deployment-config.name: request-logger
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"request-logger","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/request-logger","uid":"6b547dd1-d53e-11e7-9f70-005056832285","resourceVersion":"276081679","generation":6,"creationTimestamp":"2017-11-29T19:49:32Z","labels":{"app":"request-logger"},"annotations":{"openshift.io/generated-by":"OpenShiftWebConsole"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["request-logger"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-dev","name":"request-logger:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:6a09a8baa58acd905518d5ff502f01d00c32ebead94853b2202db39991b0ccc3"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"deploymentconfig":"request-logger"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"request-logger","deploymentconfig":"request-logger"}},"spec":{"containers":[{"name":"request-logger","image":"172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:6a09a8baa58acd905518d5ff502f01d00c32ebead94853b2202db39991b0ccc3","ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":2,"observedGeneration":5,"replicas":1,"updatedReplicas":1,"availableReplicas":0,"unavailableReplicas":1,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-dev","name":"request-logger:latest"}}}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2017-11-29T19:49:32Z","lastTransitionTime":"2017-11-29T19:49:32Z","message":"Deployment config does not have minimum availability."},{"type":"Progressing","status":"Unknown","lastUpdateTime":"2017-11-29T19:49:32Z","lastTransitionTime":"2017-11-29T19:49:32Z","message":"replication controller \"request-logger-1\" is waiting for pod \"request-logger-1-deploy\" to run"}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: request-logger
      openshift.io/deployment-config.name: request-logger
    name: request-logger-2
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: request-logger
      uid: 6b547dd1-d53e-11e7-9f70-005056832285
  spec:
    replicas: 0
    selector:
      deployment: request-logger-2
      deploymentconfig: request-logger
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "2"
          openshift.io/deployment-config.name: request-logger
          openshift.io/deployment.name: request-logger-2
        creationTimestamp: null
        labels:
          app: request-logger
          deployment: request-logger-2
          deploymentconfig: request-logger
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:6a09a8baa58acd905518d5ff502f01d00c32ebead94853b2202db39991b0ccc3
          imagePullPolicy: Always
          name: request-logger
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.name: request-logger-3-deploy
      openshift.io/deployment-config.latest-version: "3"
      openshift.io/deployment-config.name: request-logger
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"request-logger","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/request-logger","uid":"6b547dd1-d53e-11e7-9f70-005056832285","resourceVersion":"283896279","generation":8,"creationTimestamp":"2017-11-29T19:49:32Z","labels":{"app":"request-logger"},"annotations":{"openshift.io/generated-by":"OpenShiftWebConsole"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["request-logger"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-dev","name":"request-logger:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:6a09a8baa58acd905518d5ff502f01d00c32ebead94853b2202db39991b0ccc3"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"deploymentconfig":"request-logger"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"request-logger","deploymentconfig":"request-logger"}},"spec":{"volumes":[{"name":"volume-8g9sa","configMap":{"name":"reques-logger","items":[{"key":"reques_logger.py","path":"request_logger.py"}],"defaultMode":420}}],"containers":[{"name":"request-logger","image":"172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:6a09a8baa58acd905518d5ff502f01d00c32ebead94853b2202db39991b0ccc3","ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"volume-8g9sa","mountPath":"/opt/app-root/src"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":3,"observedGeneration":7,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2017-11-29T19:52:52Z","lastTransitionTime":"2017-11-29T19:52:52Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"request-logger-2\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2017-12-05T03:22:15Z","lastTransitionTime":"2017-12-05T03:22:15Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      app: request-logger
      openshift.io/deployment-config.name: request-logger
    name: request-logger-3
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: request-logger
      uid: 6b547dd1-d53e-11e7-9f70-005056832285
  spec:
    replicas: 0
    selector:
      deployment: request-logger-3
      deploymentconfig: request-logger
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "3"
          openshift.io/deployment-config.name: request-logger
          openshift.io/deployment.name: request-logger-3
        creationTimestamp: null
        labels:
          app: request-logger
          deployment: request-logger-3
          deploymentconfig: request-logger
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:6a09a8baa58acd905518d5ff502f01d00c32ebead94853b2202db39991b0ccc3
          imagePullPolicy: Always
          name: request-logger
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/app-root/src
            name: volume-8g9sa
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: reques_logger.py
              path: request_logger.py
            name: reques-logger
          name: volume-8g9sa
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "0"
      openshift.io/deployer-pod.name: request-logger-4-deploy
      openshift.io/deployment-config.latest-version: "4"
      openshift.io/deployment-config.name: request-logger
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"request-logger","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/request-logger","uid":"6b547dd1-d53e-11e7-9f70-005056832285","resourceVersion":"286174352","generation":14,"creationTimestamp":"2017-11-29T19:49:32Z","labels":{"app":"request-logger"},"annotations":{"openshift.io/generated-by":"OpenShiftWebConsole"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["request-logger"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-dev","name":"request-logger:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:6a09a8baa58acd905518d5ff502f01d00c32ebead94853b2202db39991b0ccc3"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"deploymentconfig":"request-logger"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"request-logger","deploymentconfig":"request-logger"}},"spec":{"volumes":[{"name":"volume-8g9sa","configMap":{"name":"reques-logger","items":[{"key":"reques_logger.py","path":"request_logger.py"}],"defaultMode":420}}],"containers":[{"name":"request-logger","image":"172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:6a09a8baa58acd905518d5ff502f01d00c32ebead94853b2202db39991b0ccc3","ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"volumeMounts":[{"name":"volume-8g9sa","mountPath":"/opt/app-root/src"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":4,"observedGeneration":13,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2017-12-08T23:06:02Z","lastTransitionTime":"2017-12-08T23:05:59Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"request-logger-3\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2017-12-11T00:13:05Z","lastTransitionTime":"2017-12-11T00:13:05Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      app: request-logger
      openshift.io/deployment-config.name: request-logger
    name: request-logger-4
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: request-logger
      uid: 6b547dd1-d53e-11e7-9f70-005056832285
  spec:
    replicas: 0
    selector:
      deployment: request-logger-4
      deploymentconfig: request-logger
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "4"
          openshift.io/deployment-config.name: request-logger
          openshift.io/deployment.name: request-logger-4
        creationTimestamp: null
        labels:
          app: request-logger
          deployment: request-logger-4
          deploymentconfig: request-logger
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:6a09a8baa58acd905518d5ff502f01d00c32ebead94853b2202db39991b0ccc3
          imagePullPolicy: Always
          name: request-logger
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/app-root/src
            name: volume-8g9sa
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: reques_logger.py
              path: request_logger.py
            name: reques-logger
          name: volume-8g9sa
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.completed-at: 2018-02-27 15:12:30 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-02-27 15:12:22 -0800 PST
      openshift.io/deployer-pod.name: request-logger-5-deploy
      openshift.io/deployment-config.latest-version: "5"
      openshift.io/deployment-config.name: request-logger
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"request-logger","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/request-logger","uid":"6b547dd1-d53e-11e7-9f70-005056832285","resourceVersion":"355786935","generation":18,"creationTimestamp":"2017-11-29T19:49:32Z","labels":{"app":"request-logger"},"annotations":{"openshift.io/generated-by":"OpenShiftWebConsole"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["request-logger"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-dev","name":"request-logger:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:a6226da1c2150ea1079ee99c562588be59141547159365e72c8c0d1f8d69110e"}},{"type":"ConfigChange"}],"replicas":0,"test":false,"selector":{"deploymentconfig":"request-logger"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"request-logger","deploymentconfig":"request-logger"}},"spec":{"volumes":[{"name":"volume-8g9sa","configMap":{"name":"reques-logger","items":[{"key":"reques_logger.py","path":"request_logger.py"}],"defaultMode":420}}],"containers":[{"name":"request-logger","image":"172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:a6226da1c2150ea1079ee99c562588be59141547159365e72c8c0d1f8d69110e","ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"volumeMounts":[{"name":"volume-8g9sa","mountPath":"/opt/app-root/src"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":5,"observedGeneration":18,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:a6226da1c2150ea1079ee99c562588be59141547159365e72c8c0d1f8d69110e"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2017-12-13T00:03:18Z","lastTransitionTime":"2017-12-13T00:03:16Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"request-logger-4\" successfully rolled out"},{"type":"Available","status":"False","lastUpdateTime":"2018-02-10T00:14:17Z","lastTransitionTime":"2018-02-10T00:14:17Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: request-logger
      openshift.io/deployment-config.name: request-logger
    name: request-logger-5
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: request-logger
      uid: 6b547dd1-d53e-11e7-9f70-005056832285
  spec:
    replicas: 0
    selector:
      deployment: request-logger-5
      deploymentconfig: request-logger
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "5"
          openshift.io/deployment-config.name: request-logger
          openshift.io/deployment.name: request-logger-5
        creationTimestamp: null
        labels:
          app: request-logger
          deployment: request-logger-5
          deploymentconfig: request-logger
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:a6226da1c2150ea1079ee99c562588be59141547159365e72c8c0d1f8d69110e
          imagePullPolicy: Always
          name: request-logger
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/app-root/src
            name: volume-8g9sa
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: reques_logger.py
              path: request_logger.py
            name: reques-logger
          name: volume-8g9sa
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.completed-at: 2018-04-20 13:41:48 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-20 13:41:37 -0700 PDT
      openshift.io/deployer-pod.name: request-logger-6-deploy
      openshift.io/deployment-config.latest-version: "6"
      openshift.io/deployment-config.name: request-logger
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"request-logger","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/request-logger","uid":"6b547dd1-d53e-11e7-9f70-005056832285","resourceVersion":"430930420","generation":29,"creationTimestamp":"2017-11-29T19:49:32Z","labels":{"app":"request-logger"},"annotations":{"openshift.io/generated-by":"OpenShiftWebConsole"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["request-logger"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"request-logger:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/request-logger@sha256:b60debaeb7471cadf7d0bc1483a3ff9d1f8da19324c78273d2268a779193104a"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"deploymentconfig":"request-logger"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"request-logger","deploymentconfig":"request-logger"}},"spec":{"volumes":[{"name":"volume-8g9sa","configMap":{"name":"reques-logger","items":[{"key":"reques_logger.py","path":"request_logger.py"}],"defaultMode":420}}],"containers":[{"name":"request-logger","image":"172.50.0.2:5000/mem-tfrs-tools/request-logger@sha256:b60debaeb7471cadf7d0bc1483a3ff9d1f8da19324c78273d2268a779193104a","ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"volumeMounts":[{"name":"volume-8g9sa","mountPath":"/opt/app-root/src"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":6,"observedGeneration":29,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/request-logger@sha256:b60debaeb7471cadf7d0bc1483a3ff9d1f8da19324c78273d2268a779193104a"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-27T23:12:31Z","lastTransitionTime":"2018-02-27T23:12:31Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"request-logger-5\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-03-19T23:36:35Z","lastTransitionTime":"2018-03-19T23:36:35Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      app: request-logger
      openshift.io/deployment-config.name: request-logger
    name: request-logger-6
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: request-logger
      uid: 6b547dd1-d53e-11e7-9f70-005056832285
  spec:
    replicas: 0
    selector:
      deployment: request-logger-6
      deploymentconfig: request-logger
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "6"
          openshift.io/deployment-config.name: request-logger
          openshift.io/deployment.name: request-logger-6
        creationTimestamp: null
        labels:
          app: request-logger
          deployment: request-logger-6
          deploymentconfig: request-logger
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-tools/request-logger@sha256:b60debaeb7471cadf7d0bc1483a3ff9d1f8da19324c78273d2268a779193104a
          imagePullPolicy: Always
          name: request-logger
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/app-root/src
            name: volume-8g9sa
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: reques_logger.py
              path: request_logger.py
            name: reques-logger
          name: volume-8g9sa
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.completed-at: 2018-04-20 13:50:21 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-20 13:50:08 -0700 PDT
      openshift.io/deployer-pod.name: request-logger-7-deploy
      openshift.io/deployment-config.latest-version: "7"
      openshift.io/deployment-config.name: request-logger
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"request-logger","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/request-logger","uid":"6b547dd1-d53e-11e7-9f70-005056832285","resourceVersion":"430939314","generation":36,"creationTimestamp":"2017-11-29T19:49:32Z","labels":{"app":"request-logger"},"annotations":{"openshift.io/generated-by":"OpenShiftWebConsole"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["request-logger"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"request-logger:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/request-logger@sha256:bd2071b048447812c46073e247953b7747240033765e60c9ebf3604060566403"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"deploymentconfig":"request-logger"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"request-logger","deploymentconfig":"request-logger"}},"spec":{"volumes":[{"name":"volume-8g9sa","configMap":{"name":"reques-logger","items":[{"key":"reques_logger.py","path":"request_logger.py"}],"defaultMode":420}}],"containers":[{"name":"request-logger","image":"172.50.0.2:5000/mem-tfrs-tools/request-logger@sha256:bd2071b048447812c46073e247953b7747240033765e60c9ebf3604060566403","ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"volumeMounts":[{"name":"volume-8g9sa","mountPath":"/opt/app-root/src"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":7,"observedGeneration":36,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/request-logger@sha256:bd2071b048447812c46073e247953b7747240033765e60c9ebf3604060566403"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-20T20:41:49Z","lastTransitionTime":"2018-04-20T20:41:46Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"request-logger-6\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-04-20T20:48:54Z","lastTransitionTime":"2018-04-20T20:48:54Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      app: request-logger
      openshift.io/deployment-config.name: request-logger
    name: request-logger-7
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: request-logger
      uid: 6b547dd1-d53e-11e7-9f70-005056832285
  spec:
    replicas: 0
    selector:
      deployment: request-logger-7
      deploymentconfig: request-logger
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "7"
          openshift.io/deployment-config.name: request-logger
          openshift.io/deployment.name: request-logger-7
        creationTimestamp: null
        labels:
          app: request-logger
          deployment: request-logger-7
          deploymentconfig: request-logger
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-tools/request-logger@sha256:bd2071b048447812c46073e247953b7747240033765e60c9ebf3604060566403
          imagePullPolicy: Always
          name: request-logger
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/app-root/src
            name: volume-8g9sa
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: reques_logger.py
              path: request_logger.py
            name: reques-logger
          name: volume-8g9sa
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-20 14:06:59 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-20 14:06:50 -0700 PDT
      openshift.io/deployer-pod.name: request-logger-8-deploy
      openshift.io/deployment-config.latest-version: "8"
      openshift.io/deployment-config.name: request-logger
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"request-logger","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/request-logger","uid":"6b547dd1-d53e-11e7-9f70-005056832285","resourceVersion":"430955770","generation":37,"creationTimestamp":"2017-11-29T19:49:32Z","labels":{"app":"request-logger"},"annotations":{"openshift.io/generated-by":"OpenShiftWebConsole"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["request-logger"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"request-logger:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/request-logger@sha256:bd2071b048447812c46073e247953b7747240033765e60c9ebf3604060566403"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"deploymentconfig":"request-logger"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"request-logger","deploymentconfig":"request-logger"}},"spec":{"volumes":[{"name":"volume-8g9sa","configMap":{"name":"reques-logger","items":[{"key":"reques_logger.py","path":"request_logger.py"}],"defaultMode":420}}],"containers":[{"name":"request-logger","image":"172.50.0.2:5000/mem-tfrs-tools/request-logger@sha256:bd2071b048447812c46073e247953b7747240033765e60c9ebf3604060566403","ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{"limits":{"cpu":"250m","memory":"256Mi"}},"volumeMounts":[{"name":"volume-8g9sa","mountPath":"/opt/app-root/src"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":8,"observedGeneration":37,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-20T20:48:54Z","lastTransitionTime":"2018-04-20T20:48:54Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-20T20:50:22Z","lastTransitionTime":"2018-04-20T20:50:19Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"request-logger-7\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      app: request-logger
      openshift.io/deployment-config.name: request-logger
    name: request-logger-8
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: request-logger
      uid: 6b547dd1-d53e-11e7-9f70-005056832285
  spec:
    replicas: 1
    selector:
      deployment: request-logger-8
      deploymentconfig: request-logger
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "8"
          openshift.io/deployment-config.name: request-logger
          openshift.io/deployment.name: request-logger-8
        creationTimestamp: null
        labels:
          app: request-logger
          deployment: request-logger-8
          deploymentconfig: request-logger
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-tools/request-logger@sha256:bd2071b048447812c46073e247953b7747240033765e60c9ebf3604060566403
          imagePullPolicy: Always
          name: request-logger
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/app-root/src
            name: volume-8g9sa
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: reques_logger.py
              path: request_logger.py
            name: reques-logger
          name: volume-8g9sa
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.name: schema-spy-10-deploy
      openshift.io/deployment-config.latest-version: "10"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"schema-spy","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/schema-spy","uid":"786e9578-d61c-11e7-9b28-0050568379a2","resourceVersion":"327866186","generation":25,"creationTimestamp":"2017-11-30T22:19:02Z","annotations":{"description":"Defines how to deploy the container."}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ConfigChange"},{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["schema-spy"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf"}}],"replicas":0,"test":false,"selector":{"name":"schema-spy"},"template":{"metadata":{"name":"schema-spy","creationTimestamp":null,"labels":{"name":"schema-spy"}},"spec":{"containers":[{"name":"schema-spy","image":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":10,"observedGeneration":24,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-01-30T19:35:01Z","lastTransitionTime":"2018-01-30T19:35:01Z","message":"Deployment config does not have minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-01-30T19:37:43Z","lastTransitionTime":"2018-01-30T19:37:43Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"schema-spy-9\" successfully rolled out"}]}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: schema-spy
    name: schema-spy-10
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: schema-spy
      uid: 786e9578-d61c-11e7-9b28-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: schema-spy-10
      deploymentconfig: schema-spy
      name: schema-spy
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "10"
          openshift.io/deployment-config.name: schema-spy
          openshift.io/deployment.name: schema-spy-10
        creationTimestamp: null
        labels:
          deployment: schema-spy-10
          deploymentconfig: schema-spy
          name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-03-16 12:22:50 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-03-16 12:21:31 -0700 PDT
      openshift.io/deployer-pod.name: schema-spy-11-deploy
      openshift.io/deployment-config.latest-version: "11"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: manual change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"schema-spy","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/schema-spy","uid":"786e9578-d61c-11e7-9b28-0050568379a2","resourceVersion":"374607057","generation":33,"creationTimestamp":"2017-11-30T22:19:02Z","annotations":{"description":"Defines how to deploy the container."}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ConfigChange"},{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["schema-spy"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf"}}],"replicas":1,"test":false,"selector":{"name":"schema-spy"},"template":{"metadata":{"name":"schema-spy","creationTimestamp":null,"labels":{"name":"schema-spy"}},"spec":{"containers":[{"name":"schema-spy","image":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":11,"observedGeneration":32,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"manual change","causes":[{"type":"Manual"}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-01-30T19:37:57Z","lastTransitionTime":"2018-01-30T19:37:57Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"schema-spy-10\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-03-16T01:03:26Z","lastTransitionTime":"2018-03-16T01:03:26Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: schema-spy
    name: schema-spy-11
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: schema-spy
      uid: 786e9578-d61c-11e7-9b28-0050568379a2
  spec:
    replicas: 1
    selector:
      deployment: schema-spy-11
      deploymentconfig: schema-spy
      name: schema-spy
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "11"
          openshift.io/deployment-config.name: schema-spy
          openshift.io/deployment.name: schema-spy-11
        creationTimestamp: null
        labels:
          deployment: schema-spy-11
          deploymentconfig: schema-spy
          name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.name: schema-spy-5-deploy
      openshift.io/deployment-config.latest-version: "5"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: manual change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"schema-spy","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/schema-spy","uid":"786e9578-d61c-11e7-9b28-0050568379a2","resourceVersion":"310867829","generation":10,"creationTimestamp":"2017-11-30T22:19:02Z","annotations":{"description":"Defines how to deploy the container."}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ConfigChange"},{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["schema-spy"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:43e43d8b988b50b5eb6b09fdb34c350e3efa1500108d208c0f754f7217f19274"}}],"replicas":1,"test":false,"selector":{"name":"schema-spy"},"template":{"metadata":{"name":"schema-spy","creationTimestamp":null,"labels":{"name":"schema-spy"}},"spec":{"containers":[{"name":"schema-spy","image":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:43e43d8b988b50b5eb6b09fdb34c350e3efa1500108d208c0f754f7217f19274","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"username"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"password"}}}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":5,"observedGeneration":9,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"manual change","causes":[{"type":"Manual"}]},"conditions":[{"type":"Progressing","status":"False","lastUpdateTime":"2017-12-13T00:14:28Z","lastTransitionTime":"2017-12-13T00:14:28Z","reason":"ProgressDeadlineExceeded","message":"replication controller \"schema-spy-4\" has failed progressing"},{"type":"Available","status":"True","lastUpdateTime":"2018-01-09T03:09:07Z","lastTransitionTime":"2018-01-09T03:09:07Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: schema-spy
    name: schema-spy-5
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: schema-spy
      uid: 786e9578-d61c-11e7-9b28-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: schema-spy-5
      deploymentconfig: schema-spy
      name: schema-spy
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "5"
          openshift.io/deployment-config.name: schema-spy
          openshift.io/deployment.name: schema-spy-5
        creationTimestamp: null
        labels:
          deployment: schema-spy-5
          deploymentconfig: schema-spy
          name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:43e43d8b988b50b5eb6b09fdb34c350e3efa1500108d208c0f754f7217f19274
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.name: schema-spy-6-deploy
      openshift.io/deployment-config.latest-version: "6"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"schema-spy","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/schema-spy","uid":"786e9578-d61c-11e7-9b28-0050568379a2","resourceVersion":"327770072","generation":16,"creationTimestamp":"2017-11-30T22:19:02Z","annotations":{"description":"Defines how to deploy the container."}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ConfigChange"},{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["schema-spy"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf"}}],"replicas":1,"test":false,"selector":{"name":"schema-spy"},"template":{"metadata":{"name":"schema-spy","creationTimestamp":null,"labels":{"name":"schema-spy"}},"spec":{"containers":[{"name":"schema-spy","image":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"username"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"password"}}}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":6,"observedGeneration":15,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-01-10T00:39:56Z","lastTransitionTime":"2018-01-10T00:39:53Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"schema-spy-5\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-01-30T12:09:16Z","lastTransitionTime":"2018-01-30T12:09:16Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: schema-spy
    name: schema-spy-6
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: schema-spy
      uid: 786e9578-d61c-11e7-9b28-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: schema-spy-6
      deploymentconfig: schema-spy
      name: schema-spy
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "6"
          openshift.io/deployment-config.name: schema-spy
          openshift.io/deployment.name: schema-spy-6
        creationTimestamp: null
        labels:
          deployment: schema-spy-6
          deploymentconfig: schema-spy
          name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/desired-replicas: "1"
      kubectl.kubernetes.io/update-source-id: schema-spy-6:31ee4fc6-05e3-11e8-b39a-0050568348cc
      openshift.io/deployer-pod.name: schema-spy-7-deploy
      openshift.io/deployment-config.latest-version: "7"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.cancelled: "true"
      openshift.io/deployment.phase: Failed
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: newer deployment was found running
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"schema-spy","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/schema-spy","uid":"786e9578-d61c-11e7-9b28-0050568379a2","resourceVersion":"327823567","generation":18,"creationTimestamp":"2017-11-30T22:19:02Z","annotations":{"description":"Defines how to deploy the container."}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ConfigChange"},{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["schema-spy"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf"}}],"replicas":1,"test":false,"selector":{"name":"schema-spy"},"template":{"metadata":{"name":"schema-spy","creationTimestamp":null,"labels":{"name":"schema-spy"}},"spec":{"containers":[{"name":"schema-spy","image":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER_OLD","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"username"}}},{"name":"POSTGRESQL_PASSWORD_OLD","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"password"}}},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"POSTGRESQL_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"POSTGRESQL_PASSWORD"}}}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":7,"observedGeneration":17,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-01-30T12:09:16Z","lastTransitionTime":"2018-01-30T12:09:16Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-01-30T17:31:19Z","lastTransitionTime":"2018-01-30T17:31:16Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"schema-spy-6\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: schema-spy
    name: schema-spy-7
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: schema-spy
      uid: 786e9578-d61c-11e7-9b28-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: schema-spy-7
      deploymentconfig: schema-spy
      name: schema-spy
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "7"
          openshift.io/deployment-config.name: schema-spy
          openshift.io/deployment.name: schema-spy-7
        creationTimestamp: null
        labels:
          deployment: schema-spy-7
          deploymentconfig: schema-spy
          name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER_OLD
            valueFrom:
              secretKeyRef:
                key: username
                name: postgresql
          - name: POSTGRESQL_PASSWORD_OLD
            valueFrom:
              secretKeyRef:
                key: password
                name: postgresql
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: POSTGRESQL_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: POSTGRESQL_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "0"
      openshift.io/deployer-pod.name: schema-spy-8-deploy
      openshift.io/deployment-config.latest-version: "8"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"schema-spy","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/schema-spy","uid":"786e9578-d61c-11e7-9b28-0050568379a2","resourceVersion":"327826607","generation":20,"creationTimestamp":"2017-11-30T22:19:02Z","annotations":{"description":"Defines how to deploy the container."}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ConfigChange"},{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["schema-spy"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf"}}],"replicas":1,"test":false,"selector":{"name":"schema-spy"},"template":{"metadata":{"name":"schema-spy","creationTimestamp":null,"labels":{"name":"schema-spy"}},"spec":{"containers":[{"name":"schema-spy","image":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"username"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"password"}}}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":8,"observedGeneration":19,"replicas":2,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":1,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-01-30T12:09:16Z","lastTransitionTime":"2018-01-30T12:09:16Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"Unknown","lastUpdateTime":"2018-01-30T18:41:11Z","lastTransitionTime":"2018-01-30T18:41:11Z","message":"replication controller \"schema-spy-7\" is waiting for pod \"schema-spy-7-deploy\" to run"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: schema-spy
    name: schema-spy-8
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: schema-spy
      uid: 786e9578-d61c-11e7-9b28-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: schema-spy-8
      deploymentconfig: schema-spy
      name: schema-spy
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "8"
          openshift.io/deployment-config.name: schema-spy
          openshift.io/deployment.name: schema-spy-8
        creationTimestamp: null
        labels:
          deployment: schema-spy-8
          deploymentconfig: schema-spy
          name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "0"
      openshift.io/deployer-pod.name: schema-spy-9-deploy
      openshift.io/deployment-config.latest-version: "9"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"schema-spy","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/schema-spy","uid":"786e9578-d61c-11e7-9b28-0050568379a2","resourceVersion":"327866003","generation":23,"creationTimestamp":"2017-11-30T22:19:02Z","annotations":{"description":"Defines how to deploy the container."}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ConfigChange"},{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["schema-spy"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf"}}],"replicas":0,"test":false,"selector":{"name":"schema-spy"},"template":{"metadata":{"name":"schema-spy","creationTimestamp":null,"labels":{"name":"schema-spy"}},"spec":{"containers":[{"name":"schema-spy","image":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"OLD_POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"username"}}},{"name":"OLD_POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"password"}}},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":9,"observedGeneration":22,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-01-30T18:45:51Z","lastTransitionTime":"2018-01-30T18:45:49Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"schema-spy-8\" successfully rolled out"},{"type":"Available","status":"False","lastUpdateTime":"2018-01-30T19:35:01Z","lastTransitionTime":"2018-01-30T19:35:01Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: schema-spy
    name: schema-spy-9
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: schema-spy
      uid: 786e9578-d61c-11e7-9b28-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: schema-spy-9
      deploymentconfig: schema-spy
      name: schema-spy
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "9"
          openshift.io/deployment-config.name: schema-spy
          openshift.io/deployment.name: schema-spy-9
        creationTimestamp: null
        labels:
          deployment: schema-spy-9
          deploymentconfig: schema-spy
          name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: OLD_POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: postgresql
          - name: OLD_POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: postgresql
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/desired-replicas: "1"
      openshift.io/deployer-pod.created-at: 2018-04-09 16:49:45 -0700 PDT
      openshift.io/deployer-pod.name: tfrs-413-deploy
      openshift.io/deployment-config.latest-version: "413"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.cancelled: "true"
      openshift.io/deployment.phase: Failed
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: The deployment was cancelled by the user
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs","uid":"21154530-05dd-11e7-a694-005056832285","resourceVersion":"413159734","generation":698,"creationTimestamp":"2017-03-10T22:01:35Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:d0e75b2586bf0ed28bf5dfb6b8d7b6c1de5c8de92a79b9ea8a7794ce6d183f5c"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:d0e75b2586bf0ed28bf5dfb6b8d7b6c1de5c8de92a79b9ea8a7794ce6d183f5c","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG","value":"/opt/app-root/src/gunicorn.cfg"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":413,"observedGeneration":698,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:d0e75b2586bf0ed28bf5dfb6b8d7b6c1de5c8de92a79b9ea8a7794ce6d183f5c"}}}]},"conditions":[{"type":"Progressing","status":"False","lastUpdateTime":"2018-04-09T23:47:06Z","lastTransitionTime":"2018-04-09T23:47:06Z","reason":"ProgressDeadlineExceeded","message":"replication controller \"tfrs-412\" has failed progressing"},{"type":"Available","status":"True","lastUpdateTime":"2018-04-09T23:47:57Z","lastTransitionTime":"2018-04-09T23:47:57Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-413
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 21154530-05dd-11e7-a694-005056832285
  spec:
    replicas: 0
    selector:
      deployment: tfrs-413
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "413"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-413
        creationTimestamp: null
        labels:
          deployment: tfrs-413
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
            value: /opt/app-root/src/gunicorn.cfg
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:d0e75b2586bf0ed28bf5dfb6b8d7b6c1de5c8de92a79b9ea8a7794ce6d183f5c
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-15 23:16:13 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-15 23:15:10 -0700 PDT
      openshift.io/deployer-pod.name: tfrs-427-deploy
      openshift.io/deployment-config.latest-version: "427"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs","uid":"21154530-05dd-11e7-a694-005056832285","resourceVersion":"423206244","generation":714,"creationTimestamp":"2017-03-10T22:01:35Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:2371c62ddbf6315ea136128e8b16e682b51d4f467dcc530568e39e3a50ced1cf"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:2371c62ddbf6315ea136128e8b16e682b51d4f467dcc530568e39e3a50ced1cf","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG","value":"/opt/app-root/src/gunicorn.cfg"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":427,"observedGeneration":714,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:2371c62ddbf6315ea136128e8b16e682b51d4f467dcc530568e39e3a50ced1cf"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-15T06:16:27Z","lastTransitionTime":"2018-04-15T06:16:27Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-15T06:16:28Z","lastTransitionTime":"2018-04-15T06:15:46Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-426\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-427
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 21154530-05dd-11e7-a694-005056832285
  spec:
    replicas: 0
    selector:
      deployment: tfrs-427
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "427"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-427
        creationTimestamp: null
        labels:
          deployment: tfrs-427
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
            value: /opt/app-root/src/gunicorn.cfg
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:2371c62ddbf6315ea136128e8b16e682b51d4f467dcc530568e39e3a50ced1cf
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-16 23:18:05 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-16 23:16:57 -0700 PDT
      openshift.io/deployer-pod.name: tfrs-428-deploy
      openshift.io/deployment-config.latest-version: "428"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs","uid":"21154530-05dd-11e7-a694-005056832285","resourceVersion":"424504428","generation":715,"creationTimestamp":"2017-03-10T22:01:35Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:8f5542463024be3a22616bbba585c2a4abbd80eaa418576f0e7f179ad823c660"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:8f5542463024be3a22616bbba585c2a4abbd80eaa418576f0e7f179ad823c660","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG","value":"/opt/app-root/src/gunicorn.cfg"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":428,"observedGeneration":715,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:8f5542463024be3a22616bbba585c2a4abbd80eaa418576f0e7f179ad823c660"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-16T06:16:13Z","lastTransitionTime":"2018-04-16T06:16:13Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-16T06:16:14Z","lastTransitionTime":"2018-04-16T06:15:32Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-427\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-428
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 21154530-05dd-11e7-a694-005056832285
  spec:
    replicas: 0
    selector:
      deployment: tfrs-428
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "428"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-428
        creationTimestamp: null
        labels:
          deployment: tfrs-428
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
            value: /opt/app-root/src/gunicorn.cfg
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:8f5542463024be3a22616bbba585c2a4abbd80eaa418576f0e7f179ad823c660
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-17 15:18:55 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-17 15:17:53 -0700 PDT
      openshift.io/deployer-pod.name: tfrs-429-deploy
      openshift.io/deployment-config.latest-version: "429"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs","uid":"21154530-05dd-11e7-a694-005056832285","resourceVersion":"425408109","generation":716,"creationTimestamp":"2017-03-10T22:01:35Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:61c6799fd7a2d2fd482698f0819827ccd6fe31cda1bab5188f58517ec584ad03"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:61c6799fd7a2d2fd482698f0819827ccd6fe31cda1bab5188f58517ec584ad03","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG","value":"/opt/app-root/src/gunicorn.cfg"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":429,"observedGeneration":716,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:61c6799fd7a2d2fd482698f0819827ccd6fe31cda1bab5188f58517ec584ad03"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-17T06:18:04Z","lastTransitionTime":"2018-04-17T06:18:04Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-17T06:18:06Z","lastTransitionTime":"2018-04-17T06:17:23Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-428\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-429
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 21154530-05dd-11e7-a694-005056832285
  spec:
    replicas: 0
    selector:
      deployment: tfrs-429
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "429"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-429
        creationTimestamp: null
        labels:
          deployment: tfrs-429
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
            value: /opt/app-root/src/gunicorn.cfg
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:61c6799fd7a2d2fd482698f0819827ccd6fe31cda1bab5188f58517ec584ad03
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-17 23:20:01 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-17 23:18:42 -0700 PDT
      openshift.io/deployer-pod.name: tfrs-430-deploy
      openshift.io/deployment-config.latest-version: "430"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs","uid":"21154530-05dd-11e7-a694-005056832285","resourceVersion":"425936459","generation":717,"creationTimestamp":"2017-03-10T22:01:35Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:699fb22baf2c737e56d5934a1394ba5c4ac1d14930d6925172f0cde6a4748fc7"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:699fb22baf2c737e56d5934a1394ba5c4ac1d14930d6925172f0cde6a4748fc7","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG","value":"/opt/app-root/src/gunicorn.cfg"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":430,"observedGeneration":717,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:699fb22baf2c737e56d5934a1394ba5c4ac1d14930d6925172f0cde6a4748fc7"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-17T22:18:55Z","lastTransitionTime":"2018-04-17T22:18:55Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-17T22:18:56Z","lastTransitionTime":"2018-04-17T22:18:14Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-429\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-430
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 21154530-05dd-11e7-a694-005056832285
  spec:
    replicas: 0
    selector:
      deployment: tfrs-430
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "430"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-430
        creationTimestamp: null
        labels:
          deployment: tfrs-430
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
            value: /opt/app-root/src/gunicorn.cfg
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:699fb22baf2c737e56d5934a1394ba5c4ac1d14930d6925172f0cde6a4748fc7
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-18 23:20:01 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-18 23:18:49 -0700 PDT
      openshift.io/deployer-pod.name: tfrs-431-deploy
      openshift.io/deployment-config.latest-version: "431"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs","uid":"21154530-05dd-11e7-a694-005056832285","resourceVersion":"427821034","generation":718,"creationTimestamp":"2017-03-10T22:01:35Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:93e3fd502db9afd87bb4bd60701de0afec6b69867c17524b008dea3118badd69"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:93e3fd502db9afd87bb4bd60701de0afec6b69867c17524b008dea3118badd69","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG","value":"/opt/app-root/src/gunicorn.cfg"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":431,"observedGeneration":718,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:93e3fd502db9afd87bb4bd60701de0afec6b69867c17524b008dea3118badd69"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-18T06:20:01Z","lastTransitionTime":"2018-04-18T06:20:01Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-18T06:20:03Z","lastTransitionTime":"2018-04-18T06:19:20Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-430\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-431
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 21154530-05dd-11e7-a694-005056832285
  spec:
    replicas: 0
    selector:
      deployment: tfrs-431
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "431"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-431
        creationTimestamp: null
        labels:
          deployment: tfrs-431
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
            value: /opt/app-root/src/gunicorn.cfg
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:93e3fd502db9afd87bb4bd60701de0afec6b69867c17524b008dea3118badd69
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-19 23:17:20 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-19 23:16:09 -0700 PDT
      openshift.io/deployer-pod.name: tfrs-432-deploy
      openshift.io/deployment-config.latest-version: "432"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs","uid":"21154530-05dd-11e7-a694-005056832285","resourceVersion":"429828959","generation":719,"creationTimestamp":"2017-03-10T22:01:35Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:992c71c11d677ce558eff6fd015c97b48ac7c6b91af537d535f6915486ddf3ca"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:992c71c11d677ce558eff6fd015c97b48ac7c6b91af537d535f6915486ddf3ca","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG","value":"/opt/app-root/src/gunicorn.cfg"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":432,"observedGeneration":719,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:992c71c11d677ce558eff6fd015c97b48ac7c6b91af537d535f6915486ddf3ca"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-19T06:20:00Z","lastTransitionTime":"2018-04-19T06:20:00Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-19T06:20:02Z","lastTransitionTime":"2018-04-19T06:19:20Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-431\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-432
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 21154530-05dd-11e7-a694-005056832285
  spec:
    replicas: 0
    selector:
      deployment: tfrs-432
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "432"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-432
        creationTimestamp: null
        labels:
          deployment: tfrs-432
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
            value: /opt/app-root/src/gunicorn.cfg
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:992c71c11d677ce558eff6fd015c97b48ac7c6b91af537d535f6915486ddf3ca
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-20 23:16:07 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-20 23:15:09 -0700 PDT
      openshift.io/deployer-pod.name: tfrs-433-deploy
      openshift.io/deployment-config.latest-version: "433"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs","uid":"21154530-05dd-11e7-a694-005056832285","resourceVersion":"431537026","generation":720,"creationTimestamp":"2017-03-10T22:01:35Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:63ddfead6319b82dfe92e7eb217617c5720602997c96270c50ed39198bca83a6"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:63ddfead6319b82dfe92e7eb217617c5720602997c96270c50ed39198bca83a6","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG","value":"/opt/app-root/src/gunicorn.cfg"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":433,"observedGeneration":720,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:63ddfead6319b82dfe92e7eb217617c5720602997c96270c50ed39198bca83a6"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-20T06:17:21Z","lastTransitionTime":"2018-04-20T06:16:38Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-432\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-04-20T13:52:19Z","lastTransitionTime":"2018-04-20T13:52:19Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-433
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 21154530-05dd-11e7-a694-005056832285
  spec:
    replicas: 0
    selector:
      deployment: tfrs-433
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "433"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-433
        creationTimestamp: null
        labels:
          deployment: tfrs-433
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
            value: /opt/app-root/src/gunicorn.cfg
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:63ddfead6319b82dfe92e7eb217617c5720602997c96270c50ed39198bca83a6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-21 23:15:52 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-21 23:14:47 -0700 PDT
      openshift.io/deployer-pod.name: tfrs-434-deploy
      openshift.io/deployment-config.latest-version: "434"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs","uid":"21154530-05dd-11e7-a694-005056832285","resourceVersion":"432994792","generation":721,"creationTimestamp":"2017-03-10T22:01:35Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:0fba592c65679187c37e7be70a2c53ec512fd2da6769c9542f506ebfb152d851"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:0fba592c65679187c37e7be70a2c53ec512fd2da6769c9542f506ebfb152d851","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG","value":"/opt/app-root/src/gunicorn.cfg"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":434,"observedGeneration":721,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:0fba592c65679187c37e7be70a2c53ec512fd2da6769c9542f506ebfb152d851"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-21T06:16:07Z","lastTransitionTime":"2018-04-21T06:16:07Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-21T06:16:08Z","lastTransitionTime":"2018-04-21T06:15:25Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-433\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-434
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 21154530-05dd-11e7-a694-005056832285
  spec:
    replicas: 0
    selector:
      deployment: tfrs-434
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "434"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-434
        creationTimestamp: null
        labels:
          deployment: tfrs-434
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
            value: /opt/app-root/src/gunicorn.cfg
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:0fba592c65679187c37e7be70a2c53ec512fd2da6769c9542f506ebfb152d851
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-22 23:15:51 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-22 23:14:57 -0700 PDT
      openshift.io/deployer-pod.name: tfrs-435-deploy
      openshift.io/deployment-config.latest-version: "435"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs","uid":"21154530-05dd-11e7-a694-005056832285","resourceVersion":"434285617","generation":722,"creationTimestamp":"2017-03-10T22:01:35Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-develop:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:c33fb861288fb55b44a499b9d7aaee1a6ebd14b51137612952b5934b8b013506"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:c33fb861288fb55b44a499b9d7aaee1a6ebd14b51137612952b5934b8b013506","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG","value":"/opt/app-root/src/gunicorn.cfg"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":435,"observedGeneration":722,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:c33fb861288fb55b44a499b9d7aaee1a6ebd14b51137612952b5934b8b013506"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-22T06:15:52Z","lastTransitionTime":"2018-04-22T06:15:52Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-22T06:15:53Z","lastTransitionTime":"2018-04-22T06:15:11Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-434\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-435
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 21154530-05dd-11e7-a694-005056832285
  spec:
    replicas: 1
    selector:
      deployment: tfrs-435
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "435"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-435
        creationTimestamp: null
        labels:
          deployment: tfrs-435
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
            value: /opt/app-root/src/gunicorn.cfg
          - name: DJANGO_DEBUG
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:c33fb861288fb55b44a499b9d7aaee1a6ebd14b51137612952b5934b8b013506
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/desired-replicas: "1"
      openshift.io/deployer-pod.name: tfrs-bypass-3-deploy
      openshift.io/deployment-config.latest-version: "3"
      openshift.io/deployment-config.name: tfrs-bypass
      openshift.io/deployment.phase: Failed
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: manual change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs-bypass","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs-bypass","uid":"d67fb896-129f-11e8-b39a-0050568348cc","resourceVersion":"343433209","generation":6,"creationTimestamp":"2018-02-15T22:30:34Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-bypass-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-bypass-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-bypass:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:4b6bb26f15940a701235b4c4a0551390ef83d738d12181fe89108e54524b80b6"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs-bypass"},"template":{"metadata":{"name":"tfrs-bypass","creationTimestamp":null,"labels":{"name":"tfrs-bypass"}},"spec":{"containers":[{"name":"tfrs-bypass-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:4b6bb26f15940a701235b4c4a0551390ef83d738d12181fe89108e54524b80b6","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql-bypass"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs-bypass"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"BYPASS_HEADER_AUTHENTICATION","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":3,"observedGeneration":5,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"manual change","causes":[{"type":"Manual"}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-02-15T22:30:34Z","lastTransitionTime":"2018-02-15T22:30:34Z","message":"Deployment config does not have minimum availability."},{"type":"Progressing","status":"False","lastUpdateTime":"2018-02-16T22:53:24Z","lastTransitionTime":"2018-02-16T22:53:24Z","reason":"ProgressDeadlineExceeded","message":"replication controller \"tfrs-bypass-2\" has failed progressing"}]}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs-bypass
      template: tfrs-app-environment
    name: tfrs-bypass-3
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs-bypass
      uid: d67fb896-129f-11e8-b39a-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-bypass-3
      deploymentconfig: tfrs-bypass
      name: tfrs-bypass
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "3"
          openshift.io/deployment-config.name: tfrs-bypass
          openshift.io/deployment.name: tfrs-bypass-3
        creationTimestamp: null
        labels:
          deployment: tfrs-bypass-3
          deploymentconfig: tfrs-bypass
          name: tfrs-bypass
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql-bypass
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs-bypass
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: BYPASS_HEADER_AUTHENTICATION
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:4b6bb26f15940a701235b4c4a0551390ef83d738d12181fe89108e54524b80b6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-bypass-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-11 16:01:51 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-11 16:00:37 -0700 PDT
      openshift.io/deployer-pod.name: tfrs-bypass-40-deploy
      openshift.io/deployment-config.latest-version: "40"
      openshift.io/deployment-config.name: tfrs-bypass
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs-bypass","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs-bypass","uid":"d67fb896-129f-11e8-b39a-0050568348cc","resourceVersion":"416372068","generation":63,"creationTimestamp":"2018-02-15T22:30:34Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-bypass-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-bypass-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-bypass:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:b435bcbafbe54d5bdc879d3a0592043c92c61d69f18ee0fd502861a35558168f"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs-bypass"},"template":{"metadata":{"name":"tfrs-bypass","creationTimestamp":null,"labels":{"name":"tfrs-bypass"}},"spec":{"containers":[{"name":"tfrs-bypass-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:b435bcbafbe54d5bdc879d3a0592043c92c61d69f18ee0fd502861a35558168f","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql-bypass"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"BYPASS_HEADER_AUTHENTICATION","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"cpu":"250m","memory":"256Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":40,"observedGeneration":63,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:b435bcbafbe54d5bdc879d3a0592043c92c61d69f18ee0fd502861a35558168f"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-11T21:48:37Z","lastTransitionTime":"2018-04-11T21:48:37Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-11T21:48:38Z","lastTransitionTime":"2018-04-11T21:47:45Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-bypass-39\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs-bypass
      template: tfrs-app-environment
    name: tfrs-bypass-40
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs-bypass
      uid: d67fb896-129f-11e8-b39a-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-bypass-40
      deploymentconfig: tfrs-bypass
      name: tfrs-bypass
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "40"
          openshift.io/deployment-config.name: tfrs-bypass
          openshift.io/deployment.name: tfrs-bypass-40
        creationTimestamp: null
        labels:
          deployment: tfrs-bypass-40
          deploymentconfig: tfrs-bypass
          name: tfrs-bypass
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql-bypass
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: BYPASS_HEADER_AUTHENTICATION
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:b435bcbafbe54d5bdc879d3a0592043c92c61d69f18ee0fd502861a35558168f
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-bypass-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-12 14:05:59 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-12 14:04:47 -0700 PDT
      openshift.io/deployer-pod.name: tfrs-bypass-41-deploy
      openshift.io/deployment-config.latest-version: "41"
      openshift.io/deployment-config.name: tfrs-bypass
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs-bypass","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs-bypass","uid":"d67fb896-129f-11e8-b39a-0050568348cc","resourceVersion":"417829124","generation":64,"creationTimestamp":"2018-02-15T22:30:34Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-bypass-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-bypass-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-bypass:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:6fe6fc33080e68954041f1c938d2eac5a92c114fcd9a0ae7b612cc7a69b2cd54"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs-bypass"},"template":{"metadata":{"name":"tfrs-bypass","creationTimestamp":null,"labels":{"name":"tfrs-bypass"}},"spec":{"containers":[{"name":"tfrs-bypass-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:6fe6fc33080e68954041f1c938d2eac5a92c114fcd9a0ae7b612cc7a69b2cd54","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql-bypass"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"BYPASS_HEADER_AUTHENTICATION","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"cpu":"250m","memory":"256Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":41,"observedGeneration":64,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:6fe6fc33080e68954041f1c938d2eac5a92c114fcd9a0ae7b612cc7a69b2cd54"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-11T23:01:51Z","lastTransitionTime":"2018-04-11T23:01:51Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-11T23:01:52Z","lastTransitionTime":"2018-04-11T23:01:10Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-bypass-40\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs-bypass
      template: tfrs-app-environment
    name: tfrs-bypass-41
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs-bypass
      uid: d67fb896-129f-11e8-b39a-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-bypass-41
      deploymentconfig: tfrs-bypass
      name: tfrs-bypass
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "41"
          openshift.io/deployment-config.name: tfrs-bypass
          openshift.io/deployment.name: tfrs-bypass-41
        creationTimestamp: null
        labels:
          deployment: tfrs-bypass-41
          deploymentconfig: tfrs-bypass
          name: tfrs-bypass
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql-bypass
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: BYPASS_HEADER_AUTHENTICATION
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:6fe6fc33080e68954041f1c938d2eac5a92c114fcd9a0ae7b612cc7a69b2cd54
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-bypass-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-13 09:50:35 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-13 09:49:23 -0700 PDT
      openshift.io/deployer-pod.name: tfrs-bypass-42-deploy
      openshift.io/deployment-config.latest-version: "42"
      openshift.io/deployment-config.name: tfrs-bypass
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs-bypass","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs-bypass","uid":"d67fb896-129f-11e8-b39a-0050568348cc","resourceVersion":"419236898","generation":65,"creationTimestamp":"2018-02-15T22:30:34Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-bypass-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-bypass-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-bypass:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:737b6beef4e395fb20230e5f479a66548600d170eff9209fd058dc1dc02cfabf"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs-bypass"},"template":{"metadata":{"name":"tfrs-bypass","creationTimestamp":null,"labels":{"name":"tfrs-bypass"}},"spec":{"containers":[{"name":"tfrs-bypass-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:737b6beef4e395fb20230e5f479a66548600d170eff9209fd058dc1dc02cfabf","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql-bypass"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"BYPASS_HEADER_AUTHENTICATION","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"cpu":"250m","memory":"256Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":42,"observedGeneration":65,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:737b6beef4e395fb20230e5f479a66548600d170eff9209fd058dc1dc02cfabf"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-12T21:05:59Z","lastTransitionTime":"2018-04-12T21:05:59Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-12T21:06:00Z","lastTransitionTime":"2018-04-12T21:05:18Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-bypass-41\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs-bypass
      template: tfrs-app-environment
    name: tfrs-bypass-42
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs-bypass
      uid: d67fb896-129f-11e8-b39a-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-bypass-42
      deploymentconfig: tfrs-bypass
      name: tfrs-bypass
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "42"
          openshift.io/deployment-config.name: tfrs-bypass
          openshift.io/deployment.name: tfrs-bypass-42
        creationTimestamp: null
        labels:
          deployment: tfrs-bypass-42
          deploymentconfig: tfrs-bypass
          name: tfrs-bypass
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql-bypass
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: BYPASS_HEADER_AUTHENTICATION
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:737b6beef4e395fb20230e5f479a66548600d170eff9209fd058dc1dc02cfabf
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-bypass-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-13 13:22:05 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-13 13:20:41 -0700 PDT
      openshift.io/deployer-pod.name: tfrs-bypass-43-deploy
      openshift.io/deployment-config.latest-version: "43"
      openshift.io/deployment-config.name: tfrs-bypass
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs-bypass","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs-bypass","uid":"d67fb896-129f-11e8-b39a-0050568348cc","resourceVersion":"419481506","generation":66,"creationTimestamp":"2018-02-15T22:30:34Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-bypass-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-bypass-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-bypass:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:e4e6fbf0aa40ed084ebf44f76697e2aa51bce2f7d14320470ecd357b36c362b6"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs-bypass"},"template":{"metadata":{"name":"tfrs-bypass","creationTimestamp":null,"labels":{"name":"tfrs-bypass"}},"spec":{"containers":[{"name":"tfrs-bypass-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:e4e6fbf0aa40ed084ebf44f76697e2aa51bce2f7d14320470ecd357b36c362b6","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql-bypass"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"BYPASS_HEADER_AUTHENTICATION","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"cpu":"250m","memory":"256Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":43,"observedGeneration":66,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:e4e6fbf0aa40ed084ebf44f76697e2aa51bce2f7d14320470ecd357b36c362b6"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-13T16:50:34Z","lastTransitionTime":"2018-04-13T16:50:34Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-13T16:50:37Z","lastTransitionTime":"2018-04-13T16:49:52Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-bypass-42\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs-bypass
      template: tfrs-app-environment
    name: tfrs-bypass-43
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs-bypass
      uid: d67fb896-129f-11e8-b39a-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-bypass-43
      deploymentconfig: tfrs-bypass
      name: tfrs-bypass
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "43"
          openshift.io/deployment-config.name: tfrs-bypass
          openshift.io/deployment.name: tfrs-bypass-43
        creationTimestamp: null
        labels:
          deployment: tfrs-bypass-43
          deploymentconfig: tfrs-bypass
          name: tfrs-bypass
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql-bypass
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: BYPASS_HEADER_AUTHENTICATION
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:e4e6fbf0aa40ed084ebf44f76697e2aa51bce2f7d14320470ecd357b36c362b6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-bypass-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-13 13:25:29 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-13 13:24:16 -0700 PDT
      openshift.io/deployer-pod.name: tfrs-bypass-44-deploy
      openshift.io/deployment-config.latest-version: "44"
      openshift.io/deployment-config.name: tfrs-bypass
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs-bypass","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs-bypass","uid":"d67fb896-129f-11e8-b39a-0050568348cc","resourceVersion":"419486034","generation":67,"creationTimestamp":"2018-02-15T22:30:34Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-bypass-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-bypass-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-bypass:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:8c79511f8ed79758708fa6bee6b88665d36cacb71857d82191489e9c61d17325"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs-bypass"},"template":{"metadata":{"name":"tfrs-bypass","creationTimestamp":null,"labels":{"name":"tfrs-bypass"}},"spec":{"containers":[{"name":"tfrs-bypass-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:8c79511f8ed79758708fa6bee6b88665d36cacb71857d82191489e9c61d17325","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql-bypass"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"BYPASS_HEADER_AUTHENTICATION","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"cpu":"250m","memory":"256Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":44,"observedGeneration":67,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:8c79511f8ed79758708fa6bee6b88665d36cacb71857d82191489e9c61d17325"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-13T20:22:05Z","lastTransitionTime":"2018-04-13T20:22:05Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-13T20:22:06Z","lastTransitionTime":"2018-04-13T20:21:24Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-bypass-43\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs-bypass
      template: tfrs-app-environment
    name: tfrs-bypass-44
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs-bypass
      uid: d67fb896-129f-11e8-b39a-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-bypass-44
      deploymentconfig: tfrs-bypass
      name: tfrs-bypass
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "44"
          openshift.io/deployment-config.name: tfrs-bypass
          openshift.io/deployment.name: tfrs-bypass-44
        creationTimestamp: null
        labels:
          deployment: tfrs-bypass-44
          deploymentconfig: tfrs-bypass
          name: tfrs-bypass
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql-bypass
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: BYPASS_HEADER_AUTHENTICATION
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:8c79511f8ed79758708fa6bee6b88665d36cacb71857d82191489e9c61d17325
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-bypass-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-17 15:05:15 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-17 15:04:01 -0700 PDT
      openshift.io/deployer-pod.name: tfrs-bypass-45-deploy
      openshift.io/deployment-config.latest-version: "45"
      openshift.io/deployment-config.name: tfrs-bypass
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs-bypass","namespace":"mem-tfrs-dev","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-dev/deploymentconfigs/tfrs-bypass","uid":"d67fb896-129f-11e8-b39a-0050568348cc","resourceVersion":"425393267","generation":68,"creationTimestamp":"2018-02-15T22:30:34Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-bypass-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-bypass-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs-bypass:dev"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:83bfb277ec67d5880b8531a9fed087f3a7a384576696ff0f672a8a6ee893c20f"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs-bypass"},"template":{"metadata":{"name":"tfrs-bypass","creationTimestamp":null,"labels":{"name":"tfrs-bypass"}},"spec":{"containers":[{"name":"tfrs-bypass-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:83bfb277ec67d5880b8531a9fed087f3a7a384576696ff0f672a8a6ee893c20f","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql-bypass"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DJANGO_DEBUG","value":"True"},{"name":"BYPASS_HEADER_AUTHENTICATION","value":"True"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"cpu":"250m","memory":"256Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":45,"observedGeneration":68,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:83bfb277ec67d5880b8531a9fed087f3a7a384576696ff0f672a8a6ee893c20f"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-13T20:25:28Z","lastTransitionTime":"2018-04-13T20:25:28Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-13T20:25:30Z","lastTransitionTime":"2018-04-13T20:24:47Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-bypass-44\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs-bypass
      template: tfrs-app-environment
    name: tfrs-bypass-45
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs-bypass
      uid: d67fb896-129f-11e8-b39a-0050568348cc
  spec:
    replicas: 1
    selector:
      deployment: tfrs-bypass-45
      deploymentconfig: tfrs-bypass
      name: tfrs-bypass
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "45"
          openshift.io/deployment-config.name: tfrs-bypass
          openshift.io/deployment.name: tfrs-bypass-45
        creationTimestamp: null
        labels:
          deployment: tfrs-bypass-45
          deploymentconfig: tfrs-bypass
          name: tfrs-bypass
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql-bypass
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DJANGO_DEBUG
            value: "True"
          - name: BYPASS_HEADER_AUTHENTICATION
            value: "True"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:83bfb277ec67d5880b8531a9fed087f3a7a384576696ff0f672a8a6ee893c20f
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-bypass-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    labels:
      template: tfrs-app-environment
    name: api
  spec:
    host: dev-lowcarbonfuels.pathfinder.bcgov
    path: /api
    port:
      targetPort: web
    tls:
      certificate: |-
        -----BEGIN CERTIFICATE-----
        MIIEnzCCAysCCQC70lrFEhRTmzANBgkqhkiG9w0BAQUFADCBtDELMAkGA1UEBhMC
        Q0ExGTAXBgNVBAgMEEJyaXRpc2ggQ29sdW1iaWExETAPBgNVBAcMCFZpY3Rvcmlh
        MTcwNQYDVQQKDC5Hb3Zlcm5tZW50IG9mIHRoZSBQcm92aW5jZSBvZiBCcml0aXNo
        IENvbHVtYmlhMRAwDgYDVQQLDAdGTE5ST1JEMSwwKgYDVQQDDCNkZXYtbG93Y2Fy
        Ym9uZnVlbHMucGF0aGZpbmRlci5iY2dvdjAgFw0xODAzMjcxOTU1MDVaGA8yMTE4
        MDMwMzE5NTUwNVowgbQxCzAJBgNVBAYTAkNBMRkwFwYDVQQIDBBCcml0aXNoIENv
        bHVtYmlhMREwDwYDVQQHDAhWaWN0b3JpYTE3MDUGA1UECgwuR292ZXJubWVudCBv
        ZiB0aGUgUHJvdmluY2Ugb2YgQnJpdGlzaCBDb2x1bWJpYTEQMA4GA1UECwwHRkxO
        Uk9SRDEsMCoGA1UEAwwjZGV2LWxvd2NhcmJvbmZ1ZWxzLnBhdGhmaW5kZXIuYmNn
        b3YwggF9MA0GCSqGSIb3DQEBAQUAA4IBagAwggFlAoIBXAG9/eTOOvWECOKFcCiZ
        JbdNEviEXFTwxkaeL8c8QAO6hO1gPJ4IesJZIduB+fURxMuqG0alSAhMqxHpbNPh
        ylPbI2mq1OfCztfvZfyxN5eH8Jnp0B2vJ3qBRTbtWIYgXdFtGAKUd4ZFA37p87zu
        Un5GdIpnSJITwnmhlVLMMIMo2Xz1frlOqsTTlGR2hLGsam/dggH3zRrKW8GDWWGJ
        MTOSCGJj+m0wwFQDk6Ln8qVmzlUEIbDzbQo4YWVBZB8/SP6noH+4TnCcGUGMh5vE
        wQYLlUf4e1ZqQ6oTSMDn96IFoQQD2ggZv9zmclue25oh0+PVUEO1mxTrR22M7CVX
        WDvWjzoCs1SL2/QXF1trT2KVtr7Dng4mMxnn4Z8Fu54hQ4dMw7bxYGc+LhVF1ozZ
        Ev0xp7Fh0vpRsPWg0XyvTU9S371OC7jLEQvtIyiWyjObeeJZieVKt3EGAzfB/QID
        AQABMA0GCSqGSIb3DQEBBQUAA4IBXQAABX/H8Wqh6hN+0ik8od69SGULG/dMpuvD
        1Q70m4lv3T6g3mkO1x9MrRyOJSQf7QqDRDd8aIphDTE+fEd1LkTtFOQ/K1RK+ZEK
        QB8KbV8XsygQ6s7lmx3xCSEuwoCc0gMLuxqw841RW8lTxqWDlEnvcYQxQWcw+NQ+
        Ky0pEr3leuIO5LZ2fi7Fi/8Ezf8Ef6rUX3JZ0M26wQExFNAUbHN7x5cPOtgXwQxy
        zEi6O5+yaxnf+PXfM8kcQAChQN3z6pc3Nlv9Xcp2Spu16hRsWxFcDminsM6/9PuJ
        6Li1JSPsXFfuqgkQFRrDZSWvRbS85h+F6/RC9x14fDBw33kQAJyr/yK+0YAZbBfR
        fdnQzLTpYFIBs5tvZv+zGjzVSa+rYhbrhFPrkXxjPzEKiecBQ0aiuRLXfbxtBpT6
        rNuhviM2pnmk9lxV3DNPIUH85n3FVM7arGJ5i9lUtf+UI9A=
        -----END CERTIFICATE-----
      key: |-
        -----BEGIN RSA PRIVATE KEY-----
        MIIGPAIBAAKCAVwBvf3kzjr1hAjihXAomSW3TRL4hFxU8MZGni/HPEADuoTtYDye
        CHrCWSHbgfn1EcTLqhtGpUgITKsR6WzT4cpT2yNpqtTnws7X72X8sTeXh/CZ6dAd
        ryd6gUU27ViGIF3RbRgClHeGRQN+6fO87lJ+RnSKZ0iSE8J5oZVSzDCDKNl89X65
        TqrE05RkdoSxrGpv3YIB980aylvBg1lhiTEzkghiY/ptMMBUA5Oi5/KlZs5VBCGw
        820KOGFlQWQfP0j+p6B/uE5wnBlBjIebxMEGC5VH+HtWakOqE0jA5/eiBaEEA9oI
        Gb/c5nJbntuaIdPj1VBDtZsU60dtjOwlV1g71o86ArNUi9v0Fxdba09ilba+w54O
        JjMZ5+GfBbueIUOHTMO28WBnPi4VRdaM2RL9MaexYdL6UbD1oNF8r01PUt+9Tgu4
        yxEL7SMolsozm3niWYnlSrdxBgM3wf0CAwEAAQKCAVthGLGDpJpnEHggjPaJwQhT
        I1ovltp3QPOG5Of/WgB1zxLO7OOK/Q7q0NA1T/Hm2G1ur1mGClSkPGo944+NjLsM
        7nzG0GtUoiuo1w9Ylb3LvroDiWetBm9JTYRTz/4DdeluUtfc8tislcI/tOzhBdyw
        AhdPvSDwZFqOry/DfJxRfGgUGm7FjbAkUB4/H0x/OPz5wKAlDuZSP/+1VPRDJg8Q
        L/sbwR2ci4K+9Jl23fdK5lOOikVmFfZXDD4WbgEVOhIHkoorILpwXg0AkbGz/97/
        vTrs/kYBFQgW1AHjgvhCf22Vu3ddRHnovXmAIC4kki3uDtd+vAGYQMWnVb2hahaj
        qRtAP+N+wk3iieiSPzGLj472kuTkTE71uSOhiljqB4nKVjjvOsGC5BmRnzs3mdW1
        lXSpr7WLUwqLrFXoUM2a292c0oCOxaD5nu4O2XnV9DELebvW1Eb3ZFOygQKBrhwO
        l0XwUM1Cdh9EJPYK2UpBUEArA/tp28BTOQfikMKWO0BNnX9vQ76pIA9YSnlxYR2E
        3+C73+8rvcV9w0+MYoIDQKY7CC34VvjNoc562rzWbtoLhkIPd9lLD90SWv9HxyzV
        GlL0lT9NGHnssSUIq7g7bLhKTCHB7oWZwE+5cs6pSKnWgqq/nDywDwXllh0ewOwn
        5g7cxk0L7Bliro1DP8t9QcC49OG5K2Hd7PYM2QKBrg/lWwr4lS3AHobRdBtWw9NI
        jgl0tOMVVvUpyobEwenx/jgBWtk34aGrjc0vwnuTftaCMgdp+gGFFbL7dmGXkwis
        9YTv0P4G+1SFhqeb8nVdiNoL6zQ2NVBcCYM7I/BEaA+qV8PCXqc+/pOZuayuXidq
        iCcuGjlwQf+KWQWt0dJNjjtAiId5cT8MV7GaPP7hT8emiP7iFwiJ/vx1W2vtRzf4
        pc/1yzY6M8BJ1L93xQKBrhaq/zMlXtMHcFIAh3A2AaqJrGG7n0MAGuh/FKO3PEfK
        guKIEsiDx5MCJ4HeToVhwhnMYei7QciFaZRm8GaTwH7US+ZB6XDipLntwV4GSjWp
        dfQ6vWUgBC+OAqoVC2oWvugM4HDHZNG44x6WyeRm5f46HLOka3AWtDRCrWp8JTKs
        +KUnR3jWyE8L24djH241i58A+VFms9xJ1p4H6Yj+HUu1zmr7w/We2lr+p1V/uQKB
        rgbwxtLAfSpPs0R8WazCMpijGllomr54B9Ld327+pAiIv84mUUt8yci0RiLsEoew
        e/YfPMbd7+oP+MyAXUz5SJrGIiFcMK1p0P0zm/q87Z1vLJzADX9rl9WxifnBrcxv
        odwNLWrtCDUQHUnHGjoanEOrkS1CRPMFX9u6xWnkXjPr5wlaAQLd9KNpuTRzuuQy
        7omm3jQj9Zil4C7M8xDptmnq6EMn+AWCXiw8UGcVXQKBrgX6NUA3xvR8OvFvQehs
        OZZGgOMxlKHvvJc0pkgRY8zmOoz5H1xcp7uQecphPPXD9bqOve1NDvLx44iR9W0c
        OHRhFOEf4kSlj7bz4+3frW+DjIJoi7SJAjgn5cUjbZoPHpPwMNc9DzqcSaB2Mryj
        27ek3oPkbeCgMkyipb1UNrxHEug2ba0MTmISrv78AXZZnMdtpXZ3T9EOend+zavq
        QD9lYXa3wU4mqnSvawaJ+g==
        -----END RSA PRIVATE KEY-----
      termination: edge
    to:
      kind: Service
      name: backend
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-04-17T18:50:40Z
        status: "True"
        type: Admitted
      host: dev-lowcarbonfuels.pathfinder.bcgov
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: null
    name: api-bypass
  spec:
    host: api-bypass-mem-tfrs-dev.pathfinder.gov.bc.ca
    path: /api
    port:
      targetPort: web
    to:
      kind: Service
      name: backend-bypass
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-02-16T23:09:46Z
        status: "True"
        type: Admitted
      host: api-bypass-mem-tfrs-dev.pathfinder.gov.bc.ca
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    labels:
      template: tfrs-app-environment
    name: api-spec
  spec:
    host: api-spec-mem-tfrs-dev.pathfinder.gov.bc.ca
    path: /api
    port:
      targetPort: web
    to:
      kind: Service
      name: backend-bypass
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-03-09T18:51:40Z
        status: "True"
        type: Admitted
      host: api-spec-mem-tfrs-dev.pathfinder.gov.bc.ca
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    name: caddy-app
  spec:
    host: tfrs-dev-caddy-proxy.pathfinder.gov.bc.ca
    port:
      targetPort: 2015-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: caddy-app
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2017-11-29T19:47:30Z
        status: "True"
        type: Admitted
      host: tfrs-dev-caddy-proxy.pathfinder.gov.bc.ca
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    labels:
      template: tfrs-app-environment
    name: main
  spec:
    host: dev-lowcarbonfuels.pathfinder.bcgov
    path: /
    port:
      targetPort: web
    tls:
      certificate: |-
        -----BEGIN CERTIFICATE-----
        MIIEnzCCAysCCQC70lrFEhRTmzANBgkqhkiG9w0BAQUFADCBtDELMAkGA1UEBhMC
        Q0ExGTAXBgNVBAgMEEJyaXRpc2ggQ29sdW1iaWExETAPBgNVBAcMCFZpY3Rvcmlh
        MTcwNQYDVQQKDC5Hb3Zlcm5tZW50IG9mIHRoZSBQcm92aW5jZSBvZiBCcml0aXNo
        IENvbHVtYmlhMRAwDgYDVQQLDAdGTE5ST1JEMSwwKgYDVQQDDCNkZXYtbG93Y2Fy
        Ym9uZnVlbHMucGF0aGZpbmRlci5iY2dvdjAgFw0xODAzMjcxOTU1MDVaGA8yMTE4
        MDMwMzE5NTUwNVowgbQxCzAJBgNVBAYTAkNBMRkwFwYDVQQIDBBCcml0aXNoIENv
        bHVtYmlhMREwDwYDVQQHDAhWaWN0b3JpYTE3MDUGA1UECgwuR292ZXJubWVudCBv
        ZiB0aGUgUHJvdmluY2Ugb2YgQnJpdGlzaCBDb2x1bWJpYTEQMA4GA1UECwwHRkxO
        Uk9SRDEsMCoGA1UEAwwjZGV2LWxvd2NhcmJvbmZ1ZWxzLnBhdGhmaW5kZXIuYmNn
        b3YwggF9MA0GCSqGSIb3DQEBAQUAA4IBagAwggFlAoIBXAG9/eTOOvWECOKFcCiZ
        JbdNEviEXFTwxkaeL8c8QAO6hO1gPJ4IesJZIduB+fURxMuqG0alSAhMqxHpbNPh
        ylPbI2mq1OfCztfvZfyxN5eH8Jnp0B2vJ3qBRTbtWIYgXdFtGAKUd4ZFA37p87zu
        Un5GdIpnSJITwnmhlVLMMIMo2Xz1frlOqsTTlGR2hLGsam/dggH3zRrKW8GDWWGJ
        MTOSCGJj+m0wwFQDk6Ln8qVmzlUEIbDzbQo4YWVBZB8/SP6noH+4TnCcGUGMh5vE
        wQYLlUf4e1ZqQ6oTSMDn96IFoQQD2ggZv9zmclue25oh0+PVUEO1mxTrR22M7CVX
        WDvWjzoCs1SL2/QXF1trT2KVtr7Dng4mMxnn4Z8Fu54hQ4dMw7bxYGc+LhVF1ozZ
        Ev0xp7Fh0vpRsPWg0XyvTU9S371OC7jLEQvtIyiWyjObeeJZieVKt3EGAzfB/QID
        AQABMA0GCSqGSIb3DQEBBQUAA4IBXQAABX/H8Wqh6hN+0ik8od69SGULG/dMpuvD
        1Q70m4lv3T6g3mkO1x9MrRyOJSQf7QqDRDd8aIphDTE+fEd1LkTtFOQ/K1RK+ZEK
        QB8KbV8XsygQ6s7lmx3xCSEuwoCc0gMLuxqw841RW8lTxqWDlEnvcYQxQWcw+NQ+
        Ky0pEr3leuIO5LZ2fi7Fi/8Ezf8Ef6rUX3JZ0M26wQExFNAUbHN7x5cPOtgXwQxy
        zEi6O5+yaxnf+PXfM8kcQAChQN3z6pc3Nlv9Xcp2Spu16hRsWxFcDminsM6/9PuJ
        6Li1JSPsXFfuqgkQFRrDZSWvRbS85h+F6/RC9x14fDBw33kQAJyr/yK+0YAZbBfR
        fdnQzLTpYFIBs5tvZv+zGjzVSa+rYhbrhFPrkXxjPzEKiecBQ0aiuRLXfbxtBpT6
        rNuhviM2pnmk9lxV3DNPIUH85n3FVM7arGJ5i9lUtf+UI9A=
        -----END CERTIFICATE-----
      key: |-
        -----BEGIN RSA PRIVATE KEY-----
        MIIGPAIBAAKCAVwBvf3kzjr1hAjihXAomSW3TRL4hFxU8MZGni/HPEADuoTtYDye
        CHrCWSHbgfn1EcTLqhtGpUgITKsR6WzT4cpT2yNpqtTnws7X72X8sTeXh/CZ6dAd
        ryd6gUU27ViGIF3RbRgClHeGRQN+6fO87lJ+RnSKZ0iSE8J5oZVSzDCDKNl89X65
        TqrE05RkdoSxrGpv3YIB980aylvBg1lhiTEzkghiY/ptMMBUA5Oi5/KlZs5VBCGw
        820KOGFlQWQfP0j+p6B/uE5wnBlBjIebxMEGC5VH+HtWakOqE0jA5/eiBaEEA9oI
        Gb/c5nJbntuaIdPj1VBDtZsU60dtjOwlV1g71o86ArNUi9v0Fxdba09ilba+w54O
        JjMZ5+GfBbueIUOHTMO28WBnPi4VRdaM2RL9MaexYdL6UbD1oNF8r01PUt+9Tgu4
        yxEL7SMolsozm3niWYnlSrdxBgM3wf0CAwEAAQKCAVthGLGDpJpnEHggjPaJwQhT
        I1ovltp3QPOG5Of/WgB1zxLO7OOK/Q7q0NA1T/Hm2G1ur1mGClSkPGo944+NjLsM
        7nzG0GtUoiuo1w9Ylb3LvroDiWetBm9JTYRTz/4DdeluUtfc8tislcI/tOzhBdyw
        AhdPvSDwZFqOry/DfJxRfGgUGm7FjbAkUB4/H0x/OPz5wKAlDuZSP/+1VPRDJg8Q
        L/sbwR2ci4K+9Jl23fdK5lOOikVmFfZXDD4WbgEVOhIHkoorILpwXg0AkbGz/97/
        vTrs/kYBFQgW1AHjgvhCf22Vu3ddRHnovXmAIC4kki3uDtd+vAGYQMWnVb2hahaj
        qRtAP+N+wk3iieiSPzGLj472kuTkTE71uSOhiljqB4nKVjjvOsGC5BmRnzs3mdW1
        lXSpr7WLUwqLrFXoUM2a292c0oCOxaD5nu4O2XnV9DELebvW1Eb3ZFOygQKBrhwO
        l0XwUM1Cdh9EJPYK2UpBUEArA/tp28BTOQfikMKWO0BNnX9vQ76pIA9YSnlxYR2E
        3+C73+8rvcV9w0+MYoIDQKY7CC34VvjNoc562rzWbtoLhkIPd9lLD90SWv9HxyzV
        GlL0lT9NGHnssSUIq7g7bLhKTCHB7oWZwE+5cs6pSKnWgqq/nDywDwXllh0ewOwn
        5g7cxk0L7Bliro1DP8t9QcC49OG5K2Hd7PYM2QKBrg/lWwr4lS3AHobRdBtWw9NI
        jgl0tOMVVvUpyobEwenx/jgBWtk34aGrjc0vwnuTftaCMgdp+gGFFbL7dmGXkwis
        9YTv0P4G+1SFhqeb8nVdiNoL6zQ2NVBcCYM7I/BEaA+qV8PCXqc+/pOZuayuXidq
        iCcuGjlwQf+KWQWt0dJNjjtAiId5cT8MV7GaPP7hT8emiP7iFwiJ/vx1W2vtRzf4
        pc/1yzY6M8BJ1L93xQKBrhaq/zMlXtMHcFIAh3A2AaqJrGG7n0MAGuh/FKO3PEfK
        guKIEsiDx5MCJ4HeToVhwhnMYei7QciFaZRm8GaTwH7US+ZB6XDipLntwV4GSjWp
        dfQ6vWUgBC+OAqoVC2oWvugM4HDHZNG44x6WyeRm5f46HLOka3AWtDRCrWp8JTKs
        +KUnR3jWyE8L24djH241i58A+VFms9xJ1p4H6Yj+HUu1zmr7w/We2lr+p1V/uQKB
        rgbwxtLAfSpPs0R8WazCMpijGllomr54B9Ld327+pAiIv84mUUt8yci0RiLsEoew
        e/YfPMbd7+oP+MyAXUz5SJrGIiFcMK1p0P0zm/q87Z1vLJzADX9rl9WxifnBrcxv
        odwNLWrtCDUQHUnHGjoanEOrkS1CRPMFX9u6xWnkXjPr5wlaAQLd9KNpuTRzuuQy
        7omm3jQj9Zil4C7M8xDptmnq6EMn+AWCXiw8UGcVXQKBrgX6NUA3xvR8OvFvQehs
        OZZGgOMxlKHvvJc0pkgRY8zmOoz5H1xcp7uQecphPPXD9bqOve1NDvLx44iR9W0c
        OHRhFOEf4kSlj7bz4+3frW+DjIJoi7SJAjgn5cUjbZoPHpPwMNc9DzqcSaB2Mryj
        27ek3oPkbeCgMkyipb1UNrxHEug2ba0MTmISrv78AXZZnMdtpXZ3T9EOend+zavq
        QD9lYXa3wU4mqnSvawaJ+g==
        -----END RSA PRIVATE KEY-----
      termination: edge
    to:
      kind: Service
      name: client
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-04-17T18:49:22Z
        status: "True"
        type: Admitted
      host: dev-lowcarbonfuels.pathfinder.bcgov
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    name: schema-spy
  spec:
    host: schema-spy-mem-tfrs-dev.pathfinder.gov.bc.ca
    port:
      targetPort: 8080-tcp
    tls:
      insecureEdgeTerminationPolicy: Allow
      termination: edge
    to:
      kind: Service
      name: schema-spy
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2017-11-30T22:19:02Z
        status: "True"
        type: Admitted
      host: schema-spy-mem-tfrs-dev.pathfinder.gov.bc.ca
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    labels:
      app: request-logger
    name: sminfo
  spec:
    host: dev-lowcarbonfuels.pathfinder.bcgov
    path: /sminfo
    port:
      targetPort: 8080-tcp
    tls:
      certificate: |
        -----BEGIN CERTIFICATE-----
        MIIEnzCCAysCCQCH7hs4MMPNUjANBgkqhkiG9w0BAQUFADCBtDELMAkGA1UEBhMC
        Q0ExGTAXBgNVBAgMEEJyaXRpc2ggQ29sdW1iaWExETAPBgNVBAcMCFZpY3Rvcmlh
        MTcwNQYDVQQKDC5Hb3Zlcm5tZW50IG9mIHRoZSBQcm92aW5jZSBvZiBCcml0aXNo
        IENvbHVtYmlhMRAwDgYDVQQLDAdGTE5ST1JEMSwwKgYDVQQDDCNkZXYtbG93Y2Fy
        Ym9uZnVlbHMucGF0aGZpbmRlci5iY2dvdjAgFw0xODAzMTUyMTM2NDRaGA8yMTE4
        MDIxOTIxMzY0NFowgbQxCzAJBgNVBAYTAkNBMRkwFwYDVQQIDBBCcml0aXNoIENv
        bHVtYmlhMREwDwYDVQQHDAhWaWN0b3JpYTE3MDUGA1UECgwuR292ZXJubWVudCBv
        ZiB0aGUgUHJvdmluY2Ugb2YgQnJpdGlzaCBDb2x1bWJpYTEQMA4GA1UECwwHRkxO
        Uk9SRDEsMCoGA1UEAwwjZGV2LWxvd2NhcmJvbmZ1ZWxzLnBhdGhmaW5kZXIuYmNn
        b3YwggF9MA0GCSqGSIb3DQEBAQUAA4IBagAwggFlAoIBXAGIB7NA3Gx1Bc8CPa6p
        u3dSxxrvGQCYXi1jVE0CcToXtQcNcSAYZVp3fle/ovrOqlFrChp6ZCNPiX2GG48o
        5BGyVuc2sIWZf513OqHmvUJYDGVLMIHNVAdbvmMRbTKBiYQ0ovm6CwJSqKAQbRvA
        +rDPt0MFGOHld8LKTQCIpRFXJZCoOVP8rBvBUmLSqcoMHBoZPvW+2olVC4bZow8Z
        j3fohI6ndA67ZT0L/0FVzem+FUqsVEuImTFNdD3oMZtp77+0WNsccBYAMmO0w0nQ
        v0G1Sg4K3K2UAq+32X2ciTCSZ6yrcH9kOMvsanVt/b/6YIhYLxY+dQfIwCgkYI2C
        TrZ0OYz+kh4Cps416XefUxok/DSu2H2eT1GVpmSGsKig4CchG5LZguDJHwNskDqZ
        lSiajHJF2qqTcdlGoFeRnAlkVgeNp7EH8o51NABP/QaIoq8y6gW0C70lMUq+hQID
        AQABMA0GCSqGSIb3DQEBBQUAA4IBXQAAOrkx/Y2tSfNgBsdWov0QCz9rbDI8gZqZ
        coDjtSsUr6TZf/tfyeUeiLne5fbuBvXq1oW0ANeqwv+YA6bcWiu3yp+JnuE5vfPR
        lxmLx5xwbbORC6t+9tW84mJEtql2G+dUkgLgQea46d/TocBOe716Q7UTvkTgQkTf
        gFaGpbf5fOQdds2Q4ZBN/jAaanvAY6E4g+Fw7fSExcwsdaANR4wMXTZfMZsC29E7
        JKzsbaIA8syTV8jbNRHI6UL7rllV9PVpe8sG0KBwBWfdsetC6XmoySyb7SXHVAIu
        hbK79RQ+EQtJItdTbrA7phwG+BImm1oQumy2qWb3YOK7kngOdCebFbZYjKv/We6x
        hXV0JrhxmbR/BvmPmA5wNcyqPghf5ZJ+NPcbAiaavNSHE6IMcGyku5e8GwCWBxml
        YNjNjkgSf+g+SQC9scqqK4F/qIEq/ygL8slXuJKzq7Z33T0=
        -----END CERTIFICATE-----
      key: |
        -----BEGIN RSA PRIVATE KEY-----
        MIIGPQIBAAKCAVwBiAezQNxsdQXPAj2uqbt3Usca7xkAmF4tY1RNAnE6F7UHDXEg
        GGVad35Xv6L6zqpRawoaemQjT4l9hhuPKOQRslbnNrCFmX+ddzqh5r1CWAxlSzCB
        zVQHW75jEW0ygYmENKL5ugsCUqigEG0bwPqwz7dDBRjh5XfCyk0AiKURVyWQqDlT
        /KwbwVJi0qnKDBwaGT71vtqJVQuG2aMPGY936ISOp3QOu2U9C/9BVc3pvhVKrFRL
        iJkxTXQ96DGbae+/tFjbHHAWADJjtMNJ0L9BtUoOCtytlAKvt9l9nIkwkmesq3B/
        ZDjL7Gp1bf2/+mCIWC8WPnUHyMAoJGCNgk62dDmM/pIeAqbONel3n1MaJPw0rth9
        nk9RlaZkhrCooOAnIRuS2YLgyR8DbJA6mZUomoxyRdqqk3HZRqBXkZwJZFYHjaex
        B/KOdTQAT/0GiKKvMuoFtAu9JTFKvoUCAwEAAQKCAVwBLrQjaTXKWSG/Eg/myhCC
        tlwfI/e+SeiOS2BQhk4/eQbDB1IOYkgAbrwTrVl/KAzDCU+n2lFwIn4bem3VQNG6
        CGap6cSrpDaxs9qGINCKZcpMfJ5b29vCQsjjXhVfJj604p/lDA5sIL8ruQNGpt/r
        nrf2+/yWkMTEl8iVXO14Uj4jUIHTpAqQ89lVjSylYmxgipXe0xuTZyObYHlTs3zg
        LZ4NOKeYqIInfRf/ru1KnS1tEXgXlUYgC5K+0fh6sKbMsLAHknSvjGEujSisFpyn
        Dtrl8Z43q7wiNmUgpxJvbukjtoYg/ODHY8Q6GclISST/cNKom0HUimu2Av7Kgbs+
        Gc36kACKzpejM9bz21D+z2xzGZU5r4t3PPPg+XSr8sLg22VbBiFmDOP1gltLMQjg
        np2bUapyes/6vU+JLyWZ63Qk50z8P79j9Q7XAzlfAzWrWit7UxS0FQmPmxECga4e
        82KA/xFPspBANwk5sMHmxVnLtpnf8h+WIJ1KRIq45IGGupMravCtwgnGcqdDem8P
        5iMAne2iNYaQKeUEAZq+R4wpWD1+GAdyEucDWDxz+vTAgiuLjz6Ya/tNF17uYsN6
        us44Wsm2CP+nijTFpt4wq0bsdhFktlaQxXYzcCY86YLFVjLlvpGc1cCJADGxoF+N
        W3Ej0oeCO3/lgafabkWRSN/U0/hVTVJNYNcW688Cga4MqpBqnaJJshFVNFo/0625
        aawqOZ6P/DdwEGMKwXh74ad5ExvLwYMXdzeCmj/kEgT4A0xotebzlpOdncFUsu5W
        kw2ifxK2dAoRP0Q/k1siATinYsQvN8jAnrtHbi1p4VW30RTHlY7+7HCNnJPjz2Hu
        e1yLb9wcouCmoZFJXgvodYKBLX4a1Bxfch7hmbCk2zS1at09HT0FT+EwJJBlp1r4
        X12aAJyhqCVRCmZHoWsCga4bJv2lmR8AwfAWxbGMMOsKntuWAY2gj3Lya45Rlyvz
        5FNVdNyjXF/kr7OPqwneAszoL8dJRUMx6K8yTe6hwx6UC4SEyOq5ci8l/js4DfKK
        9QA+2nOFLZeGdES0bupTS8WeJ7++ZLdMwTw3KOH++9M08y13SGUd63Cp9PErUxnY
        miqlIGfqcXKhGkycY9U0tTLeefgZqxpCQByFpWcyE0dom3vx5DuZ6gln5KsNarUC
        ga4DShiPV7jZ4sDVm+8EPHkVefgYTzZ6tkm/dMID/RLJOWVA8FF7rRnacj+cT2rg
        VD2uG00wtGzyPdzARkP7NyzmlvInjVDSyXgD2qZizGYSgrav4dqJWLduLsr8VgS9
        RqP4RPhcjN7CHa1tWYie1TDdunPiUn6bgUFOhQ8yOpZlHH90BNiHJybnMsAKXtud
        NMCPjN1ADePXCVO2KQjHHZtmfX3VjOsgoIZwcX72g1kCga4cUMLsFcxf20gnkH19
        PxkBxLhFiSqElB8900ufK4FLDT+1NkaRxATFeK6GBP8eCLeeXXsntdKGXQFNW9Px
        KbPxGud4JQND+y8KuypZS3N6tU7NbtRuhXNAIaVoR8XRwQ9MJuB1/LXno7GdeF14
        Nn0gx3fECdx5m5JvjgCRGvjd3cF/WfpG5Uve4XJJ5K1nsCaE2zVy6h0G2laRiolc
        ZI6RXl7hgbF6zdhjmTMaiI8=
        -----END RSA PRIVATE KEY-----
      termination: edge
    to:
      kind: Service
      name: request-logger
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-04-13T18:53:04Z
        status: "True"
        type: Admitted
      host: dev-lowcarbonfuels.pathfinder.bcgov
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes and load balances the application pods
      service.alpha.openshift.io/dependencies: '[{"name": "postgresql", "kind": "Service"}]'
    creationTimestamp: null
    labels:
      template: tfrs-app-environment
    name: backend
  spec:
    ports:
    - name: web
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: tfrs
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes and load balances the application pods
      service.alpha.openshift.io/dependencies: '[{"name": "postgresql", "kind": "Service"}]'
    creationTimestamp: null
    labels:
      template: tfrs-app-environment
    name: backend-bypass
  spec:
    ports:
    - name: web
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: tfrs-bypass
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: caddy-app
      template: caddy-template
    name: caddy-app
  spec:
    ports:
    - name: 2015-tcp
      port: 2015
      protocol: TCP
      targetPort: 2015
    selector:
      app: caddy-app
      deploymentconfig: caddy-app
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes and load balances the front end pods
    creationTimestamp: null
    labels:
      template: tfrs-app-environment
    name: client
  spec:
    ports:
    - name: web
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: client
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: glusterfs-cluster-app
  spec:
    ports:
    - port: 1
      protocol: TCP
      targetPort: 1
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      gluster.kubernetes.io/provisioned-for-pvc: backup-cns
    name: glusterfs-dynamic-backup-cns
  spec:
    ports:
    - port: 1
      protocol: TCP
      targetPort: 1
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      gluster.kubernetes.io/provisioned-for-pvc: postgresql-backup-cns
    name: glusterfs-dynamic-postgresql-backup-cns
  spec:
    ports:
    - port: 1
      protocol: TCP
      targetPort: 1
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      gluster.kubernetes.io/provisioned-for-pvc: postgresql-bypass-cns
    name: glusterfs-dynamic-postgresql-bypass-cns
  spec:
    ports:
    - port: 1
      protocol: TCP
      targetPort: 1
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      gluster.kubernetes.io/provisioned-for-pvc: postgresql-cns
    name: glusterfs-dynamic-postgresql-cns
  spec:
    ports:
    - port: 1
      protocol: TCP
      targetPort: 1
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      gluster.kubernetes.io/provisioned-for-pvc: postgresql-standby-cns
    name: glusterfs-dynamic-postgresql-standby-cns
  spec:
    ports:
    - port: 1
      protocol: TCP
      targetPort: 1
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: postgresql-persistent
      template: postgresql-persistent-template
    name: postgresql
  spec:
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      name: postgresql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: postgresql-persistent
      template: postgresql-persistent-template
    name: postgresql-bypass
  spec:
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      name: postgresql-bypass
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: request-logger
    name: request-logger
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: request-logger
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes and load balances the application pods
    creationTimestamp: null
    name: schema-spy
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: schema-spy
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu, memory request for
        container sti-build; cpu, memory limit for container sti-build; cpu, memory
        request for init container git-clone; cpu, memory limit for init container
        git-clone; cpu, memory request for init container manage-dockerfile; cpu,
        memory limit for init container manage-dockerfile'
      openshift.io/build.name: caddy-app-6
      openshift.io/scc: privileged
      pod.alpha.kubernetes.io/init-containers: '[{"name":"git-clone","image":"openshift3/ose-sti-builder:v3.7.14","command":["openshift-git-clone"],"args":["--loglevel=0"],"env":[{"name":"BUILD","value":"{\"kind\":\"Build\",\"apiVersion\":\"v1\",\"metadata\":{\"name\":\"caddy-app-6\",\"namespace\":\"mem-tfrs-dev\",\"selfLink\":\"/apis/build.openshift.io/v1/namespaces/mem-tfrs-dev/builds/caddy-app-6\",\"uid\":\"fc2e0bcf-2d8a-11e8-9413-0050568379a2\",\"resourceVersion\":\"382232128\",\"creationTimestamp\":\"2018-03-22T04:39:19Z\",\"labels\":{\"build\":\"caddy-app\",\"buildconfig\":\"caddy-app\",\"openshift.io/build-config.name\":\"caddy-app\",\"openshift.io/build.start-policy\":\"Serial\",\"template\":\"caddy-template\"},\"annotations\":{\"openshift.io/build-config.name\":\"caddy-app\",\"openshift.io/build.number\":\"6\"},\"ownerReferences\":[{\"apiVersion\":\"build.openshift.io/v1\",\"kind\":\"BuildConfig\",\"name\":\"caddy-app\",\"uid\":\"4d94fedd-d53b-11e7-9f70-005056832285\",\"controller\":true}]},\"spec\":{\"serviceAccount\":\"builder\",\"source\":{\"type\":\"Git\",\"git\":{\"uri\":\"https://github.com/BCDevOps/openshift-tools.git\"},\"contextDir\":\"/utils/caddy-proxy\"},\"strategy\":{\"type\":\"Source\",\"sourceStrategy\":{\"from\":{\"kind\":\"DockerImage\",\"name\":\"172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:aa24e7c04a552b6c41ef41e1b0717dc6895cf41e2d625977a5d569a402b4b0f8\"},\"pullSecret\":{\"name\":\"builder-dockercfg-hy7p9\"}}},\"output\":{\"to\":{\"kind\":\"DockerImage\",\"name\":\"172.50.0.2:5000/mem-tfrs-dev/caddy-app:latest\"},\"pushSecret\":{\"name\":\"builder-dockercfg-hy7p9\"}},\"resources\":{},\"postCommit\":{},\"nodeSelector\":null,\"triggeredBy\":[{\"message\":\"Image
        change\",\"imageChangeBuild\":{\"imageID\":\"172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:aa24e7c04a552b6c41ef41e1b0717dc6895cf41e2d625977a5d569a402b4b0f8\",\"fromRef\":{\"kind\":\"ImageStreamTag\",\"namespace\":\"openshift\",\"name\":\"bcgov-s2i-caddy:latest\"}}}]},\"status\":{\"phase\":\"New\",\"outputDockerImageReference\":\"172.50.0.2:5000/mem-tfrs-dev/caddy-app:latest\",\"config\":{\"kind\":\"BuildConfig\",\"namespace\":\"mem-tfrs-dev\",\"name\":\"caddy-app\"},\"output\":{}}}\n"},{"name":"SOURCE_REPOSITORY","value":"https://github.com/BCDevOps/openshift-tools.git"},{"name":"SOURCE_URI","value":"https://github.com/BCDevOps/openshift-tools.git"},{"name":"SOURCE_CONTEXT_DIR","value":"/utils/caddy-proxy"},{"name":"ORIGIN_VERSION","value":"v3.7.14"},{"name":"ALLOWED_UIDS","value":"1-"},{"name":"DROP_CAPS","value":"KILL,MKNOD,SETGID,SETUID"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"100m","memory":"256Mi"}},"volumeMounts":[{"name":"buildworkdir","mountPath":"/tmp/build"},{"name":"builder-token-vnrju","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"FallbackToLogsOnError","imagePullPolicy":"IfNotPresent","securityContext":{"privileged":false}},{"name":"manage-dockerfile","image":"openshift3/ose-sti-builder:v3.7.14","command":["openshift-manage-dockerfile"],"args":["--loglevel=0"],"env":[{"name":"BUILD","value":"{\"kind\":\"Build\",\"apiVersion\":\"v1\",\"metadata\":{\"name\":\"caddy-app-6\",\"namespace\":\"mem-tfrs-dev\",\"selfLink\":\"/apis/build.openshift.io/v1/namespaces/mem-tfrs-dev/builds/caddy-app-6\",\"uid\":\"fc2e0bcf-2d8a-11e8-9413-0050568379a2\",\"resourceVersion\":\"382232128\",\"creationTimestamp\":\"2018-03-22T04:39:19Z\",\"labels\":{\"build\":\"caddy-app\",\"buildconfig\":\"caddy-app\",\"openshift.io/build-config.name\":\"caddy-app\",\"openshift.io/build.start-policy\":\"Serial\",\"template\":\"caddy-template\"},\"annotations\":{\"openshift.io/build-config.name\":\"caddy-app\",\"openshift.io/build.number\":\"6\"},\"ownerReferences\":[{\"apiVersion\":\"build.openshift.io/v1\",\"kind\":\"BuildConfig\",\"name\":\"caddy-app\",\"uid\":\"4d94fedd-d53b-11e7-9f70-005056832285\",\"controller\":true}]},\"spec\":{\"serviceAccount\":\"builder\",\"source\":{\"type\":\"Git\",\"git\":{\"uri\":\"https://github.com/BCDevOps/openshift-tools.git\"},\"contextDir\":\"/utils/caddy-proxy\"},\"strategy\":{\"type\":\"Source\",\"sourceStrategy\":{\"from\":{\"kind\":\"DockerImage\",\"name\":\"172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:aa24e7c04a552b6c41ef41e1b0717dc6895cf41e2d625977a5d569a402b4b0f8\"},\"pullSecret\":{\"name\":\"builder-dockercfg-hy7p9\"}}},\"output\":{\"to\":{\"kind\":\"DockerImage\",\"name\":\"172.50.0.2:5000/mem-tfrs-dev/caddy-app:latest\"},\"pushSecret\":{\"name\":\"builder-dockercfg-hy7p9\"}},\"resources\":{},\"postCommit\":{},\"nodeSelector\":null,\"triggeredBy\":[{\"message\":\"Image
        change\",\"imageChangeBuild\":{\"imageID\":\"172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:aa24e7c04a552b6c41ef41e1b0717dc6895cf41e2d625977a5d569a402b4b0f8\",\"fromRef\":{\"kind\":\"ImageStreamTag\",\"namespace\":\"openshift\",\"name\":\"bcgov-s2i-caddy:latest\"}}}]},\"status\":{\"phase\":\"New\",\"outputDockerImageReference\":\"172.50.0.2:5000/mem-tfrs-dev/caddy-app:latest\",\"config\":{\"kind\":\"BuildConfig\",\"namespace\":\"mem-tfrs-dev\",\"name\":\"caddy-app\"},\"output\":{}}}\n"},{"name":"SOURCE_REPOSITORY","value":"https://github.com/BCDevOps/openshift-tools.git"},{"name":"SOURCE_URI","value":"https://github.com/BCDevOps/openshift-tools.git"},{"name":"SOURCE_CONTEXT_DIR","value":"/utils/caddy-proxy"},{"name":"ORIGIN_VERSION","value":"v3.7.14"},{"name":"ALLOWED_UIDS","value":"1-"},{"name":"DROP_CAPS","value":"KILL,MKNOD,SETGID,SETUID"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"100m","memory":"256Mi"}},"volumeMounts":[{"name":"buildworkdir","mountPath":"/tmp/build"},{"name":"builder-token-vnrju","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"FallbackToLogsOnError","imagePullPolicy":"IfNotPresent","securityContext":{"privileged":false}}]'
      pod.beta.kubernetes.io/init-containers: '[{"name":"git-clone","image":"openshift3/ose-sti-builder:v3.7.14","command":["openshift-git-clone"],"args":["--loglevel=0"],"env":[{"name":"BUILD","value":"{\"kind\":\"Build\",\"apiVersion\":\"v1\",\"metadata\":{\"name\":\"caddy-app-6\",\"namespace\":\"mem-tfrs-dev\",\"selfLink\":\"/apis/build.openshift.io/v1/namespaces/mem-tfrs-dev/builds/caddy-app-6\",\"uid\":\"fc2e0bcf-2d8a-11e8-9413-0050568379a2\",\"resourceVersion\":\"382232128\",\"creationTimestamp\":\"2018-03-22T04:39:19Z\",\"labels\":{\"build\":\"caddy-app\",\"buildconfig\":\"caddy-app\",\"openshift.io/build-config.name\":\"caddy-app\",\"openshift.io/build.start-policy\":\"Serial\",\"template\":\"caddy-template\"},\"annotations\":{\"openshift.io/build-config.name\":\"caddy-app\",\"openshift.io/build.number\":\"6\"},\"ownerReferences\":[{\"apiVersion\":\"build.openshift.io/v1\",\"kind\":\"BuildConfig\",\"name\":\"caddy-app\",\"uid\":\"4d94fedd-d53b-11e7-9f70-005056832285\",\"controller\":true}]},\"spec\":{\"serviceAccount\":\"builder\",\"source\":{\"type\":\"Git\",\"git\":{\"uri\":\"https://github.com/BCDevOps/openshift-tools.git\"},\"contextDir\":\"/utils/caddy-proxy\"},\"strategy\":{\"type\":\"Source\",\"sourceStrategy\":{\"from\":{\"kind\":\"DockerImage\",\"name\":\"172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:aa24e7c04a552b6c41ef41e1b0717dc6895cf41e2d625977a5d569a402b4b0f8\"},\"pullSecret\":{\"name\":\"builder-dockercfg-hy7p9\"}}},\"output\":{\"to\":{\"kind\":\"DockerImage\",\"name\":\"172.50.0.2:5000/mem-tfrs-dev/caddy-app:latest\"},\"pushSecret\":{\"name\":\"builder-dockercfg-hy7p9\"}},\"resources\":{},\"postCommit\":{},\"nodeSelector\":null,\"triggeredBy\":[{\"message\":\"Image
        change\",\"imageChangeBuild\":{\"imageID\":\"172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:aa24e7c04a552b6c41ef41e1b0717dc6895cf41e2d625977a5d569a402b4b0f8\",\"fromRef\":{\"kind\":\"ImageStreamTag\",\"namespace\":\"openshift\",\"name\":\"bcgov-s2i-caddy:latest\"}}}]},\"status\":{\"phase\":\"New\",\"outputDockerImageReference\":\"172.50.0.2:5000/mem-tfrs-dev/caddy-app:latest\",\"config\":{\"kind\":\"BuildConfig\",\"namespace\":\"mem-tfrs-dev\",\"name\":\"caddy-app\"},\"output\":{}}}\n"},{"name":"SOURCE_REPOSITORY","value":"https://github.com/BCDevOps/openshift-tools.git"},{"name":"SOURCE_URI","value":"https://github.com/BCDevOps/openshift-tools.git"},{"name":"SOURCE_CONTEXT_DIR","value":"/utils/caddy-proxy"},{"name":"ORIGIN_VERSION","value":"v3.7.14"},{"name":"ALLOWED_UIDS","value":"1-"},{"name":"DROP_CAPS","value":"KILL,MKNOD,SETGID,SETUID"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"100m","memory":"256Mi"}},"volumeMounts":[{"name":"buildworkdir","mountPath":"/tmp/build"},{"name":"builder-token-vnrju","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"FallbackToLogsOnError","imagePullPolicy":"IfNotPresent","securityContext":{"privileged":false}},{"name":"manage-dockerfile","image":"openshift3/ose-sti-builder:v3.7.14","command":["openshift-manage-dockerfile"],"args":["--loglevel=0"],"env":[{"name":"BUILD","value":"{\"kind\":\"Build\",\"apiVersion\":\"v1\",\"metadata\":{\"name\":\"caddy-app-6\",\"namespace\":\"mem-tfrs-dev\",\"selfLink\":\"/apis/build.openshift.io/v1/namespaces/mem-tfrs-dev/builds/caddy-app-6\",\"uid\":\"fc2e0bcf-2d8a-11e8-9413-0050568379a2\",\"resourceVersion\":\"382232128\",\"creationTimestamp\":\"2018-03-22T04:39:19Z\",\"labels\":{\"build\":\"caddy-app\",\"buildconfig\":\"caddy-app\",\"openshift.io/build-config.name\":\"caddy-app\",\"openshift.io/build.start-policy\":\"Serial\",\"template\":\"caddy-template\"},\"annotations\":{\"openshift.io/build-config.name\":\"caddy-app\",\"openshift.io/build.number\":\"6\"},\"ownerReferences\":[{\"apiVersion\":\"build.openshift.io/v1\",\"kind\":\"BuildConfig\",\"name\":\"caddy-app\",\"uid\":\"4d94fedd-d53b-11e7-9f70-005056832285\",\"controller\":true}]},\"spec\":{\"serviceAccount\":\"builder\",\"source\":{\"type\":\"Git\",\"git\":{\"uri\":\"https://github.com/BCDevOps/openshift-tools.git\"},\"contextDir\":\"/utils/caddy-proxy\"},\"strategy\":{\"type\":\"Source\",\"sourceStrategy\":{\"from\":{\"kind\":\"DockerImage\",\"name\":\"172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:aa24e7c04a552b6c41ef41e1b0717dc6895cf41e2d625977a5d569a402b4b0f8\"},\"pullSecret\":{\"name\":\"builder-dockercfg-hy7p9\"}}},\"output\":{\"to\":{\"kind\":\"DockerImage\",\"name\":\"172.50.0.2:5000/mem-tfrs-dev/caddy-app:latest\"},\"pushSecret\":{\"name\":\"builder-dockercfg-hy7p9\"}},\"resources\":{},\"postCommit\":{},\"nodeSelector\":null,\"triggeredBy\":[{\"message\":\"Image
        change\",\"imageChangeBuild\":{\"imageID\":\"172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:aa24e7c04a552b6c41ef41e1b0717dc6895cf41e2d625977a5d569a402b4b0f8\",\"fromRef\":{\"kind\":\"ImageStreamTag\",\"namespace\":\"openshift\",\"name\":\"bcgov-s2i-caddy:latest\"}}}]},\"status\":{\"phase\":\"New\",\"outputDockerImageReference\":\"172.50.0.2:5000/mem-tfrs-dev/caddy-app:latest\",\"config\":{\"kind\":\"BuildConfig\",\"namespace\":\"mem-tfrs-dev\",\"name\":\"caddy-app\"},\"output\":{}}}\n"},{"name":"SOURCE_REPOSITORY","value":"https://github.com/BCDevOps/openshift-tools.git"},{"name":"SOURCE_URI","value":"https://github.com/BCDevOps/openshift-tools.git"},{"name":"SOURCE_CONTEXT_DIR","value":"/utils/caddy-proxy"},{"name":"ORIGIN_VERSION","value":"v3.7.14"},{"name":"ALLOWED_UIDS","value":"1-"},{"name":"DROP_CAPS","value":"KILL,MKNOD,SETGID,SETUID"}],"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"100m","memory":"256Mi"}},"volumeMounts":[{"name":"buildworkdir","mountPath":"/tmp/build"},{"name":"builder-token-vnrju","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"FallbackToLogsOnError","imagePullPolicy":"IfNotPresent","securityContext":{"privileged":false}}]'
    creationTimestamp: null
    labels:
      openshift.io/build.name: caddy-app-6
    name: caddy-app-6-build
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: Build
      name: caddy-app-6
      uid: fc2e0bcf-2d8a-11e8-9413-0050568379a2
  spec:
    containers:
    - args:
      - --loglevel=0
      command:
      - openshift-sti-build
      env:
      - name: BUILD
        value: |
          {"kind":"Build","apiVersion":"v1","metadata":{"name":"caddy-app-6","namespace":"mem-tfrs-dev","selfLink":"/apis/build.openshift.io/v1/namespaces/mem-tfrs-dev/builds/caddy-app-6","uid":"fc2e0bcf-2d8a-11e8-9413-0050568379a2","resourceVersion":"382232128","creationTimestamp":"2018-03-22T04:39:19Z","labels":{"build":"caddy-app","buildconfig":"caddy-app","openshift.io/build-config.name":"caddy-app","openshift.io/build.start-policy":"Serial","template":"caddy-template"},"annotations":{"openshift.io/build-config.name":"caddy-app","openshift.io/build.number":"6"},"ownerReferences":[{"apiVersion":"build.openshift.io/v1","kind":"BuildConfig","name":"caddy-app","uid":"4d94fedd-d53b-11e7-9f70-005056832285","controller":true}]},"spec":{"serviceAccount":"builder","source":{"type":"Git","git":{"uri":"https://github.com/BCDevOps/openshift-tools.git"},"contextDir":"/utils/caddy-proxy"},"strategy":{"type":"Source","sourceStrategy":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:aa24e7c04a552b6c41ef41e1b0717dc6895cf41e2d625977a5d569a402b4b0f8"},"pullSecret":{"name":"builder-dockercfg-hy7p9"}}},"output":{"to":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-dev/caddy-app:latest"},"pushSecret":{"name":"builder-dockercfg-hy7p9"}},"resources":{},"postCommit":{},"nodeSelector":null,"triggeredBy":[{"message":"Image change","imageChangeBuild":{"imageID":"172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:aa24e7c04a552b6c41ef41e1b0717dc6895cf41e2d625977a5d569a402b4b0f8","fromRef":{"kind":"ImageStreamTag","namespace":"openshift","name":"bcgov-s2i-caddy:latest"}}}]},"status":{"phase":"New","outputDockerImageReference":"172.50.0.2:5000/mem-tfrs-dev/caddy-app:latest","config":{"kind":"BuildConfig","namespace":"mem-tfrs-dev","name":"caddy-app"},"output":{}}}
      - name: SOURCE_REPOSITORY
        value: https://github.com/BCDevOps/openshift-tools.git
      - name: SOURCE_URI
        value: https://github.com/BCDevOps/openshift-tools.git
      - name: SOURCE_CONTEXT_DIR
        value: /utils/caddy-proxy
      - name: ORIGIN_VERSION
        value: v3.7.14
      - name: ALLOWED_UIDS
        value: 1-
      - name: DROP_CAPS
        value: KILL,MKNOD,SETGID,SETUID
      - name: PUSH_DOCKERCFG_PATH
        value: /var/run/secrets/openshift.io/push
      - name: PULL_DOCKERCFG_PATH
        value: /var/run/secrets/openshift.io/pull
      image: openshift3/ose-sti-builder:v3.7.14
      imagePullPolicy: IfNotPresent
      name: sti-build
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 256Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /tmp/build
        name: buildworkdir
      - mountPath: /var/run/docker.sock
        name: docker-socket
      - mountPath: /var/run/crio.sock
        name: crio-socket
      - mountPath: /var/run/secrets/openshift.io/push
        name: builder-dockercfg-hy7p9-push
        readOnly: true
      - mountPath: /var/run/secrets/openshift.io/pull
        name: builder-dockercfg-hy7p9-pull
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: builder-token-vnrju
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: builder-dockercfg-hy7p9
    initContainers:
    - args:
      - --loglevel=0
      command:
      - openshift-git-clone
      env:
      - name: BUILD
        value: |
          {"kind":"Build","apiVersion":"v1","metadata":{"name":"caddy-app-6","namespace":"mem-tfrs-dev","selfLink":"/apis/build.openshift.io/v1/namespaces/mem-tfrs-dev/builds/caddy-app-6","uid":"fc2e0bcf-2d8a-11e8-9413-0050568379a2","resourceVersion":"382232128","creationTimestamp":"2018-03-22T04:39:19Z","labels":{"build":"caddy-app","buildconfig":"caddy-app","openshift.io/build-config.name":"caddy-app","openshift.io/build.start-policy":"Serial","template":"caddy-template"},"annotations":{"openshift.io/build-config.name":"caddy-app","openshift.io/build.number":"6"},"ownerReferences":[{"apiVersion":"build.openshift.io/v1","kind":"BuildConfig","name":"caddy-app","uid":"4d94fedd-d53b-11e7-9f70-005056832285","controller":true}]},"spec":{"serviceAccount":"builder","source":{"type":"Git","git":{"uri":"https://github.com/BCDevOps/openshift-tools.git"},"contextDir":"/utils/caddy-proxy"},"strategy":{"type":"Source","sourceStrategy":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:aa24e7c04a552b6c41ef41e1b0717dc6895cf41e2d625977a5d569a402b4b0f8"},"pullSecret":{"name":"builder-dockercfg-hy7p9"}}},"output":{"to":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-dev/caddy-app:latest"},"pushSecret":{"name":"builder-dockercfg-hy7p9"}},"resources":{},"postCommit":{},"nodeSelector":null,"triggeredBy":[{"message":"Image change","imageChangeBuild":{"imageID":"172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:aa24e7c04a552b6c41ef41e1b0717dc6895cf41e2d625977a5d569a402b4b0f8","fromRef":{"kind":"ImageStreamTag","namespace":"openshift","name":"bcgov-s2i-caddy:latest"}}}]},"status":{"phase":"New","outputDockerImageReference":"172.50.0.2:5000/mem-tfrs-dev/caddy-app:latest","config":{"kind":"BuildConfig","namespace":"mem-tfrs-dev","name":"caddy-app"},"output":{}}}
      - name: SOURCE_REPOSITORY
        value: https://github.com/BCDevOps/openshift-tools.git
      - name: SOURCE_URI
        value: https://github.com/BCDevOps/openshift-tools.git
      - name: SOURCE_CONTEXT_DIR
        value: /utils/caddy-proxy
      - name: ORIGIN_VERSION
        value: v3.7.14
      - name: ALLOWED_UIDS
        value: 1-
      - name: DROP_CAPS
        value: KILL,MKNOD,SETGID,SETUID
      image: openshift3/ose-sti-builder:v3.7.14
      imagePullPolicy: IfNotPresent
      name: git-clone
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 256Mi
      securityContext:
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /tmp/build
        name: buildworkdir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: builder-token-vnrju
        readOnly: true
    - args:
      - --loglevel=0
      command:
      - openshift-manage-dockerfile
      env:
      - name: BUILD
        value: |
          {"kind":"Build","apiVersion":"v1","metadata":{"name":"caddy-app-6","namespace":"mem-tfrs-dev","selfLink":"/apis/build.openshift.io/v1/namespaces/mem-tfrs-dev/builds/caddy-app-6","uid":"fc2e0bcf-2d8a-11e8-9413-0050568379a2","resourceVersion":"382232128","creationTimestamp":"2018-03-22T04:39:19Z","labels":{"build":"caddy-app","buildconfig":"caddy-app","openshift.io/build-config.name":"caddy-app","openshift.io/build.start-policy":"Serial","template":"caddy-template"},"annotations":{"openshift.io/build-config.name":"caddy-app","openshift.io/build.number":"6"},"ownerReferences":[{"apiVersion":"build.openshift.io/v1","kind":"BuildConfig","name":"caddy-app","uid":"4d94fedd-d53b-11e7-9f70-005056832285","controller":true}]},"spec":{"serviceAccount":"builder","source":{"type":"Git","git":{"uri":"https://github.com/BCDevOps/openshift-tools.git"},"contextDir":"/utils/caddy-proxy"},"strategy":{"type":"Source","sourceStrategy":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:aa24e7c04a552b6c41ef41e1b0717dc6895cf41e2d625977a5d569a402b4b0f8"},"pullSecret":{"name":"builder-dockercfg-hy7p9"}}},"output":{"to":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-dev/caddy-app:latest"},"pushSecret":{"name":"builder-dockercfg-hy7p9"}},"resources":{},"postCommit":{},"nodeSelector":null,"triggeredBy":[{"message":"Image change","imageChangeBuild":{"imageID":"172.50.0.2:5000/openshift/bcgov-s2i-caddy@sha256:aa24e7c04a552b6c41ef41e1b0717dc6895cf41e2d625977a5d569a402b4b0f8","fromRef":{"kind":"ImageStreamTag","namespace":"openshift","name":"bcgov-s2i-caddy:latest"}}}]},"status":{"phase":"New","outputDockerImageReference":"172.50.0.2:5000/mem-tfrs-dev/caddy-app:latest","config":{"kind":"BuildConfig","namespace":"mem-tfrs-dev","name":"caddy-app"},"output":{}}}
      - name: SOURCE_REPOSITORY
        value: https://github.com/BCDevOps/openshift-tools.git
      - name: SOURCE_URI
        value: https://github.com/BCDevOps/openshift-tools.git
      - name: SOURCE_CONTEXT_DIR
        value: /utils/caddy-proxy
      - name: ORIGIN_VERSION
        value: v3.7.14
      - name: ALLOWED_UIDS
        value: 1-
      - name: DROP_CAPS
        value: KILL,MKNOD,SETGID,SETUID
      image: openshift3/ose-sti-builder:v3.7.14
      imagePullPolicy: IfNotPresent
      name: manage-dockerfile
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 256Mi
      securityContext:
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /tmp/build
        name: buildworkdir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: builder-token-vnrju
        readOnly: true
    nodeName: ociopf-p-182.dmz
    nodeSelector:
      region: app
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: builder
    serviceAccountName: builder
    terminationGracePeriodSeconds: 30
    volumes:
    - emptyDir: {}
      name: buildworkdir
    - hostPath:
        path: /var/run/docker.sock
      name: docker-socket
    - hostPath:
        path: /var/run/crio.sock
      name: crio-socket
    - name: builder-dockercfg-hy7p9-push
      secret:
        defaultMode: 384
        secretName: builder-dockercfg-hy7p9
    - name: builder-dockercfg-hy7p9-pull
      secret:
        defaultMode: 384
        secretName: builder-dockercfg-hy7p9
    - name: builder-token-vnrju
      secret:
        defaultMode: 420
        secretName: builder-token-vnrju
  status:
    phase: Pending
    qosClass: Burstable
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicationController","namespace":"mem-tfrs-dev","name":"client-316","uid":"e161918c-46c6-11e8-8974-0050568348cc","apiVersion":"v1","resourceVersion":"434342452"}}
      kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu request for container
        client; cpu limit for container client'
      openshift.io/deployment-config.latest-version: "316"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.name: client-316
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: client-316-
    labels:
      deployment: client-316
      deploymentconfig: client
      name: client
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: client-316
      uid: e161918c-46c6-11e8-8974-0050568348cc
  spec:
    containers:
    - env:
      - name: RealIpFrom
      - name: AdditionalRealIpFromRules
      - name: IpFilterRules
      - name: HTTP_BASIC
      - name: API_URL
        value: http://backend.mem-tfrs-dev.svc.cluster.local:8080/api/
      image: 172.50.0.2:5000/mem-tfrs-tools/client-develop@sha256:127388e9d93451b039d0741d53784db4cb617c58d6524e2af8f6fd7d9c235336
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      name: client
      ports:
      - containerPort: 3000
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: "1"
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 512Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        runAsUser: 1000220000
        seLinuxOptions:
          level: s0:c15,c5
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-54qx0
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-vuq9e
    nodeName: ociopf-p-190.dmz
    nodeSelector:
      region: app
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000220000
      seLinuxOptions:
        level: s0:c15,c5
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - name: default-token-54qx0
      secret:
        defaultMode: 420
        secretName: default-token-54qx0
  status:
    phase: Pending
    qosClass: Burstable
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicationController","namespace":"mem-tfrs-dev","name":"postgresql-23","uid":"a9b6ef01-20ce-11e8-809f-0050568379a2","apiVersion":"v1","resourceVersion":"405387269"}}
      kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu limit for container
        postgresql'
      openshift.io/deployment-config.latest-version: "23"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.name: postgresql-23
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: postgresql-23-
    labels:
      deployment: postgresql-23
      deploymentconfig: postgresql
      name: postgresql
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: postgresql-23
      uid: a9b6ef01-20ce-11e8-809f-0050568379a2
  spec:
    containers:
    - env:
      - name: POSTGRESQL_DATABASE
        value: tfrs
      - name: POSTGRESQL_USER
        valueFrom:
          secretKeyRef:
            key: DATABASE_USER
            name: tfrs-postgresql
      - name: POSTGRESQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: DATABASE_PASSWORD
            name: tfrs-postgresql
      image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 5432
        timeoutSeconds: 1
      name: postgresql
      ports:
      - containerPort: 5432
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/sh
          - -i
          - -c
          - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT
            1'
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 2Gi
        requests:
          cpu: 500m
          memory: 2Gi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        runAsUser: 1000220000
        seLinuxOptions:
          level: s0:c15,c5
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/pgsql/data
        name: postgresql-data
      - mountPath: /postgresql-backup
        name: volume-r83io
      - mountPath: /backup
        name: volume-wh3ob
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-54qx0
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-vuq9e
    nodeName: ociopf-p-191.dmz
    nodeSelector:
      region: app
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000220000
      seLinuxOptions:
        level: s0:c15,c5
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - name: postgresql-data
      persistentVolumeClaim:
        claimName: postgresql-cns
    - name: volume-r83io
      persistentVolumeClaim:
        claimName: postgresql-backup-cns
    - name: volume-wh3ob
      persistentVolumeClaim:
        claimName: postgresql-standby-cns
    - name: default-token-54qx0
      secret:
        defaultMode: 420
        secretName: default-token-54qx0
  status:
    phase: Pending
    qosClass: Burstable
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicationController","namespace":"mem-tfrs-dev","name":"postgresql-bypass-4","uid":"42345ac5-26dd-11e8-a9df-005056832285","apiVersion":"v1","resourceVersion":"370646227"}}
      openshift.io/deployment-config.latest-version: "4"
      openshift.io/deployment-config.name: postgresql-bypass
      openshift.io/deployment.name: postgresql-bypass-4
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: postgresql-bypass-4-
    labels:
      deployment: postgresql-bypass-4
      deploymentconfig: postgresql-bypass
      name: postgresql-bypass
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: postgresql-bypass-4
      uid: 42345ac5-26dd-11e8-a9df-005056832285
  spec:
    containers:
    - env:
      - name: POSTGRESQL_DATABASE
        value: tfrs
      - name: POSTGRESQL_USER
        valueFrom:
          secretKeyRef:
            key: DATABASE_USER
            name: tfrs-postgresql
      - name: POSTGRESQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: DATABASE_PASSWORD
            name: tfrs-postgresql
      image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 5432
        timeoutSeconds: 1
      name: postgresql-bypass
      ports:
      - containerPort: 5432
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/sh
          - -i
          - -c
          - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT
            1'
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 500m
          memory: 512Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        runAsUser: 1000220000
        seLinuxOptions:
          level: s0:c15,c5
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/pgsql/data
        name: postgresql-data-bypass
      - mountPath: /postgresql-backup
        name: volume-s540c
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-54qx0
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-vuq9e
    nodeName: ociopf-p-182.dmz
    nodeSelector:
      region: app
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000220000
      seLinuxOptions:
        level: s0:c15,c5
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - name: postgresql-data-bypass
      persistentVolumeClaim:
        claimName: postgresql-bypass-cns
    - name: volume-s540c
      persistentVolumeClaim:
        claimName: postgresql-backup-cns
    - name: default-token-54qx0
      secret:
        defaultMode: 420
        secretName: default-token-54qx0
  status:
    phase: Pending
    qosClass: Guaranteed
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicationController","namespace":"mem-tfrs-dev","name":"postgresql-standby-3","uid":"48b6b24a-217c-11e8-809f-0050568379a2","apiVersion":"v1","resourceVersion":"370646730"}}
      kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu request for container
        postgresql-standby; cpu limit for container postgresql-standby'
      openshift.io/deployment-config.latest-version: "3"
      openshift.io/deployment-config.name: postgresql-standby
      openshift.io/deployment.name: postgresql-standby-3
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: postgresql-standby-3-
    labels:
      deployment: postgresql-standby-3
      deploymentconfig: postgresql-standby
      name: postgresql-standby
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: postgresql-standby-3
      uid: 48b6b24a-217c-11e8-809f-0050568379a2
  spec:
    containers:
    - env:
      - name: POSTGRESQL_DATABASE
        value: tfrs
      - name: POSTGRESQL_USER
        valueFrom:
          secretKeyRef:
            key: DATABASE_USER
            name: tfrs-postgresql
      - name: POSTGRESQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: DATABASE_PASSWORD
            name: tfrs-postgresql
      image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 5432
        timeoutSeconds: 1
      name: postgresql-standby
      ports:
      - containerPort: 5432
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/sh
          - -i
          - -c
          - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT
            1'
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 512Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        runAsUser: 1000220000
        seLinuxOptions:
          level: s0:c15,c5
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/pgsql/data
        name: postgresql-data-standby
      - mountPath: /postgresql-backup
        name: volume-7v94a
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-54qx0
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-vuq9e
    nodeName: ociopf-p-182.dmz
    nodeSelector:
      region: app
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000220000
      seLinuxOptions:
        level: s0:c15,c5
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - name: postgresql-data-standby
      persistentVolumeClaim:
        claimName: postgresql-standby-cns
    - name: volume-7v94a
      persistentVolumeClaim:
        claimName: postgresql-backup-cns
    - name: default-token-54qx0
      secret:
        defaultMode: 420
        secretName: default-token-54qx0
  status:
    phase: Pending
    qosClass: Burstable
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicationController","namespace":"mem-tfrs-dev","name":"request-logger-8","uid":"bebc8099-44de-11e8-8974-0050568348cc","apiVersion":"v1","resourceVersion":"430955822"}}
      openshift.io/deployment-config.latest-version: "8"
      openshift.io/deployment-config.name: request-logger
      openshift.io/deployment.name: request-logger-8
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: request-logger-8-
    labels:
      app: request-logger
      deployment: request-logger-8
      deploymentconfig: request-logger
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: request-logger-8
      uid: bebc8099-44de-11e8-8974-0050568348cc
  spec:
    containers:
    - image: 172.50.0.2:5000/mem-tfrs-tools/request-logger@sha256:bd2071b048447812c46073e247953b7747240033765e60c9ebf3604060566403
      imagePullPolicy: Always
      name: request-logger
      ports:
      - containerPort: 8080
        protocol: TCP
      resources:
        limits:
          cpu: 250m
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        runAsUser: 1000220000
        seLinuxOptions:
          level: s0:c15,c5
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app-root/src
        name: volume-8g9sa
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-54qx0
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-vuq9e
    nodeName: ociopf-p-190.dmz
    nodeSelector:
      region: app
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000220000
      seLinuxOptions:
        level: s0:c15,c5
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: reques_logger.py
          path: request_logger.py
        name: reques-logger
      name: volume-8g9sa
    - name: default-token-54qx0
      secret:
        defaultMode: 420
        secretName: default-token-54qx0
  status:
    phase: Pending
    qosClass: Guaranteed
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicationController","namespace":"mem-tfrs-dev","name":"schema-spy-11","uid":"3bd29eda-294f-11e8-9a98-0050568348cc","apiVersion":"v1","resourceVersion":"374607192"}}
      openshift.io/deployment-config.latest-version: "11"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.name: schema-spy-11
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: schema-spy-11-
    labels:
      deployment: schema-spy-11
      deploymentconfig: schema-spy
      name: schema-spy
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: schema-spy-11
      uid: 3bd29eda-294f-11e8-9a98-0050568348cc
  spec:
    containers:
    - env:
      - name: DATABASE_SERVICE_NAME
        value: postgresql
      - name: POSTGRESQL_DATABASE
        value: tfrs
      - name: POSTGRESQL_USER
        valueFrom:
          secretKeyRef:
            key: DATABASE_USER
            name: tfrs-postgresql
      - name: POSTGRESQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: DATABASE_PASSWORD
            name: tfrs-postgresql
      image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3000
      name: schema-spy
      ports:
      - containerPort: 8080
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3000
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 500m
          memory: 512Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        runAsUser: 1000220000
        seLinuxOptions:
          level: s0:c15,c5
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-54qx0
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-vuq9e
    nodeName: ociopf-p-191.dmz
    nodeSelector:
      region: app
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000220000
      seLinuxOptions:
        level: s0:c15,c5
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - name: default-token-54qx0
      secret:
        defaultMode: 420
        secretName: default-token-54qx0
  status:
    phase: Pending
    qosClass: Guaranteed
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicationController","namespace":"mem-tfrs-dev","name":"tfrs-435","uid":"a54f6200-46bd-11e8-8974-0050568348cc","apiVersion":"v1","resourceVersion":"434285845"}}
      kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu request for container
        tfrs-app; cpu limit for container tfrs-app'
      openshift.io/deployment-config.latest-version: "435"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.name: tfrs-435
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: tfrs-435-
    labels:
      deployment: tfrs-435
      deploymentconfig: tfrs
      name: tfrs
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: tfrs-435
      uid: a54f6200-46bd-11e8-8974-0050568348cc
  spec:
    containers:
    - env:
      - name: DATABASE_SERVICE_NAME
        value: postgresql
      - name: DATABASE_ENGINE
        value: postgresql
      - name: DATABASE_NAME
        value: tfrs
      - name: APP_CONFIG
        value: /opt/app-root/src/gunicorn.cfg
      - name: DJANGO_DEBUG
        value: "True"
      - name: DATABASE_USER
        valueFrom:
          secretKeyRef:
            key: DATABASE_USER
            name: tfrs-postgresql
      - name: DATABASE_PASSWORD
        valueFrom:
          secretKeyRef:
            key: DATABASE_PASSWORD
            name: tfrs-postgresql
      image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-develop@sha256:c33fb861288fb55b44a499b9d7aaee1a6ebd14b51137612952b5934b8b013506
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      name: tfrs-app
      ports:
      - containerPort: 8080
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: "1"
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 512Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        runAsUser: 1000220000
        seLinuxOptions:
          level: s0:c15,c5
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-54qx0
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-vuq9e
    nodeName: ociopf-p-190.dmz
    nodeSelector:
      region: app
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000220000
      seLinuxOptions:
        level: s0:c15,c5
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - name: default-token-54qx0
      secret:
        defaultMode: 420
        secretName: default-token-54qx0
  status:
    phase: Pending
    qosClass: Burstable
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicationController","namespace":"mem-tfrs-dev","name":"tfrs-bypass-45","uid":"3c06f8ee-428b-11e8-9a98-0050568348cc","apiVersion":"v1","resourceVersion":"425393853"}}
      openshift.io/deployment-config.latest-version: "45"
      openshift.io/deployment-config.name: tfrs-bypass
      openshift.io/deployment.name: tfrs-bypass-45
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: tfrs-bypass-45-
    labels:
      deployment: tfrs-bypass-45
      deploymentconfig: tfrs-bypass
      name: tfrs-bypass
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: tfrs-bypass-45
      uid: 3c06f8ee-428b-11e8-9a98-0050568348cc
  spec:
    containers:
    - env:
      - name: DATABASE_SERVICE_NAME
        value: postgresql-bypass
      - name: DATABASE_ENGINE
        value: postgresql
      - name: DATABASE_NAME
        value: tfrs
      - name: APP_CONFIG
      - name: DJANGO_DEBUG
        value: "True"
      - name: BYPASS_HEADER_AUTHENTICATION
        value: "True"
      - name: DATABASE_USER
        valueFrom:
          secretKeyRef:
            key: DATABASE_USER
            name: tfrs-postgresql
      - name: DATABASE_PASSWORD
        valueFrom:
          secretKeyRef:
            key: DATABASE_PASSWORD
            name: tfrs-postgresql
      image: 172.50.0.2:5000/mem-tfrs-tools/tfrs-bypass@sha256:83bfb277ec67d5880b8531a9fed087f3a7a384576696ff0f672a8a6ee893c20f
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      name: tfrs-bypass-app
      ports:
      - containerPort: 8080
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: 250m
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        runAsUser: 1000220000
        seLinuxOptions:
          level: s0:c15,c5
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-54qx0
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-vuq9e
    nodeName: ociopf-p-188.dmz
    nodeSelector:
      region: app
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000220000
      seLinuxOptions:
        level: s0:c15,c5
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - name: default-token-54qx0
      secret:
        defaultMode: 420
        secretName: default-token-54qx0
  status:
    phase: Pending
    qosClass: Guaranteed
kind: List
metadata: {}
