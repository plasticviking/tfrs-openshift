apiVersion: v1
items:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: request-logger
    name: request-logger
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: request-logger:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: /utils/request_logger
      git:
        ref: master
        uri: https://github.com/bcdevops/openshift-tools/
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: python:3.5
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers: []
  status:
    lastVersion: 0
- apiVersion: v1
  kind: Build
  metadata:
    annotations:
      openshift.io/build-config.name: request-logger
      openshift.io/build.number: "1"
      openshift.io/build.pod-name: request-logger-1-build
    creationTimestamp: null
    labels:
      app: request-logger
      buildconfig: request-logger
      openshift.io/build-config.name: request-logger
      openshift.io/build.start-policy: Serial
    name: request-logger-1
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: request-logger
      uid: 0c0fb10e-4416-11e8-9a98-0050568348cc
  spec:
    nodeSelector: null
    output:
      pushSecret:
        name: builder-dockercfg-il778
      to:
        kind: ImageStreamTag
        name: request-logger:latest
    postCommit: {}
    resources: {}
    revision:
      git:
        author:
          email: steven.barre@dxcas.com
          name: Steven Barre
        commit: 923a0263d5f19facc5e450e532e0c417f6f97f61
        committer:
          email: steven.barre@dxcas.com
          name: Steven Barre
        message: Fixes to rolling reboot
      type: Git
    serviceAccount: builder
    source:
      contextDir: /utils/request_logger
      git:
        ref: master
        uri: https://github.com/bcdevops/openshift-tools/
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: DockerImage
          name: registry.access.redhat.com/rhscl/python-35-rhel7@sha256:27ce32b0855dea7b078048064b72e1554069ec737ef3398fa740cc72ec82ddb9
      type: Source
    triggeredBy:
    - message: Manually triggered
  status:
    config:
      name: request-logger
    output:
      to:
        imageDigest: sha256:fceab52c55a53e264e1a651b76fa4094ad9c6d786366a4a01ae6cf20bc3febde
    outputDockerImageReference: 172.50.0.2:5000/mem-tfrs-prod/request-logger:latest
    phase: New
    stages:
    - durationMilliseconds: 1565
      name: FetchInputs
      startTime: 2018-04-19T21:10:24Z
      steps:
      - durationMilliseconds: 1565
        name: FetchGitSource
        startTime: 2018-04-19T21:10:24Z
    - durationMilliseconds: 11468
      name: CommitContainer
      startTime: 2018-04-19T21:10:39Z
      steps:
      - durationMilliseconds: 11468
        name: CommitContainer
        startTime: 2018-04-19T21:10:39Z
    - durationMilliseconds: 19000
      name: Assemble
      startTime: 2018-04-19T21:10:31Z
      steps:
      - durationMilliseconds: 19000
        name: AssembleBuildScripts
        startTime: 2018-04-19T21:10:31Z
    - durationMilliseconds: 31287
      name: PushImage
      startTime: 2018-04-19T21:10:50Z
      steps:
      - durationMilliseconds: 31287
        name: PushImage
        startTime: 2018-04-19T21:10:50Z
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the application server
    creationTimestamp: null
    generation: 1
    name: client
  spec:
    replicas: 1
    selector:
      name: client
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: client
        name: client
      spec:
        containers:
        - env:
          - name: API_URL
            value: http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client@sha256:4da7ec032027f2ef07ac088b347a65072e06bc8b57a5af97f1112c93617bb8bc
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "1"
              memory: 4Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - client
        from:
          kind: ImageStreamTag
          name: client:prod
          namespace: mem-tfrs-tools
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      template: postgresql-persistent-template
    name: postgresql
  spec:
    paused: true
    replicas: 1
    selector:
      name: postgresql
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 4Gi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
          - mountPath: /postgresql-backup
            name: volume-iwx0w
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-cns
        - name: volume-iwx0w
          persistentVolumeClaim:
            claimName: postgresql-backup-cns
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:9.5
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 1
    labels:
      app: request-logger
    name: request-logger
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      deploymentconfig: request-logger
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: request-logger
          deploymentconfig: request-logger
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-tools/request-logger@sha256:bd2071b048447812c46073e247953b7747240033765e60c9ebf3604060566403
          imagePullPolicy: Always
          name: request-logger
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/app-root/src
            name: volume-8g9sa
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: reques_logger.py
              path: request_logger.py
            name: reques-logger
          name: volume-8g9sa
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - request-logger
        from:
          kind: ImageStreamTag
          name: request-logger:latest
          namespace: mem-tfrs-tools
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the container.
    creationTimestamp: null
    generation: 1
    name: schema-spy
  spec:
    replicas: 1
    selector:
      name: schema-spy
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: schema-spy
        name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - schema-spy
        from:
          kind: ImageStreamTag
          name: schema-spy:latest
          namespace: mem-tfrs-tools
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the application server
    creationTimestamp: null
    generation: 1
    labels:
      template: tfrs-app-environment
    name: tfrs
  spec:
    replicas: 1
    selector:
      name: tfrs
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        mid:
          execNewPod:
            command:
            - /bin/sh
            - -c
            - python manage.py migrate
            containerName: tfrs-app
          failurePolicy: Abort
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: tfrs
        name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
            value: /opt/app-root/src/gunicorn.cfg
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:0618d56334a7ae915f0156d61a96f350115f134ed5504a9e24e9eed064758847
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "1"
              memory: 4Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - tfrs-app
        from:
          kind: ImageStreamTag
          name: tfrs:prod
          namespace: mem-tfrs-tools
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/desired-replicas: "1"
      kubectl.kubernetes.io/update-source-id: client-13:1455dbf1-b47d-11e7-9c18-005056832285
      openshift.io/deployer-pod.name: client-15-deploy
      openshift.io/deployment-config.latest-version: "15"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.cancelled: "true"
      openshift.io/deployment.phase: Failed
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: newer deployment was found running
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-prod","selfLink":"/oapi/v1/namespaces/mem-tfrs-prod/deploymentconfigs/client","uid":"28b4e912-a54a-11e7-b185-005056832285","resourceVersion":"269565646","generation":18,"creationTimestamp":"2017-09-29T19:12:38Z","annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:b7ca18d6a65bbd10011b75d1fc2b52634d4cf16cb00485f6dbf9b7d8627d2aea"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:b7ca18d6a65bbd10011b75d1fc2b52634d4cf16cb00485f6dbf9b7d8627d2aea","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"API_URL","value":"http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/"},{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":3000,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":3000,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{}}}},"status":{"latestVersion":15,"observedGeneration":17,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:prod"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2017-11-19T14:53:28Z","lastTransitionTime":"2017-11-19T14:53:28Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"False","lastUpdateTime":"2017-11-21T23:05:33Z","lastTransitionTime":"2017-11-21T23:05:33Z","reason":"ProgressDeadlineExceeded","message":"replication controller \"client-14\" has failed progressing"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
    name: client-15
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: 28b4e912-a54a-11e7-b185-005056832285
  spec:
    replicas: 0
    selector:
      deployment: client-15
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "15"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-15
        creationTimestamp: null
        labels:
          deployment: client-15
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: API_URL
            value: http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          image: 172.50.0.2:5000/mem-tfrs-tools/client@sha256:b7ca18d6a65bbd10011b75d1fc2b52634d4cf16cb00485f6dbf9b7d8627d2aea
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-06 15:31:07 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-06 15:30:02 -0700 PDT
      openshift.io/deployer-pod.name: client-41-deploy
      openshift.io/deployment-config.latest-version: "41"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/client","uid":"28b4e912-a54a-11e7-b185-005056832285","resourceVersion":"407331484","generation":67,"creationTimestamp":"2017-09-29T19:12:38Z","annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:0339414137e059bb30c9dda69e922d79bdca44377a9c467da7cb0a06883579ce"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:0339414137e059bb30c9dda69e922d79bdca44377a9c467da7cb0a06883579ce","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"API_URL","value":"http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/"},{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/"}],"resources":{"limits":{"cpu":"500m","memory":"2Gi"},"requests":{"cpu":"100m","memory":"256Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":41,"observedGeneration":67,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-06T22:29:00Z","lastTransitionTime":"2018-04-06T22:29:00Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-06T22:29:01Z","lastTransitionTime":"2018-04-06T22:28:40Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-40\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
    name: client-41
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: 28b4e912-a54a-11e7-b185-005056832285
  spec:
    replicas: 0
    selector:
      deployment: client-41
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "41"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-41
        creationTimestamp: null
        labels:
          deployment: client-41
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: API_URL
            value: http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client@sha256:0339414137e059bb30c9dda69e922d79bdca44377a9c467da7cb0a06883579ce
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 500m
              memory: 2Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-06 15:47:17 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-06 15:46:12 -0700 PDT
      openshift.io/deployer-pod.name: client-42-deploy
      openshift.io/deployment-config.latest-version: "42"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/client","uid":"28b4e912-a54a-11e7-b185-005056832285","resourceVersion":"407354975","generation":68,"creationTimestamp":"2017-09-29T19:12:38Z","annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:0339414137e059bb30c9dda69e922d79bdca44377a9c467da7cb0a06883579ce"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:0339414137e059bb30c9dda69e922d79bdca44377a9c467da7cb0a06883579ce","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"API_URL","value":"http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/"},{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/"}],"resources":{"limits":{"cpu":"1","memory":"4Gi"},"requests":{"cpu":"100m","memory":"256Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":42,"observedGeneration":68,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-06T22:31:06Z","lastTransitionTime":"2018-04-06T22:31:06Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-06T22:31:08Z","lastTransitionTime":"2018-04-06T22:30:46Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-41\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
    name: client-42
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: 28b4e912-a54a-11e7-b185-005056832285
  spec:
    replicas: 0
    selector:
      deployment: client-42
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "42"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-42
        creationTimestamp: null
        labels:
          deployment: client-42
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: API_URL
            value: http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client@sha256:0339414137e059bb30c9dda69e922d79bdca44377a9c467da7cb0a06883579ce
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "1"
              memory: 4Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-09 15:32:25 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-09 15:31:24 -0700 PDT
      openshift.io/deployer-pod.name: client-43-deploy
      openshift.io/deployment-config.latest-version: "43"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/client","uid":"28b4e912-a54a-11e7-b185-005056832285","resourceVersion":"413047288","generation":69,"creationTimestamp":"2017-09-29T19:12:38Z","annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:6369e8e65ac5ee1d26c9816f28345c447fd7e38d347c6e384361042c558f6f5e"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:6369e8e65ac5ee1d26c9816f28345c447fd7e38d347c6e384361042c558f6f5e","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"API_URL","value":"http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/"},{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/"}],"resources":{"limits":{"cpu":"1","memory":"4Gi"},"requests":{"cpu":"100m","memory":"256Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":43,"observedGeneration":69,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:6369e8e65ac5ee1d26c9816f28345c447fd7e38d347c6e384361042c558f6f5e"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-06T22:47:18Z","lastTransitionTime":"2018-04-06T22:46:57Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-42\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-04-09T11:48:56Z","lastTransitionTime":"2018-04-09T11:48:56Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
    name: client-43
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: 28b4e912-a54a-11e7-b185-005056832285
  spec:
    replicas: 0
    selector:
      deployment: client-43
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "43"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-43
        creationTimestamp: null
        labels:
          deployment: client-43
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: API_URL
            value: http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client@sha256:6369e8e65ac5ee1d26c9816f28345c447fd7e38d347c6e384361042c558f6f5e
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "1"
              memory: 4Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-11 15:21:14 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-11 15:20:15 -0700 PDT
      openshift.io/deployer-pod.name: client-44-deploy
      openshift.io/deployment-config.latest-version: "44"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/client","uid":"28b4e912-a54a-11e7-b185-005056832285","resourceVersion":"416331240","generation":70,"creationTimestamp":"2017-09-29T19:12:38Z","annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:dd605fc864ad0c04b872fd5ef0a41463eccb32473d21b5e721447199017a6bfc"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:dd605fc864ad0c04b872fd5ef0a41463eccb32473d21b5e721447199017a6bfc","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"API_URL","value":"http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/"},{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/"}],"resources":{"limits":{"cpu":"1","memory":"4Gi"},"requests":{"cpu":"100m","memory":"256Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":44,"observedGeneration":70,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:dd605fc864ad0c04b872fd5ef0a41463eccb32473d21b5e721447199017a6bfc"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-09T22:32:25Z","lastTransitionTime":"2018-04-09T22:32:25Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-09T22:32:26Z","lastTransitionTime":"2018-04-09T22:32:05Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-43\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
    name: client-44
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: 28b4e912-a54a-11e7-b185-005056832285
  spec:
    replicas: 0
    selector:
      deployment: client-44
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "44"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-44
        creationTimestamp: null
        labels:
          deployment: client-44
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: API_URL
            value: http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client@sha256:dd605fc864ad0c04b872fd5ef0a41463eccb32473d21b5e721447199017a6bfc
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "1"
              memory: 4Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-12 14:02:10 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-12 14:01:12 -0700 PDT
      openshift.io/deployer-pod.name: client-45-deploy
      openshift.io/deployment-config.latest-version: "45"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/client","uid":"28b4e912-a54a-11e7-b185-005056832285","resourceVersion":"417824829","generation":71,"creationTimestamp":"2017-09-29T19:12:38Z","annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:6ca0cc19c4f25c4caa24cbb362b5ce4c73ba6e89147344193387be3292c86f0d"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:6ca0cc19c4f25c4caa24cbb362b5ce4c73ba6e89147344193387be3292c86f0d","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"API_URL","value":"http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/"},{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/"}],"resources":{"limits":{"cpu":"1","memory":"4Gi"},"requests":{"cpu":"100m","memory":"256Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":45,"observedGeneration":71,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:6ca0cc19c4f25c4caa24cbb362b5ce4c73ba6e89147344193387be3292c86f0d"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-11T22:21:15Z","lastTransitionTime":"2018-04-11T22:20:53Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-44\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-04-12T19:47:14Z","lastTransitionTime":"2018-04-12T19:47:14Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
    name: client-45
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: 28b4e912-a54a-11e7-b185-005056832285
  spec:
    replicas: 0
    selector:
      deployment: client-45
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "45"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-45
        creationTimestamp: null
        labels:
          deployment: client-45
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: API_URL
            value: http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client@sha256:6ca0cc19c4f25c4caa24cbb362b5ce4c73ba6e89147344193387be3292c86f0d
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "1"
              memory: 4Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-19 13:34:22 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-19 13:33:25 -0700 PDT
      openshift.io/deployer-pod.name: client-46-deploy
      openshift.io/deployment-config.latest-version: "46"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"client","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/client","uid":"28b4e912-a54a-11e7-b185-005056832285","resourceVersion":"428986448","generation":72,"creationTimestamp":"2017-09-29T19:12:38Z","annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["client"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"client:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:4da7ec032027f2ef07ac088b347a65072e06bc8b57a5af97f1112c93617bb8bc"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"client"},"template":{"metadata":{"name":"client","creationTimestamp":null,"labels":{"name":"client"}},"spec":{"containers":[{"name":"client","image":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:4da7ec032027f2ef07ac088b347a65072e06bc8b57a5af97f1112c93617bb8bc","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"API_URL","value":"http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/"},{"name":"RealIpFrom"},{"name":"AdditionalRealIpFromRules"},{"name":"IpFilterRules"},{"name":"HTTP_BASIC"},{"name":"API_URL","value":"http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/"}],"resources":{"limits":{"cpu":"1","memory":"4Gi"},"requests":{"cpu":"100m","memory":"256Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":20,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":46,"observedGeneration":72,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/client@sha256:4da7ec032027f2ef07ac088b347a65072e06bc8b57a5af97f1112c93617bb8bc"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-12T21:02:12Z","lastTransitionTime":"2018-04-12T21:01:49Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"client-45\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-04-19T05:08:50Z","lastTransitionTime":"2018-04-19T05:08:50Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: client
    name: client-46
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: client
      uid: 28b4e912-a54a-11e7-b185-005056832285
  spec:
    replicas: 1
    selector:
      deployment: client-46
      deploymentconfig: client
      name: client
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "46"
          openshift.io/deployment-config.name: client
          openshift.io/deployment.name: client-46
        creationTimestamp: null
        labels:
          deployment: client-46
          deploymentconfig: client
          name: client
      spec:
        containers:
        - env:
          - name: API_URL
            value: http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/
          - name: RealIpFrom
          - name: AdditionalRealIpFromRules
          - name: IpFilterRules
          - name: HTTP_BASIC
          - name: API_URL
            value: http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/
          image: 172.50.0.2:5000/mem-tfrs-tools/client@sha256:4da7ec032027f2ef07ac088b347a65072e06bc8b57a5af97f1112c93617bb8bc
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: client
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "1"
              memory: 4Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-06 15:48:01 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-06 15:47:22 -0700 PDT
      openshift.io/deployer-pod.name: postgresql-10-deploy
      openshift.io/deployment-config.latest-version: "10"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/postgresql","uid":"23a4bb36-fadf-11e6-8d55-0050568348cc","resourceVersion":"407356590","generation":26,"creationTimestamp":"2017-02-24T22:18:16Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"postgresql"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql"}},"spec":{"volumes":[{"name":"postgresql-data","persistentVolumeClaim":{"claimName":"postgresql-cns"}}],"containers":[{"name":"postgresql","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"8Gi"},"requests":{"cpu":"100m","memory":"256Mi"}},"volumeMounts":[{"name":"postgresql-data","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":10,"observedGeneration":26,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-06T21:46:07Z","lastTransitionTime":"2018-04-06T21:46:07Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-06T21:46:08Z","lastTransitionTime":"2018-04-06T21:45:56Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"postgresql-9\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql
      template: postgresql-persistent-template
    name: postgresql-10
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql
      uid: 23a4bb36-fadf-11e6-8d55-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: postgresql-10
      deploymentconfig: postgresql
      name: postgresql
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "10"
          openshift.io/deployment-config.name: postgresql
          openshift.io/deployment.name: postgresql-10
        creationTimestamp: null
        labels:
          deployment: postgresql-10
          deploymentconfig: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 8Gi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-06 15:49:44 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-06 15:49:06 -0700 PDT
      openshift.io/deployer-pod.name: postgresql-11-deploy
      openshift.io/deployment-config.latest-version: "11"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/postgresql","uid":"23a4bb36-fadf-11e6-8d55-0050568348cc","resourceVersion":"407358833","generation":27,"creationTimestamp":"2017-02-24T22:18:16Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"postgresql"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql"}},"spec":{"volumes":[{"name":"postgresql-data","persistentVolumeClaim":{"claimName":"postgresql-cns"}}],"containers":[{"name":"postgresql","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"4Gi"},"requests":{"cpu":"100m","memory":"256Mi"}},"volumeMounts":[{"name":"postgresql-data","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":11,"observedGeneration":27,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-06T22:48:01Z","lastTransitionTime":"2018-04-06T22:48:01Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-06T22:48:04Z","lastTransitionTime":"2018-04-06T22:47:50Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"postgresql-10\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql
      template: postgresql-persistent-template
    name: postgresql-11
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql
      uid: 23a4bb36-fadf-11e6-8d55-0050568348cc
  spec:
    replicas: 1
    selector:
      deployment: postgresql-11
      deploymentconfig: postgresql
      name: postgresql
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "11"
          openshift.io/deployment-config.name: postgresql
          openshift.io/deployment.name: postgresql-11
        creationTimestamp: null
        labels:
          deployment: postgresql-11
          deploymentconfig: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 4Gi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: postgresql-6-deploy
      openshift.io/deployment-config.latest-version: "6"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/postgresql","uid":"23a4bb36-fadf-11e6-8d55-0050568348cc","resourceVersion":"322445298","generation":14,"creationTimestamp":"2017-02-24T22:18:16Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a"}},{"type":"ConfigChange"}],"replicas":0,"test":false,"selector":{"name":"postgresql"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql"}},"spec":{"volumes":[{"name":"postgresql-data","persistentVolumeClaim":{"claimName":"postgresql-cns"}}],"containers":[{"name":"postgresql","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_USER","value":"userSRU"},{"name":"POSTGRESQL_PASSWORD","value":"YwyryuvB12gXLFdE"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"}],"resources":{"limits":{"memory":"512Mi"}},"volumeMounts":[{"name":"postgresql-data","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":6,"observedGeneration":13,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2017-11-30T21:48:45Z","lastTransitionTime":"2017-11-30T21:48:23Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"postgresql-5\" successfully rolled out"},{"type":"Available","status":"False","lastUpdateTime":"2018-01-23T23:38:46Z","lastTransitionTime":"2018-01-23T23:38:46Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql
      template: postgresql-persistent-template
    name: postgresql-6
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql
      uid: 23a4bb36-fadf-11e6-8d55-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: postgresql-6
      deploymentconfig: postgresql
      name: postgresql
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "6"
          openshift.io/deployment-config.name: postgresql
          openshift.io/deployment.name: postgresql-6
        creationTimestamp: null
        labels:
          deployment: postgresql-6
          deploymentconfig: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            value: userSRU
          - name: POSTGRESQL_PASSWORD
            value: YwyryuvB12gXLFdE
          - name: POSTGRESQL_DATABASE
            value: tfrs
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.name: postgresql-7-deploy
      openshift.io/deployment-config.latest-version: "7"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/postgresql","uid":"23a4bb36-fadf-11e6-8d55-0050568348cc","resourceVersion":"327980710","generation":18,"creationTimestamp":"2017-02-24T22:18:16Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a"}},{"type":"ConfigChange"}],"replicas":0,"test":false,"selector":{"name":"postgresql"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql"}},"spec":{"volumes":[{"name":"postgresql-data","persistentVolumeClaim":{"claimName":"postgresql-cns"}}],"containers":[{"name":"postgresql","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"volumeMounts":[{"name":"postgresql-data","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":7,"observedGeneration":17,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-01-23T23:42:17Z","lastTransitionTime":"2018-01-23T23:42:17Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"postgresql-6\" successfully rolled out"},{"type":"Available","status":"False","lastUpdateTime":"2018-01-30T20:05:25Z","lastTransitionTime":"2018-01-30T20:05:25Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql
      template: postgresql-persistent-template
    name: postgresql-7
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql
      uid: 23a4bb36-fadf-11e6-8d55-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: postgresql-7
      deploymentconfig: postgresql
      name: postgresql
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "7"
          openshift.io/deployment-config.name: postgresql
          openshift.io/deployment.name: postgresql-7
        creationTimestamp: null
        labels:
          deployment: postgresql-7
          deploymentconfig: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:19aacf0c8331df76b67932415bd84abf74ec36fd9d4aef518ad9f6285c4a948a
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-02-27 15:09:33 -0800 PST
      openshift.io/deployer-pod.created-at: 2018-02-27 15:08:30 -0800 PST
      openshift.io/deployer-pod.name: postgresql-8-deploy
      openshift.io/deployment-config.latest-version: "8"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/postgresql","uid":"23a4bb36-fadf-11e6-8d55-0050568348cc","resourceVersion":"355775986","generation":22,"creationTimestamp":"2017-02-24T22:18:16Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"postgresql"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql"}},"spec":{"volumes":[{"name":"postgresql-data","persistentVolumeClaim":{"claimName":"postgresql-cns"}}],"containers":[{"name":"postgresql","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"volumeMounts":[{"name":"postgresql-data","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":8,"observedGeneration":22,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-01-30T22:30:34Z","lastTransitionTime":"2018-01-30T22:30:34Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"postgresql-7\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-02-27T19:11:22Z","lastTransitionTime":"2018-02-27T19:11:22Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql
      template: postgresql-persistent-template
    name: postgresql-8
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql
      uid: 23a4bb36-fadf-11e6-8d55-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: postgresql-8
      deploymentconfig: postgresql
      name: postgresql
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "8"
          openshift.io/deployment-config.name: postgresql
          openshift.io/deployment.name: postgresql-8
        creationTimestamp: null
        labels:
          deployment: postgresql-8
          deploymentconfig: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-06 14:46:07 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-06 14:45:48 -0700 PDT
      openshift.io/deployer-pod.name: postgresql-9-deploy
      openshift.io/deployment-config.latest-version: "9"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"postgresql","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/postgresql","uid":"23a4bb36-fadf-11e6-8d55-0050568348cc","resourceVersion":"407266806","generation":25,"creationTimestamp":"2017-02-24T22:18:16Z","labels":{"app":"postgresql-persistent","template":"postgresql-persistent-template"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","namespace":"openshift","name":"postgresql:9.5"},"lastTriggeredImage":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"postgresql"},"template":{"metadata":{"creationTimestamp":null,"labels":{"name":"postgresql"}},"spec":{"volumes":[{"name":"postgresql-data","persistentVolumeClaim":{"claimName":"postgresql-cns"}}],"containers":[{"name":"postgresql","image":"registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"4Gi"},"requests":{"cpu":"1","memory":"2Gi"}},"volumeMounts":[{"name":"postgresql-data","mountPath":"/var/lib/pgsql/data"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{},"privileged":false}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":9,"observedGeneration":25,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-02-27T23:09:42Z","lastTransitionTime":"2018-02-27T23:09:02Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"postgresql-8\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-03-16T20:50:37Z","lastTransitionTime":"2018-03-16T20:50:37Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql-persistent
      openshift.io/deployment-config.name: postgresql
      template: postgresql-persistent-template
    name: postgresql-9
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: postgresql
      uid: 23a4bb36-fadf-11e6-8d55-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: postgresql-9
      deploymentconfig: postgresql
      name: postgresql
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "9"
          openshift.io/deployment-config.name: postgresql
          openshift.io/deployment.name: postgresql-9
        creationTimestamp: null
        labels:
          deployment: postgresql-9
          deploymentconfig: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 4Gi
            requests:
              cpu: "1"
              memory: 2Gi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-cns
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/desired-replicas: "1"
      openshift.io/deployer-pod.completed-at: 2018-04-19 14:06:12 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-19 13:56:07 -0700 PDT
      openshift.io/deployer-pod.name: request-logger-1-deploy
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: request-logger
      openshift.io/deployment.phase: Failed
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"request-logger","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/request-logger","uid":"142716ad-4414-11e8-9a98-0050568348cc","resourceVersion":"429019007","generation":2,"creationTimestamp":"2018-04-19T20:56:06Z","labels":{"app":"request-logger"},"annotations":{"openshift.io/generated-by":"OpenShiftWebConsole"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["request-logger"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-dev","name":"request-logger:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:a6226da1c2150ea1079ee99c562588be59141547159365e72c8c0d1f8d69110e"}},{"type":"ConfigChange"}],"replicas":1,"revisionHistoryLimit":10,"test":false,"selector":{"deploymentconfig":"request-logger"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"request-logger","deploymentconfig":"request-logger"}},"spec":{"volumes":[{"name":"volume-8g9sa","configMap":{"name":"reques-logger","items":[{"key":"reques_logger.py","path":"request_logger.py"}],"defaultMode":420}}],"containers":[{"name":"request-logger","image":"172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:a6226da1c2150ea1079ee99c562588be59141547159365e72c8c0d1f8d69110e","ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"volumeMounts":[{"name":"volume-8g9sa","mountPath":"/opt/app-root/src"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":1,"observedGeneration":2,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-04-19T20:56:06Z","lastTransitionTime":"2018-04-19T20:56:06Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: request-logger
      openshift.io/deployment-config.name: request-logger
    name: request-logger-1
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: request-logger
      uid: 142716ad-4414-11e8-9a98-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: request-logger-1
      deploymentconfig: request-logger
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "1"
          openshift.io/deployment-config.name: request-logger
          openshift.io/deployment.name: request-logger-1
        creationTimestamp: null
        labels:
          app: request-logger
          deployment: request-logger-1
          deploymentconfig: request-logger
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-dev/request-logger@sha256:a6226da1c2150ea1079ee99c562588be59141547159365e72c8c0d1f8d69110e
          imagePullPolicy: Always
          name: request-logger
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/app-root/src
            name: volume-8g9sa
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: reques_logger.py
              path: request_logger.py
            name: reques-logger
          name: volume-8g9sa
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "0"
      openshift.io/deployer-pod.completed-at: 2018-04-19 14:15:48 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-19 14:11:47 -0700 PDT
      openshift.io/deployer-pod.name: request-logger-2-deploy
      openshift.io/deployment-config.latest-version: "2"
      openshift.io/deployment-config.name: request-logger
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"request-logger","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/request-logger","uid":"142716ad-4414-11e8-9a98-0050568348cc","resourceVersion":"429042651","generation":4,"creationTimestamp":"2018-04-19T20:56:06Z","labels":{"app":"request-logger"},"annotations":{"openshift.io/generated-by":"OpenShiftWebConsole"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["request-logger"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-prod","name":"request-logger:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-prod/request-logger@sha256:fceab52c55a53e264e1a651b76fa4094ad9c6d786366a4a01ae6cf20bc3febde"}},{"type":"ConfigChange"}],"replicas":1,"revisionHistoryLimit":10,"test":false,"selector":{"deploymentconfig":"request-logger"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"request-logger","deploymentconfig":"request-logger"}},"spec":{"volumes":[{"name":"volume-8g9sa","configMap":{"name":"reques-logger","items":[{"key":"reques_logger.py","path":"request_logger.py"}],"defaultMode":420}}],"containers":[{"name":"request-logger","image":"172.50.0.2:5000/mem-tfrs-prod/request-logger@sha256:fceab52c55a53e264e1a651b76fa4094ad9c6d786366a4a01ae6cf20bc3febde","ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"}},"volumeMounts":[{"name":"volume-8g9sa","mountPath":"/opt/app-root/src"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":2,"observedGeneration":4,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-prod/request-logger@sha256:fceab52c55a53e264e1a651b76fa4094ad9c6d786366a4a01ae6cf20bc3febde"}}}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-04-19T20:56:06Z","lastTransitionTime":"2018-04-19T20:56:06Z","message":"Deployment config does not have minimum availability."},{"type":"Progressing","status":"False","lastUpdateTime":"2018-04-19T21:06:13Z","lastTransitionTime":"2018-04-19T21:06:13Z","reason":"ProgressDeadlineExceeded","message":"replication controller \"request-logger-1\" has failed progressing"}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: request-logger
      openshift.io/deployment-config.name: request-logger
    name: request-logger-2
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: request-logger
      uid: 142716ad-4414-11e8-9a98-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: request-logger-2
      deploymentconfig: request-logger
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "2"
          openshift.io/deployment-config.name: request-logger
          openshift.io/deployment.name: request-logger-2
        creationTimestamp: null
        labels:
          app: request-logger
          deployment: request-logger-2
          deploymentconfig: request-logger
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-prod/request-logger@sha256:fceab52c55a53e264e1a651b76fa4094ad9c6d786366a4a01ae6cf20bc3febde
          imagePullPolicy: Always
          name: request-logger
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/app-root/src
            name: volume-8g9sa
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: reques_logger.py
              path: request_logger.py
            name: reques-logger
          name: volume-8g9sa
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-20 14:08:32 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-20 14:08:26 -0700 PDT
      openshift.io/deployer-pod.name: request-logger-3-deploy
      openshift.io/deployment-config.latest-version: "3"
      openshift.io/deployment-config.name: request-logger
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"request-logger","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/request-logger","uid":"142716ad-4414-11e8-9a98-0050568348cc","resourceVersion":"430957261","generation":9,"creationTimestamp":"2018-04-19T20:56:06Z","labels":{"app":"request-logger"},"annotations":{"openshift.io/generated-by":"OpenShiftWebConsole"}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["request-logger"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"request-logger:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/request-logger@sha256:bd2071b048447812c46073e247953b7747240033765e60c9ebf3604060566403"}},{"type":"ConfigChange"}],"replicas":0,"revisionHistoryLimit":10,"test":false,"selector":{"deploymentconfig":"request-logger"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"request-logger","deploymentconfig":"request-logger"}},"spec":{"volumes":[{"name":"volume-8g9sa","configMap":{"name":"reques-logger","items":[{"key":"reques_logger.py","path":"request_logger.py"}],"defaultMode":420}}],"containers":[{"name":"request-logger","image":"172.50.0.2:5000/mem-tfrs-tools/request-logger@sha256:bd2071b048447812c46073e247953b7747240033765e60c9ebf3604060566403","ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{"limits":{"cpu":"250m","memory":"256Mi"}},"volumeMounts":[{"name":"volume-8g9sa","mountPath":"/opt/app-root/src"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":3,"observedGeneration":9,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/request-logger@sha256:bd2071b048447812c46073e247953b7747240033765e60c9ebf3604060566403"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-19T21:15:48Z","lastTransitionTime":"2018-04-19T21:15:42Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"request-logger-2\" successfully rolled out"},{"type":"Available","status":"False","lastUpdateTime":"2018-04-20T21:07:25Z","lastTransitionTime":"2018-04-20T21:07:25Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      app: request-logger
      openshift.io/deployment-config.name: request-logger
    name: request-logger-3
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: request-logger
      uid: 142716ad-4414-11e8-9a98-0050568348cc
  spec:
    replicas: 1
    selector:
      deployment: request-logger-3
      deploymentconfig: request-logger
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "3"
          openshift.io/deployment-config.name: request-logger
          openshift.io/deployment.name: request-logger-3
        creationTimestamp: null
        labels:
          app: request-logger
          deployment: request-logger-3
          deploymentconfig: request-logger
      spec:
        containers:
        - image: 172.50.0.2:5000/mem-tfrs-tools/request-logger@sha256:bd2071b048447812c46073e247953b7747240033765e60c9ebf3604060566403
          imagePullPolicy: Always
          name: request-logger
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/app-root/src
            name: volume-8g9sa
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: reques_logger.py
              path: request_logger.py
            name: reques-logger
          name: volume-8g9sa
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.name: schema-spy-1-deploy
      openshift.io/deployment-config.latest-version: "1"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"schema-spy","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/schema-spy","uid":"ba26c687-d617-11e7-9b28-0050568379a2","resourceVersion":"277101186","generation":3,"creationTimestamp":"2017-11-30T21:45:05Z","annotations":{"description":"Defines how to deploy the container."}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["schema-spy"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:30ba9d203cc30dd60a016e1744877909b1670d15a35997198980c0119b77fd91"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"schema-spy"},"template":{"metadata":{"name":"schema-spy","creationTimestamp":null,"labels":{"name":"schema-spy"}},"spec":{"containers":[{"name":"schema-spy","image":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:30ba9d203cc30dd60a016e1744877909b1670d15a35997198980c0119b77fd91","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"username"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"password"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":1,"observedGeneration":2,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"}}}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2017-11-30T21:45:05Z","lastTransitionTime":"2017-11-30T21:45:05Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: schema-spy
    name: schema-spy-1
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: schema-spy
      uid: ba26c687-d617-11e7-9b28-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: schema-spy-1
      deploymentconfig: schema-spy
      name: schema-spy
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "1"
          openshift.io/deployment-config.name: schema-spy
          openshift.io/deployment.name: schema-spy-1
        creationTimestamp: null
        labels:
          deployment: schema-spy-1
          deploymentconfig: schema-spy
          name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:30ba9d203cc30dd60a016e1744877909b1670d15a35997198980c0119b77fd91
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.name: schema-spy-2-deploy
      openshift.io/deployment-config.latest-version: "2"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"schema-spy","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/schema-spy","uid":"ba26c687-d617-11e7-9b28-0050568379a2","resourceVersion":"277688337","generation":5,"creationTimestamp":"2017-11-30T21:45:05Z","annotations":{"description":"Defines how to deploy the container."}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["schema-spy"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:34a41b022f6df5242c7dbfdc29121f63261f7daba26b79ac375d47116b8b9cea"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"schema-spy"},"template":{"metadata":{"name":"schema-spy","creationTimestamp":null,"labels":{"name":"schema-spy"}},"spec":{"containers":[{"name":"schema-spy","image":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:34a41b022f6df5242c7dbfdc29121f63261f7daba26b79ac375d47116b8b9cea","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"username"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"password"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":2,"observedGeneration":4,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2017-11-30T21:46:52Z","lastTransitionTime":"2017-11-30T21:46:52Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2017-11-30T21:46:54Z","lastTransitionTime":"2017-11-30T21:46:12Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"schema-spy-1\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: schema-spy
    name: schema-spy-2
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: schema-spy
      uid: ba26c687-d617-11e7-9b28-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: schema-spy-2
      deploymentconfig: schema-spy
      name: schema-spy
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "2"
          openshift.io/deployment-config.name: schema-spy
          openshift.io/deployment.name: schema-spy-2
        creationTimestamp: null
        labels:
          deployment: schema-spy-2
          deploymentconfig: schema-spy
          name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:34a41b022f6df5242c7dbfdc29121f63261f7daba26b79ac375d47116b8b9cea
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.name: schema-spy-3-deploy
      openshift.io/deployment-config.latest-version: "3"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"schema-spy","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/schema-spy","uid":"ba26c687-d617-11e7-9b28-0050568379a2","resourceVersion":"277758405","generation":7,"creationTimestamp":"2017-11-30T21:45:05Z","annotations":{"description":"Defines how to deploy the container."}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["schema-spy"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:43e43d8b988b50b5eb6b09fdb34c350e3efa1500108d208c0f754f7217f19274"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"schema-spy"},"template":{"metadata":{"name":"schema-spy","creationTimestamp":null,"labels":{"name":"schema-spy"}},"spec":{"containers":[{"name":"schema-spy","image":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:43e43d8b988b50b5eb6b09fdb34c350e3efa1500108d208c0f754f7217f19274","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"username"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"password"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":3,"observedGeneration":6,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2017-11-30T21:46:52Z","lastTransitionTime":"2017-11-30T21:46:52Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2017-12-01T22:40:12Z","lastTransitionTime":"2017-12-01T22:40:09Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"schema-spy-2\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: schema-spy
    name: schema-spy-3
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: schema-spy
      uid: ba26c687-d617-11e7-9b28-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: schema-spy-3
      deploymentconfig: schema-spy
      name: schema-spy
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "3"
          openshift.io/deployment-config.name: schema-spy
          openshift.io/deployment.name: schema-spy-3
        creationTimestamp: null
        labels:
          deployment: schema-spy-3
          deploymentconfig: schema-spy
          name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:43e43d8b988b50b5eb6b09fdb34c350e3efa1500108d208c0f754f7217f19274
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "0"
      openshift.io/deployer-pod.name: schema-spy-4-deploy
      openshift.io/deployment-config.latest-version: "4"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"schema-spy","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/schema-spy","uid":"ba26c687-d617-11e7-9b28-0050568379a2","resourceVersion":"327770071","generation":13,"creationTimestamp":"2017-11-30T21:45:05Z","annotations":{"description":"Defines how to deploy the container."}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["schema-spy"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"schema-spy"},"template":{"metadata":{"name":"schema-spy","creationTimestamp":null,"labels":{"name":"schema-spy"}},"spec":{"containers":[{"name":"schema-spy","image":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"username"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"postgresql","key":"password"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":4,"observedGeneration":12,"replicas":1,"updatedReplicas":1,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2017-12-02T00:54:35Z","lastTransitionTime":"2017-12-02T00:54:32Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"schema-spy-3\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-01-25T19:02:51Z","lastTransitionTime":"2018-01-25T19:02:51Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: schema-spy
    name: schema-spy-4
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: schema-spy
      uid: ba26c687-d617-11e7-9b28-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: schema-spy-4
      deploymentconfig: schema-spy
      name: schema-spy
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "4"
          openshift.io/deployment-config.name: schema-spy
          openshift.io/deployment.name: schema-spy-4
        creationTimestamp: null
        labels:
          deployment: schema-spy-4
          deploymentconfig: schema-spy
          name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/original-replicas: "1"
      openshift.io/deployer-pod.name: schema-spy-5-deploy
      openshift.io/deployment-config.latest-version: "5"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"schema-spy","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/schema-spy","uid":"ba26c687-d617-11e7-9b28-0050568379a2","resourceVersion":"327981395","generation":16,"creationTimestamp":"2017-11-30T21:45:05Z","annotations":{"description":"Defines how to deploy the container."}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["schema-spy"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf"}},{"type":"ConfigChange"}],"replicas":0,"test":false,"selector":{"name":"schema-spy"},"template":{"metadata":{"name":"schema-spy","creationTimestamp":null,"labels":{"name":"schema-spy"}},"spec":{"containers":[{"name":"schema-spy","image":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"memory":"512Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":5,"observedGeneration":15,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-01-30T17:31:01Z","lastTransitionTime":"2018-01-30T17:30:57Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"schema-spy-4\" successfully rolled out"},{"type":"Available","status":"False","lastUpdateTime":"2018-01-30T20:01:28Z","lastTransitionTime":"2018-01-30T20:01:28Z","message":"Deployment config does not have minimum availability."}]}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: schema-spy
    name: schema-spy-5
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: schema-spy
      uid: ba26c687-d617-11e7-9b28-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: schema-spy-5
      deploymentconfig: schema-spy
      name: schema-spy
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "5"
          openshift.io/deployment-config.name: schema-spy
          openshift.io/deployment.name: schema-spy-5
        creationTimestamp: null
        labels:
          deployment: schema-spy-5
          deploymentconfig: schema-spy
          name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/desired-replicas: "1"
      kubectl.kubernetes.io/update-source-id: schema-spy-5:51e0000f-060d-11e8-b39a-0050568348cc
      openshift.io/deployer-pod.created-at: 2018-04-06 14:29:05 -0700 PDT
      openshift.io/deployer-pod.name: schema-spy-6-deploy
      openshift.io/deployment-config.latest-version: "6"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.cancelled: "true"
      openshift.io/deployment.phase: Failed
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: newer deployment was found running
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"schema-spy","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/schema-spy","uid":"ba26c687-d617-11e7-9b28-0050568379a2","resourceVersion":"407242253","generation":22,"creationTimestamp":"2017-11-30T21:45:05Z","annotations":{"description":"Defines how to deploy the container."}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["schema-spy"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"schema-spy"},"template":{"metadata":{"name":"schema-spy","creationTimestamp":null,"labels":{"name":"schema-spy"}},"spec":{"containers":[{"name":"schema-spy","image":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"cpu":"200m","memory":"256Mi"},"requests":{"memory":"128Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":6,"observedGeneration":22,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-01-30T22:31:42Z","lastTransitionTime":"2018-01-30T22:31:42Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"schema-spy-5\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-04-05T08:34:06Z","lastTransitionTime":"2018-04-05T08:34:06Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: schema-spy
    name: schema-spy-6
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: schema-spy
      uid: ba26c687-d617-11e7-9b28-0050568379a2
  spec:
    replicas: 0
    selector:
      deployment: schema-spy-6
      deploymentconfig: schema-spy
      name: schema-spy
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "6"
          openshift.io/deployment-config.name: schema-spy
          openshift.io/deployment.name: schema-spy-6
        creationTimestamp: null
        labels:
          deployment: schema-spy-6
          deploymentconfig: schema-spy
          name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-06 14:35:52 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-06 14:34:54 -0700 PDT
      openshift.io/deployer-pod.name: schema-spy-7-deploy
      openshift.io/deployment-config.latest-version: "7"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: ""
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"schema-spy","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/schema-spy","uid":"ba26c687-d617-11e7-9b28-0050568379a2","resourceVersion":"407250692","generation":23,"creationTimestamp":"2017-11-30T21:45:05Z","annotations":{"description":"Defines how to deploy the container."}},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["schema-spy"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"schema-spy:latest"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"schema-spy"},"template":{"metadata":{"name":"schema-spy","creationTimestamp":null,"labels":{"name":"schema-spy"}},"spec":{"containers":[{"name":"schema-spy","image":"172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"POSTGRESQL_DATABASE","value":"tfrs"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"cpu":"500m","memory":"512Mi"},"requests":{"memory":"256Mi"}},"livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":3,"timeoutSeconds":3000,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":7,"observedGeneration":23,"replicas":2,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":1,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-05T08:34:06Z","lastTransitionTime":"2018-04-05T08:34:06Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-06T21:29:13Z","lastTransitionTime":"2018-04-06T21:29:13Z","reason":"ReplicationControllerUpdated","message":"replication controller \"schema-spy-6\" is progressing"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: schema-spy
    name: schema-spy-7
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: schema-spy
      uid: ba26c687-d617-11e7-9b28-0050568379a2
  spec:
    replicas: 1
    selector:
      deployment: schema-spy-7
      deploymentconfig: schema-spy
      name: schema-spy
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "7"
          openshift.io/deployment-config.name: schema-spy
          openshift.io/deployment.name: schema-spy-7
        creationTimestamp: null
        labels:
          deployment: schema-spy-7
          deploymentconfig: schema-spy
          name: schema-spy
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: POSTGRESQL_DATABASE
            value: tfrs
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          name: schema-spy
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3000
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-06 15:51:27 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-06 15:50:56 -0700 PDT
      openshift.io/deployer-pod.name: tfrs-64-deploy
      openshift.io/deployment-config.latest-version: "64"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/tfrs","uid":"1327a9b1-fae0-11e6-8d55-0050568348cc","resourceVersion":"407361242","generation":101,"creationTimestamp":"2017-02-24T22:24:58Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:6b884cd612a062862928f8c3f846c0884372d3f8332993a395603522fad0a41d"}},{"type":"ConfigChange"}],"replicas":0,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:6b884cd612a062862928f8c3f846c0884372d3f8332993a395603522fad0a41d","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"cpu":"1","memory":"8Gi"},"requests":{"cpu":"100m","memory":"256Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":64,"observedGeneration":101,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-04-06T22:48:25Z","lastTransitionTime":"2018-04-06T22:48:25Z","message":"Deployment config does not have minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-06T22:50:33Z","lastTransitionTime":"2018-04-06T22:50:33Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-63\" successfully rolled out"}]}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-64
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 1327a9b1-fae0-11e6-8d55-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-64
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "64"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-64
        creationTimestamp: null
        labels:
          deployment: tfrs-64
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:6b884cd612a062862928f8c3f846c0884372d3f8332993a395603522fad0a41d
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "1"
              memory: 8Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-06 15:55:54 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-06 15:55:40 -0700 PDT
      openshift.io/deployer-pod.name: tfrs-65-deploy
      openshift.io/deployment-config.latest-version: "65"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/tfrs","uid":"1327a9b1-fae0-11e6-8d55-0050568348cc","resourceVersion":"407367305","generation":104,"creationTimestamp":"2017-02-24T22:24:58Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:6b884cd612a062862928f8c3f846c0884372d3f8332993a395603522fad0a41d"}},{"type":"ConfigChange"}],"replicas":0,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:6b884cd612a062862928f8c3f846c0884372d3f8332993a395603522fad0a41d","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"cpu":"1","memory":"4Gi"},"requests":{"cpu":"100m","memory":"256Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":65,"observedGeneration":103,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-04-06T22:48:25Z","lastTransitionTime":"2018-04-06T22:48:25Z","message":"Deployment config does not have minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-06T22:51:28Z","lastTransitionTime":"2018-04-06T22:51:28Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-64\" successfully rolled out"}]}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-65
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 1327a9b1-fae0-11e6-8d55-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-65
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "65"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-65
        creationTimestamp: null
        labels:
          deployment: tfrs-65
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:6b884cd612a062862928f8c3f846c0884372d3f8332993a395603522fad0a41d
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "1"
              memory: 4Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-09 15:18:56 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-09 15:18:43 -0700 PDT
      openshift.io/deployer-pod.name: tfrs-66-deploy
      openshift.io/deployment-config.latest-version: "66"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/tfrs","uid":"1327a9b1-fae0-11e6-8d55-0050568348cc","resourceVersion":"413029572","generation":106,"creationTimestamp":"2017-02-24T22:24:58Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:469481e2be6feb75369919143e4127021310a9ef48bda14b99570c8d9c98b0b6"}},{"type":"ConfigChange"}],"replicas":0,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:469481e2be6feb75369919143e4127021310a9ef48bda14b99570c8d9c98b0b6","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"cpu":"1","memory":"4Gi"},"requests":{"cpu":"100m","memory":"256Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":66,"observedGeneration":106,"replicas":0,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:469481e2be6feb75369919143e4127021310a9ef48bda14b99570c8d9c98b0b6"}}}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-04-06T22:48:25Z","lastTransitionTime":"2018-04-06T22:48:25Z","message":"Deployment config does not have minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-06T22:55:55Z","lastTransitionTime":"2018-04-06T22:55:55Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-65\" successfully rolled out"}]}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-66
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 1327a9b1-fae0-11e6-8d55-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-66
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "66"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-66
        creationTimestamp: null
        labels:
          deployment: tfrs-66
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:469481e2be6feb75369919143e4127021310a9ef48bda14b99570c8d9c98b0b6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "1"
              memory: 4Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      kubectl.kubernetes.io/desired-replicas: "1"
      openshift.io/deployer-pod.created-at: 2018-04-11 15:04:18 -0700 PDT
      openshift.io/deployer-pod.name: tfrs-69-deploy
      openshift.io/deployment-config.latest-version: "69"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.cancelled: "true"
      openshift.io/deployment.phase: Failed
      openshift.io/deployment.replicas: "0"
      openshift.io/deployment.status-reason: newer deployment was found running
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/tfrs","uid":"1327a9b1-fae0-11e6-8d55-0050568348cc","resourceVersion":"416312023","generation":114,"creationTimestamp":"2017-02-24T22:24:58Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:555652412b6ed157b29d947115bfba44fd021fa8e1829bb8fbc68cde1e770878"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:555652412b6ed157b29d947115bfba44fd021fa8e1829bb8fbc68cde1e770878","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"cpu":"1","memory":"4Gi"},"requests":{"cpu":"100m","memory":"256Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":69,"observedGeneration":114,"replicas":1,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":1,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:555652412b6ed157b29d947115bfba44fd021fa8e1829bb8fbc68cde1e770878"}}}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-04-06T22:48:25Z","lastTransitionTime":"2018-04-06T22:48:25Z","message":"Deployment config does not have minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-11T22:02:50Z","lastTransitionTime":"2018-04-11T22:02:50Z","reason":"ReplicationControllerUpdated","message":"replication controller \"tfrs-68\" is progressing"}]}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-69
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 1327a9b1-fae0-11e6-8d55-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-69
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "69"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-69
        creationTimestamp: null
        labels:
          deployment: tfrs-69
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:555652412b6ed157b29d947115bfba44fd021fa8e1829bb8fbc68cde1e770878
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "1"
              memory: 4Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-11 15:06:17 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-11 15:05:19 -0700 PDT
      openshift.io/deployer-pod.name: tfrs-70-deploy
      openshift.io/deployment-config.latest-version: "70"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: config change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/tfrs","uid":"1327a9b1-fae0-11e6-8d55-0050568348cc","resourceVersion":"416313219","generation":115,"creationTimestamp":"2017-02-24T22:24:58Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:555652412b6ed157b29d947115bfba44fd021fa8e1829bb8fbc68cde1e770878"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:555652412b6ed157b29d947115bfba44fd021fa8e1829bb8fbc68cde1e770878","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG","value":"/opt/app-root/src/gunicorn.cfg"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"cpu":"1","memory":"4Gi"},"requests":{"cpu":"100m","memory":"256Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":70,"observedGeneration":115,"replicas":1,"updatedReplicas":0,"availableReplicas":0,"unavailableReplicas":1,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2018-04-06T22:48:25Z","lastTransitionTime":"2018-04-06T22:48:25Z","message":"Deployment config does not have minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-11T22:04:28Z","lastTransitionTime":"2018-04-11T22:04:28Z","reason":"ReplicationControllerUpdated","message":"replication controller \"tfrs-69\" is progressing"}]}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-70
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 1327a9b1-fae0-11e6-8d55-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-70
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "70"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-70
        creationTimestamp: null
        labels:
          deployment: tfrs-70
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
            value: /opt/app-root/src/gunicorn.cfg
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:555652412b6ed157b29d947115bfba44fd021fa8e1829bb8fbc68cde1e770878
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "1"
              memory: 4Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-12 14:02:25 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-12 14:01:16 -0700 PDT
      openshift.io/deployer-pod.name: tfrs-71-deploy
      openshift.io/deployment-config.latest-version: "71"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/tfrs","uid":"1327a9b1-fae0-11e6-8d55-0050568348cc","resourceVersion":"417824919","generation":116,"creationTimestamp":"2017-02-24T22:24:58Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:f1d5165df31951c6b512d85e02673c7641c24da4da77a66a2d0c35c2ad1c3654"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:f1d5165df31951c6b512d85e02673c7641c24da4da77a66a2d0c35c2ad1c3654","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG","value":"/opt/app-root/src/gunicorn.cfg"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"cpu":"1","memory":"4Gi"},"requests":{"cpu":"100m","memory":"256Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":71,"observedGeneration":116,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:f1d5165df31951c6b512d85e02673c7641c24da4da77a66a2d0c35c2ad1c3654"}}}]},"conditions":[{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-11T22:06:19Z","lastTransitionTime":"2018-04-11T22:05:37Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-70\" successfully rolled out"},{"type":"Available","status":"True","lastUpdateTime":"2018-04-12T19:47:08Z","lastTransitionTime":"2018-04-12T19:47:08Z","message":"Deployment config has minimum availability."}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-71
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 1327a9b1-fae0-11e6-8d55-0050568348cc
  spec:
    replicas: 0
    selector:
      deployment: tfrs-71
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "71"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-71
        creationTimestamp: null
        labels:
          deployment: tfrs-71
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
            value: /opt/app-root/src/gunicorn.cfg
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:f1d5165df31951c6b512d85e02673c7641c24da4da77a66a2d0c35c2ad1c3654
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "1"
              memory: 4Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: ReplicationController
  metadata:
    annotations:
      openshift.io/deployer-pod.completed-at: 2018-04-19 13:32:59 -0700 PDT
      openshift.io/deployer-pod.created-at: 2018-04-19 13:31:55 -0700 PDT
      openshift.io/deployer-pod.name: tfrs-72-deploy
      openshift.io/deployment-config.latest-version: "72"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.phase: Complete
      openshift.io/deployment.replicas: "1"
      openshift.io/deployment.status-reason: image change
      openshift.io/encoded-deployment-config: |
        {"kind":"DeploymentConfig","apiVersion":"v1","metadata":{"name":"tfrs","namespace":"mem-tfrs-prod","selfLink":"/apis/apps.openshift.io/v1/namespaces/mem-tfrs-prod/deploymentconfigs/tfrs","uid":"1327a9b1-fae0-11e6-8d55-0050568348cc","resourceVersion":"428984093","generation":117,"creationTimestamp":"2017-02-24T22:24:58Z","labels":{"template":"tfrs-app-environment"},"annotations":{"description":"Defines how to deploy the application server"}},"spec":{"strategy":{"type":"Recreate","recreateParams":{"timeoutSeconds":600,"mid":{"failurePolicy":"Abort","execNewPod":{"command":["/bin/sh","-c","python manage.py migrate"],"containerName":"tfrs-app"}}},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ImageChange","imageChangeParams":{"automatic":true,"containerNames":["tfrs-app"],"from":{"kind":"ImageStreamTag","namespace":"mem-tfrs-tools","name":"tfrs:prod"},"lastTriggeredImage":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:0618d56334a7ae915f0156d61a96f350115f134ed5504a9e24e9eed064758847"}},{"type":"ConfigChange"}],"replicas":1,"test":false,"selector":{"name":"tfrs"},"template":{"metadata":{"name":"tfrs","creationTimestamp":null,"labels":{"name":"tfrs"}},"spec":{"containers":[{"name":"tfrs-app","image":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:0618d56334a7ae915f0156d61a96f350115f134ed5504a9e24e9eed064758847","ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"DATABASE_SERVICE_NAME","value":"postgresql"},{"name":"DATABASE_ENGINE","value":"postgresql"},{"name":"DATABASE_NAME","value":"tfrs"},{"name":"APP_CONFIG","value":"/opt/app-root/src/gunicorn.cfg"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_USER"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"tfrs-postgresql","key":"DATABASE_PASSWORD"}}}],"resources":{"limits":{"cpu":"1","memory":"4Gi"},"requests":{"cpu":"100m","memory":"256Mi"}},"livenessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":30,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":72,"observedGeneration":117,"replicas":1,"updatedReplicas":0,"availableReplicas":1,"unavailableReplicas":0,"details":{"message":"image change","causes":[{"type":"ImageChange","imageTrigger":{"from":{"kind":"DockerImage","name":"172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:0618d56334a7ae915f0156d61a96f350115f134ed5504a9e24e9eed064758847"}}}]},"conditions":[{"type":"Available","status":"True","lastUpdateTime":"2018-04-12T21:02:24Z","lastTransitionTime":"2018-04-12T21:02:24Z","message":"Deployment config has minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2018-04-12T21:02:25Z","lastTransitionTime":"2018-04-12T21:01:44Z","reason":"NewReplicationControllerAvailable","message":"replication controller \"tfrs-71\" successfully rolled out"}],"readyReplicas":1}}
    creationTimestamp: null
    generation: 1
    labels:
      openshift.io/deployment-config.name: tfrs
      template: tfrs-app-environment
    name: tfrs-72
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: DeploymentConfig
      name: tfrs
      uid: 1327a9b1-fae0-11e6-8d55-0050568348cc
  spec:
    replicas: 1
    selector:
      deployment: tfrs-72
      deploymentconfig: tfrs
      name: tfrs
    template:
      metadata:
        annotations:
          openshift.io/deployment-config.latest-version: "72"
          openshift.io/deployment-config.name: tfrs
          openshift.io/deployment.name: tfrs-72
        creationTimestamp: null
        labels:
          deployment: tfrs-72
          deploymentconfig: tfrs
          name: tfrs
      spec:
        containers:
        - env:
          - name: DATABASE_SERVICE_NAME
            value: postgresql
          - name: DATABASE_ENGINE
            value: postgresql
          - name: DATABASE_NAME
            value: tfrs
          - name: APP_CONFIG
            value: /opt/app-root/src/gunicorn.cfg
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: DATABASE_USER
                name: tfrs-postgresql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DATABASE_PASSWORD
                name: tfrs-postgresql
          image: 172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:0618d56334a7ae915f0156d61a96f350115f134ed5504a9e24e9eed064758847
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: tfrs-app
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "1"
              memory: 4Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    replicas: 0
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    labels:
      template: tfrs-app-environment
    name: api
  spec:
    host: prod-lowcarbonfuels.pathfinder.bcgov
    path: /api
    port:
      targetPort: web
    tls:
      certificate: |
        -----BEGIN CERTIFICATE-----
        MIIEoTCCAy0CCQChZjkgDBrgvzANBgkqhkiG9w0BAQUFADCBtTELMAkGA1UEBhMC
        Q0ExGTAXBgNVBAgMEEJyaXRpc2ggQ29sdW1iaWExETAPBgNVBAcMCFZpY3Rvcmlh
        MTcwNQYDVQQKDC5Hb3Zlcm5tZW50IG9mIHRoZSBQcm92aW5jZSBvZiBCcml0aXNo
        IENvbHVtYmlhMRAwDgYDVQQLDAdGTE5ST1JEMS0wKwYDVQQDDCRwcm9kLWxvd2Nh
        cmJvbmZ1ZWxzLnBhdGhmaW5kZXIuYmNnb3YwIBcNMTgwMzE2MTY1NTA0WhgPMjEx
        ODAyMjAxNjU1MDRaMIG1MQswCQYDVQQGEwJDQTEZMBcGA1UECAwQQnJpdGlzaCBD
        b2x1bWJpYTERMA8GA1UEBwwIVmljdG9yaWExNzA1BgNVBAoMLkdvdmVybm1lbnQg
        b2YgdGhlIFByb3ZpbmNlIG9mIEJyaXRpc2ggQ29sdW1iaWExEDAOBgNVBAsMB0ZM
        TlJPUkQxLTArBgNVBAMMJHByb2QtbG93Y2FyYm9uZnVlbHMucGF0aGZpbmRlci5i
        Y2dvdjCCAX0wDQYJKoZIhvcNAQEBBQADggFqADCCAWUCggFcAXJnPZefF2EbJbeQ
        iswOlnOyV6RYUkccrTKmYxXigocHzkoKrDWwjxKEAh/D7+kZ+f4w9fAsaa0Wb2lv
        0cLaxq/fYh5o57OIslrdwh8ik6+wKKwqzj0KDGQmCodIP8MXJ+KWLCKjpMYoOcA0
        ABzUzlzz3EuxLljbBXNDAzElcOv9I0mt0B7daJjHnprEA8PWsnN6Vql02AOUDLzs
        byc/fmP41plEioBy2ZuAaGKMAN2ZH3a+pPU2yT7CMDvnsCU2S3H53T3lwLl+5scZ
        bV+riXF1gT+2Dhdn1Isn0cj5zsv1SuMk9W9D0sjgaTgylGdn4i8XrdKx0K0Di8O4
        f54xVD8/SufZoclYHe8DcRKHGwaK/mN2L8ubk3wxqfox430dLOPdXRfD51Uorkgk
        M+7X9abH50w16I9jxZmvZCMReNPtTECxlhTixBB3zwfTdE8u95Ug72mzjTUq62nR
        AgMBAAEwDQYJKoZIhvcNAQEFBQADggFdAAERlcUuwpcCtxd3POVeUZaTYUGToo98
        hxcFJ59o3tCgpiKmulW4yWtyQGAQvcd5Tz+3Nu7DFsKEtjFgkgy4MnazOAK8x9Nj
        usW3eIDazgz6d0KHKApwHq74MVk0kuJk/3J9I7fhNj2FeKmahipnraSmzlYb8nIW
        h9oLXrJE8zJNdmtwS11VuKb2cqNzSfUi4uNH7nM/N4OQaRqJJuvfOasQ2qLoKpVE
        zLJHS3nSMyPCJ6pqFoP04r1x3CiF69MaVBGp61Vg+4+VoneTpEGEdPSuds7C2/Ya
        i5XZ1ReN6U+Cd4hstByIhJdOGUD2EfoAWJZrmv+P9+70uNj9DPk9Hvb03DB+J3m4
        3oGpgq1x06/NI/ZG/uUIRx+m4psPyb4NI3sahuswqEk+DXRT8mdecOUW/l5MLdHl
        dXCXsu9wAYnLUk8zckyQsrjJTjlKBagE6rCt2XjzhWe4nIqSwg==
        -----END CERTIFICATE-----
      key: |
        -----BEGIN RSA PRIVATE KEY-----
        MIIGPAIBAAKCAVwBcmc9l58XYRslt5CKzA6Wc7JXpFhSRxytMqZjFeKChwfOSgqs
        NbCPEoQCH8Pv6Rn5/jD18CxprRZvaW/RwtrGr99iHmjns4iyWt3CHyKTr7AorCrO
        PQoMZCYKh0g/wxcn4pYsIqOkxig5wDQAHNTOXPPcS7EuWNsFc0MDMSVw6/0jSa3Q
        Ht1omMeemsQDw9ayc3pWqXTYA5QMvOxvJz9+Y/jWmUSKgHLZm4BoYowA3Zkfdr6k
        9TbJPsIwO+ewJTZLcfndPeXAuX7mxxltX6uJcXWBP7YOF2fUiyfRyPnOy/VK4yT1
        b0PSyOBpODKUZ2fiLxet0rHQrQOLw7h/njFUPz9K59mhyVgd7wNxEocbBor+Y3Yv
        y5uTfDGp+jHjfR0s491dF8PnVSiuSCQz7tf1psfnTDXoj2PFma9kIxF40+1MQLGW
        FOLEEHfPB9N0Ty73lSDvabONNSrradECAwEAAQKCAVss6MuU+JsTEQGPshzCBPrE
        6Fir+nFvYdC2FWpqGt6MlKu0Wnrqv495RTwksdMCxj2DTlhjWF8vt0qm1AHwyCnS
        5Ri2ay28nNRTJBQHRl/1qzwjM8VxrSg3dE1OfboNY19Yn7CWOpUd2X63CRcCZ+Ll
        bkPFgaQG7fdJNFTMvqdkVXrT0hkrxNiLvZhDV4TFV+CnE6wyO5J9TJQGy/vmHFKs
        uFz8lEzeqg4sRnNhj2cZuuraTXqll268XwuWc+UWnuyPltRmf+CeMHaoUdiCZG0L
        r79YoeNSquzaCcDKehuRUh+jCLgdGSpM+6TVuF6tBEZNWy3xWsIxYrh4c8v5Ht21
        sjbQ4LTpayUAA0Zma4+dmDCsqkY9D+f3W0WqLMU8no++G2AmCuuh9lJQw+R0REhe
        q5BIcubOVHFur1VbCDOI8tD0wBZWg9+sVMwEhNKNbIuJP8AmrYdDUS0/6QKBrhqX
        gZl8UUlBFN9DPnWeiX1RX/YtAXqfx9/zmPG4mLiWp5yEjkqEg2Izj3qPaMlYfWWB
        yC0QrJ/0xOArnm1BKksBarpkV8KchxP94NbI/UCahxeWNvIW0f7mSveKHptufiZJ
        wYf/YMMF3ZH3VtxzKfDWKRH14Y8C+fjlY1aqLMcx3BRk5Oeoy5lEwIeP19f3s5Ns
        arTV9I8mTXndv3fi3ZupWCWfNWKqH7NGg1lGpwKBrg3t4UAXaYalsk1Y88hbBEMc
        5/M/UdI9lY/nsRfkBh/N0Vy3ZYmVE75+aqJgkUHob1Rd5zz4qyLWqTyEMcCkENgD
        PnMxWMfyz1GGMKEo/LLGO0DUl9O5I80Wd/g4rsKkbD/EVQUWNzlf7iuN5m7C8Qcp
        gVW8uCPc46bBq001QMbgqDkNLltUL8Mrmq4eb73WQzOn3osPNQjH+tVOefTGNsMe
        XI5gAMSqAI4QqXxSxwKBrhIJWZplvCzXu/SDg8X7tn4Nx+0OMcaewc+hRsgN0WjC
        pwV+05SvtP3Swyr6QrTvFH7ZPJF0keIc/7ydWWP5o1okp+OtU+loiiaBORP2V/CN
        37ub48DowZ8HTSoBwSjkFSSbOm2oRlWBkPwErCHy6yuz1z+ba1a5ShwMWwjZfG3P
        39rlZG3NC+v1ujE428pc9Ky2CNqHlM3TyREz2z7R3kZK4sMB7g/yHHZZCZZwWQKB
        rgnJ3Fw017SGpqlSVGa9B16+ZoX7Pl2XZ44sTLg0RtV8xp74RoOL3sckgX1AjXOa
        ivnnz4N6YJFn9qAPagMtiKS0iuNaj0Bb8rMgsPXgHsznH2asv1FLLsyF+KLX+n/Q
        Gj4pk3GyrfZE4tN6sa+ukMDuuvPsXh7dsKFUQjRMswvPfogxKh2GKNZnwxiPTQlE
        FA+t7WcdtbBJEI1ry6pmzL8LjBGFh6Ssrx0mumQiqwKBrggumK8ichOOwew7AkHm
        FeGfcGlNPZejLDExoXB0k9jqFifyEjqwWsimQJhr2sYGloAXz50RQWbAGk9chZfC
        T6/QXCrn5v3cAV+kYaGklXVga3JFm9LEP4qiS6uay0nKW8XZx8uy5jzIwVjWmnxw
        uP0wwwIIeOfasuPdIyGaPOtzfcMcUtWSXjNpcbFWEfFgxOp3mceiK0UUKOVYskGS
        yjxNFxKqwrYc+P8UIdiXFw==
        -----END RSA PRIVATE KEY-----
      termination: edge
    to:
      kind: Service
      name: backend
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-04-19T20:42:44Z
        status: "True"
        type: Admitted
      host: prod-lowcarbonfuels.pathfinder.bcgov
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    labels:
      template: tfrs-app-environment
    name: main
  spec:
    host: prod-lowcarbonfuels.pathfinder.bcgov
    port:
      targetPort: web
    tls:
      certificate: |
        -----BEGIN CERTIFICATE-----
        MIIEoTCCAy0CCQChZjkgDBrgvzANBgkqhkiG9w0BAQUFADCBtTELMAkGA1UEBhMC
        Q0ExGTAXBgNVBAgMEEJyaXRpc2ggQ29sdW1iaWExETAPBgNVBAcMCFZpY3Rvcmlh
        MTcwNQYDVQQKDC5Hb3Zlcm5tZW50IG9mIHRoZSBQcm92aW5jZSBvZiBCcml0aXNo
        IENvbHVtYmlhMRAwDgYDVQQLDAdGTE5ST1JEMS0wKwYDVQQDDCRwcm9kLWxvd2Nh
        cmJvbmZ1ZWxzLnBhdGhmaW5kZXIuYmNnb3YwIBcNMTgwMzE2MTY1NTA0WhgPMjEx
        ODAyMjAxNjU1MDRaMIG1MQswCQYDVQQGEwJDQTEZMBcGA1UECAwQQnJpdGlzaCBD
        b2x1bWJpYTERMA8GA1UEBwwIVmljdG9yaWExNzA1BgNVBAoMLkdvdmVybm1lbnQg
        b2YgdGhlIFByb3ZpbmNlIG9mIEJyaXRpc2ggQ29sdW1iaWExEDAOBgNVBAsMB0ZM
        TlJPUkQxLTArBgNVBAMMJHByb2QtbG93Y2FyYm9uZnVlbHMucGF0aGZpbmRlci5i
        Y2dvdjCCAX0wDQYJKoZIhvcNAQEBBQADggFqADCCAWUCggFcAXJnPZefF2EbJbeQ
        iswOlnOyV6RYUkccrTKmYxXigocHzkoKrDWwjxKEAh/D7+kZ+f4w9fAsaa0Wb2lv
        0cLaxq/fYh5o57OIslrdwh8ik6+wKKwqzj0KDGQmCodIP8MXJ+KWLCKjpMYoOcA0
        ABzUzlzz3EuxLljbBXNDAzElcOv9I0mt0B7daJjHnprEA8PWsnN6Vql02AOUDLzs
        byc/fmP41plEioBy2ZuAaGKMAN2ZH3a+pPU2yT7CMDvnsCU2S3H53T3lwLl+5scZ
        bV+riXF1gT+2Dhdn1Isn0cj5zsv1SuMk9W9D0sjgaTgylGdn4i8XrdKx0K0Di8O4
        f54xVD8/SufZoclYHe8DcRKHGwaK/mN2L8ubk3wxqfox430dLOPdXRfD51Uorkgk
        M+7X9abH50w16I9jxZmvZCMReNPtTECxlhTixBB3zwfTdE8u95Ug72mzjTUq62nR
        AgMBAAEwDQYJKoZIhvcNAQEFBQADggFdAAERlcUuwpcCtxd3POVeUZaTYUGToo98
        hxcFJ59o3tCgpiKmulW4yWtyQGAQvcd5Tz+3Nu7DFsKEtjFgkgy4MnazOAK8x9Nj
        usW3eIDazgz6d0KHKApwHq74MVk0kuJk/3J9I7fhNj2FeKmahipnraSmzlYb8nIW
        h9oLXrJE8zJNdmtwS11VuKb2cqNzSfUi4uNH7nM/N4OQaRqJJuvfOasQ2qLoKpVE
        zLJHS3nSMyPCJ6pqFoP04r1x3CiF69MaVBGp61Vg+4+VoneTpEGEdPSuds7C2/Ya
        i5XZ1ReN6U+Cd4hstByIhJdOGUD2EfoAWJZrmv+P9+70uNj9DPk9Hvb03DB+J3m4
        3oGpgq1x06/NI/ZG/uUIRx+m4psPyb4NI3sahuswqEk+DXRT8mdecOUW/l5MLdHl
        dXCXsu9wAYnLUk8zckyQsrjJTjlKBagE6rCt2XjzhWe4nIqSwg==
        -----END CERTIFICATE-----
      key: |
        -----BEGIN RSA PRIVATE KEY-----
        MIIGPAIBAAKCAVwBcmc9l58XYRslt5CKzA6Wc7JXpFhSRxytMqZjFeKChwfOSgqs
        NbCPEoQCH8Pv6Rn5/jD18CxprRZvaW/RwtrGr99iHmjns4iyWt3CHyKTr7AorCrO
        PQoMZCYKh0g/wxcn4pYsIqOkxig5wDQAHNTOXPPcS7EuWNsFc0MDMSVw6/0jSa3Q
        Ht1omMeemsQDw9ayc3pWqXTYA5QMvOxvJz9+Y/jWmUSKgHLZm4BoYowA3Zkfdr6k
        9TbJPsIwO+ewJTZLcfndPeXAuX7mxxltX6uJcXWBP7YOF2fUiyfRyPnOy/VK4yT1
        b0PSyOBpODKUZ2fiLxet0rHQrQOLw7h/njFUPz9K59mhyVgd7wNxEocbBor+Y3Yv
        y5uTfDGp+jHjfR0s491dF8PnVSiuSCQz7tf1psfnTDXoj2PFma9kIxF40+1MQLGW
        FOLEEHfPB9N0Ty73lSDvabONNSrradECAwEAAQKCAVss6MuU+JsTEQGPshzCBPrE
        6Fir+nFvYdC2FWpqGt6MlKu0Wnrqv495RTwksdMCxj2DTlhjWF8vt0qm1AHwyCnS
        5Ri2ay28nNRTJBQHRl/1qzwjM8VxrSg3dE1OfboNY19Yn7CWOpUd2X63CRcCZ+Ll
        bkPFgaQG7fdJNFTMvqdkVXrT0hkrxNiLvZhDV4TFV+CnE6wyO5J9TJQGy/vmHFKs
        uFz8lEzeqg4sRnNhj2cZuuraTXqll268XwuWc+UWnuyPltRmf+CeMHaoUdiCZG0L
        r79YoeNSquzaCcDKehuRUh+jCLgdGSpM+6TVuF6tBEZNWy3xWsIxYrh4c8v5Ht21
        sjbQ4LTpayUAA0Zma4+dmDCsqkY9D+f3W0WqLMU8no++G2AmCuuh9lJQw+R0REhe
        q5BIcubOVHFur1VbCDOI8tD0wBZWg9+sVMwEhNKNbIuJP8AmrYdDUS0/6QKBrhqX
        gZl8UUlBFN9DPnWeiX1RX/YtAXqfx9/zmPG4mLiWp5yEjkqEg2Izj3qPaMlYfWWB
        yC0QrJ/0xOArnm1BKksBarpkV8KchxP94NbI/UCahxeWNvIW0f7mSveKHptufiZJ
        wYf/YMMF3ZH3VtxzKfDWKRH14Y8C+fjlY1aqLMcx3BRk5Oeoy5lEwIeP19f3s5Ns
        arTV9I8mTXndv3fi3ZupWCWfNWKqH7NGg1lGpwKBrg3t4UAXaYalsk1Y88hbBEMc
        5/M/UdI9lY/nsRfkBh/N0Vy3ZYmVE75+aqJgkUHob1Rd5zz4qyLWqTyEMcCkENgD
        PnMxWMfyz1GGMKEo/LLGO0DUl9O5I80Wd/g4rsKkbD/EVQUWNzlf7iuN5m7C8Qcp
        gVW8uCPc46bBq001QMbgqDkNLltUL8Mrmq4eb73WQzOn3osPNQjH+tVOefTGNsMe
        XI5gAMSqAI4QqXxSxwKBrhIJWZplvCzXu/SDg8X7tn4Nx+0OMcaewc+hRsgN0WjC
        pwV+05SvtP3Swyr6QrTvFH7ZPJF0keIc/7ydWWP5o1okp+OtU+loiiaBORP2V/CN
        37ub48DowZ8HTSoBwSjkFSSbOm2oRlWBkPwErCHy6yuz1z+ba1a5ShwMWwjZfG3P
        39rlZG3NC+v1ujE428pc9Ky2CNqHlM3TyREz2z7R3kZK4sMB7g/yHHZZCZZwWQKB
        rgnJ3Fw017SGpqlSVGa9B16+ZoX7Pl2XZ44sTLg0RtV8xp74RoOL3sckgX1AjXOa
        ivnnz4N6YJFn9qAPagMtiKS0iuNaj0Bb8rMgsPXgHsznH2asv1FLLsyF+KLX+n/Q
        Gj4pk3GyrfZE4tN6sa+ukMDuuvPsXh7dsKFUQjRMswvPfogxKh2GKNZnwxiPTQlE
        FA+t7WcdtbBJEI1ry6pmzL8LjBGFh6Ssrx0mumQiqwKBrggumK8ichOOwew7AkHm
        FeGfcGlNPZejLDExoXB0k9jqFifyEjqwWsimQJhr2sYGloAXz50RQWbAGk9chZfC
        T6/QXCrn5v3cAV+kYaGklXVga3JFm9LEP4qiS6uay0nKW8XZx8uy5jzIwVjWmnxw
        uP0wwwIIeOfasuPdIyGaPOtzfcMcUtWSXjNpcbFWEfFgxOp3mceiK0UUKOVYskGS
        yjxNFxKqwrYc+P8UIdiXFw==
        -----END RSA PRIVATE KEY-----
      termination: edge
    to:
      kind: Service
      name: client
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-04-19T20:41:58Z
        status: "True"
        type: Admitted
      host: prod-lowcarbonfuels.pathfinder.bcgov
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    name: schema-spy
  spec:
    host: schema-spy-mem-tfrs-prod.pathfinder.gov.bc.ca
    to:
      kind: Service
      name: schema-spy
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2017-11-30T21:45:05Z
        status: "True"
        type: Admitted
      host: schema-spy-mem-tfrs-prod.pathfinder.gov.bc.ca
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    labels:
      app: request-logger
    name: sminfo
  spec:
    host: prod-lowcarbonfuels.pathfinder.bcgov
    path: /sminfo
    port:
      targetPort: 8080-8080
    tls:
      certificate: |
        -----BEGIN CERTIFICATE-----
        MIIEoTCCAy0CCQChZjkgDBrgvzANBgkqhkiG9w0BAQUFADCBtTELMAkGA1UEBhMC
        Q0ExGTAXBgNVBAgMEEJyaXRpc2ggQ29sdW1iaWExETAPBgNVBAcMCFZpY3Rvcmlh
        MTcwNQYDVQQKDC5Hb3Zlcm5tZW50IG9mIHRoZSBQcm92aW5jZSBvZiBCcml0aXNo
        IENvbHVtYmlhMRAwDgYDVQQLDAdGTE5ST1JEMS0wKwYDVQQDDCRwcm9kLWxvd2Nh
        cmJvbmZ1ZWxzLnBhdGhmaW5kZXIuYmNnb3YwIBcNMTgwMzE2MTY1NTA0WhgPMjEx
        ODAyMjAxNjU1MDRaMIG1MQswCQYDVQQGEwJDQTEZMBcGA1UECAwQQnJpdGlzaCBD
        b2x1bWJpYTERMA8GA1UEBwwIVmljdG9yaWExNzA1BgNVBAoMLkdvdmVybm1lbnQg
        b2YgdGhlIFByb3ZpbmNlIG9mIEJyaXRpc2ggQ29sdW1iaWExEDAOBgNVBAsMB0ZM
        TlJPUkQxLTArBgNVBAMMJHByb2QtbG93Y2FyYm9uZnVlbHMucGF0aGZpbmRlci5i
        Y2dvdjCCAX0wDQYJKoZIhvcNAQEBBQADggFqADCCAWUCggFcAXJnPZefF2EbJbeQ
        iswOlnOyV6RYUkccrTKmYxXigocHzkoKrDWwjxKEAh/D7+kZ+f4w9fAsaa0Wb2lv
        0cLaxq/fYh5o57OIslrdwh8ik6+wKKwqzj0KDGQmCodIP8MXJ+KWLCKjpMYoOcA0
        ABzUzlzz3EuxLljbBXNDAzElcOv9I0mt0B7daJjHnprEA8PWsnN6Vql02AOUDLzs
        byc/fmP41plEioBy2ZuAaGKMAN2ZH3a+pPU2yT7CMDvnsCU2S3H53T3lwLl+5scZ
        bV+riXF1gT+2Dhdn1Isn0cj5zsv1SuMk9W9D0sjgaTgylGdn4i8XrdKx0K0Di8O4
        f54xVD8/SufZoclYHe8DcRKHGwaK/mN2L8ubk3wxqfox430dLOPdXRfD51Uorkgk
        M+7X9abH50w16I9jxZmvZCMReNPtTECxlhTixBB3zwfTdE8u95Ug72mzjTUq62nR
        AgMBAAEwDQYJKoZIhvcNAQEFBQADggFdAAERlcUuwpcCtxd3POVeUZaTYUGToo98
        hxcFJ59o3tCgpiKmulW4yWtyQGAQvcd5Tz+3Nu7DFsKEtjFgkgy4MnazOAK8x9Nj
        usW3eIDazgz6d0KHKApwHq74MVk0kuJk/3J9I7fhNj2FeKmahipnraSmzlYb8nIW
        h9oLXrJE8zJNdmtwS11VuKb2cqNzSfUi4uNH7nM/N4OQaRqJJuvfOasQ2qLoKpVE
        zLJHS3nSMyPCJ6pqFoP04r1x3CiF69MaVBGp61Vg+4+VoneTpEGEdPSuds7C2/Ya
        i5XZ1ReN6U+Cd4hstByIhJdOGUD2EfoAWJZrmv+P9+70uNj9DPk9Hvb03DB+J3m4
        3oGpgq1x06/NI/ZG/uUIRx+m4psPyb4NI3sahuswqEk+DXRT8mdecOUW/l5MLdHl
        dXCXsu9wAYnLUk8zckyQsrjJTjlKBagE6rCt2XjzhWe4nIqSwg==
        -----END CERTIFICATE-----
      insecureEdgeTerminationPolicy: Allow
      key: |
        -----BEGIN RSA PRIVATE KEY-----
        MIIGPAIBAAKCAVwBcmc9l58XYRslt5CKzA6Wc7JXpFhSRxytMqZjFeKChwfOSgqs
        NbCPEoQCH8Pv6Rn5/jD18CxprRZvaW/RwtrGr99iHmjns4iyWt3CHyKTr7AorCrO
        PQoMZCYKh0g/wxcn4pYsIqOkxig5wDQAHNTOXPPcS7EuWNsFc0MDMSVw6/0jSa3Q
        Ht1omMeemsQDw9ayc3pWqXTYA5QMvOxvJz9+Y/jWmUSKgHLZm4BoYowA3Zkfdr6k
        9TbJPsIwO+ewJTZLcfndPeXAuX7mxxltX6uJcXWBP7YOF2fUiyfRyPnOy/VK4yT1
        b0PSyOBpODKUZ2fiLxet0rHQrQOLw7h/njFUPz9K59mhyVgd7wNxEocbBor+Y3Yv
        y5uTfDGp+jHjfR0s491dF8PnVSiuSCQz7tf1psfnTDXoj2PFma9kIxF40+1MQLGW
        FOLEEHfPB9N0Ty73lSDvabONNSrradECAwEAAQKCAVss6MuU+JsTEQGPshzCBPrE
        6Fir+nFvYdC2FWpqGt6MlKu0Wnrqv495RTwksdMCxj2DTlhjWF8vt0qm1AHwyCnS
        5Ri2ay28nNRTJBQHRl/1qzwjM8VxrSg3dE1OfboNY19Yn7CWOpUd2X63CRcCZ+Ll
        bkPFgaQG7fdJNFTMvqdkVXrT0hkrxNiLvZhDV4TFV+CnE6wyO5J9TJQGy/vmHFKs
        uFz8lEzeqg4sRnNhj2cZuuraTXqll268XwuWc+UWnuyPltRmf+CeMHaoUdiCZG0L
        r79YoeNSquzaCcDKehuRUh+jCLgdGSpM+6TVuF6tBEZNWy3xWsIxYrh4c8v5Ht21
        sjbQ4LTpayUAA0Zma4+dmDCsqkY9D+f3W0WqLMU8no++G2AmCuuh9lJQw+R0REhe
        q5BIcubOVHFur1VbCDOI8tD0wBZWg9+sVMwEhNKNbIuJP8AmrYdDUS0/6QKBrhqX
        gZl8UUlBFN9DPnWeiX1RX/YtAXqfx9/zmPG4mLiWp5yEjkqEg2Izj3qPaMlYfWWB
        yC0QrJ/0xOArnm1BKksBarpkV8KchxP94NbI/UCahxeWNvIW0f7mSveKHptufiZJ
        wYf/YMMF3ZH3VtxzKfDWKRH14Y8C+fjlY1aqLMcx3BRk5Oeoy5lEwIeP19f3s5Ns
        arTV9I8mTXndv3fi3ZupWCWfNWKqH7NGg1lGpwKBrg3t4UAXaYalsk1Y88hbBEMc
        5/M/UdI9lY/nsRfkBh/N0Vy3ZYmVE75+aqJgkUHob1Rd5zz4qyLWqTyEMcCkENgD
        PnMxWMfyz1GGMKEo/LLGO0DUl9O5I80Wd/g4rsKkbD/EVQUWNzlf7iuN5m7C8Qcp
        gVW8uCPc46bBq001QMbgqDkNLltUL8Mrmq4eb73WQzOn3osPNQjH+tVOefTGNsMe
        XI5gAMSqAI4QqXxSxwKBrhIJWZplvCzXu/SDg8X7tn4Nx+0OMcaewc+hRsgN0WjC
        pwV+05SvtP3Swyr6QrTvFH7ZPJF0keIc/7ydWWP5o1okp+OtU+loiiaBORP2V/CN
        37ub48DowZ8HTSoBwSjkFSSbOm2oRlWBkPwErCHy6yuz1z+ba1a5ShwMWwjZfG3P
        39rlZG3NC+v1ujE428pc9Ky2CNqHlM3TyREz2z7R3kZK4sMB7g/yHHZZCZZwWQKB
        rgnJ3Fw017SGpqlSVGa9B16+ZoX7Pl2XZ44sTLg0RtV8xp74RoOL3sckgX1AjXOa
        ivnnz4N6YJFn9qAPagMtiKS0iuNaj0Bb8rMgsPXgHsznH2asv1FLLsyF+KLX+n/Q
        Gj4pk3GyrfZE4tN6sa+ukMDuuvPsXh7dsKFUQjRMswvPfogxKh2GKNZnwxiPTQlE
        FA+t7WcdtbBJEI1ry6pmzL8LjBGFh6Ssrx0mumQiqwKBrggumK8ichOOwew7AkHm
        FeGfcGlNPZejLDExoXB0k9jqFifyEjqwWsimQJhr2sYGloAXz50RQWbAGk9chZfC
        T6/QXCrn5v3cAV+kYaGklXVga3JFm9LEP4qiS6uay0nKW8XZx8uy5jzIwVjWmnxw
        uP0wwwIIeOfasuPdIyGaPOtzfcMcUtWSXjNpcbFWEfFgxOp3mceiK0UUKOVYskGS
        yjxNFxKqwrYc+P8UIdiXFw==
        -----END RSA PRIVATE KEY-----
      termination: edge
    to:
      kind: Service
      name: request-logger
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-04-20T15:42:44Z
        status: "True"
        type: Admitted
      host: prod-lowcarbonfuels.pathfinder.bcgov
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes and load balances the application pods
      service.alpha.openshift.io/dependencies: '[{"name": "postgresql", "kind": "Service"}]'
    creationTimestamp: null
    labels:
      template: tfrs-app-environment
    name: backend
  spec:
    ports:
    - name: web
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: tfrs
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes and load balances the front end pods
    creationTimestamp: null
    labels:
      template: tfrs-app-environment
    name: client
  spec:
    ports:
    - name: web
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: client
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: glusterfs-cluster-app
  spec:
    ports:
    - port: 1
      protocol: TCP
      targetPort: 1
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      gluster.kubernetes.io/provisioned-for-pvc: postgresql-backup-cns
    name: glusterfs-dynamic-postgresql-backup-cns
  spec:
    ports:
    - port: 1
      protocol: TCP
      targetPort: 1
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      gluster.kubernetes.io/provisioned-for-pvc: postgresql-cns
    name: glusterfs-dynamic-postgresql-cns
  spec:
    ports:
    - port: 1
      protocol: TCP
      targetPort: 1
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: postgresql-persistent
      template: postgresql-persistent-template
    name: postgresql
  spec:
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      name: postgresql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: request-logger
    name: request-logger
  spec:
    ports:
    - name: 8080-8080
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: request-logger
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes and load balances the application pods
    creationTimestamp: null
    name: schema-spy
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: schema-spy
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicationController","namespace":"mem-tfrs-prod","name":"client-46","uid":"e8c3f823-4410-11e8-9a98-0050568348cc","apiVersion":"v1","resourceVersion":"428987357"}}
      openshift.io/deployment-config.latest-version: "46"
      openshift.io/deployment-config.name: client
      openshift.io/deployment.name: client-46
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: client-46-
    labels:
      deployment: client-46
      deploymentconfig: client
      name: client
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: client-46
      uid: e8c3f823-4410-11e8-9a98-0050568348cc
  spec:
    containers:
    - env:
      - name: API_URL
        value: http://backend-mem-tfrs-prod.pathfinder.gov.bc.ca/api/
      - name: RealIpFrom
      - name: AdditionalRealIpFromRules
      - name: IpFilterRules
      - name: HTTP_BASIC
      - name: API_URL
        value: http://backend.mem-tfrs-prod.svc.cluster.local:8080/api/
      image: 172.50.0.2:5000/mem-tfrs-tools/client@sha256:4da7ec032027f2ef07ac088b347a65072e06bc8b57a5af97f1112c93617bb8bc
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      name: client
      ports:
      - containerPort: 3000
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: "1"
          memory: 4Gi
        requests:
          cpu: 100m
          memory: 256Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        runAsUser: 1000280000
        seLinuxOptions:
          level: s0:c17,c4
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-p2mgj
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-int0v
    nodeName: ociopf-p-188.dmz
    nodeSelector:
      region: app
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000280000
      seLinuxOptions:
        level: s0:c17,c4
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - name: default-token-p2mgj
      secret:
        defaultMode: 420
        secretName: default-token-p2mgj
  status:
    phase: Pending
    qosClass: Burstable
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicationController","namespace":"mem-tfrs-prod","name":"postgresql-11","uid":"b5cf16d3-39ec-11e8-9413-0050568379a2","apiVersion":"v1","resourceVersion":"407359705"}}
      kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu limit for container
        postgresql'
      openshift.io/deployment-config.latest-version: "11"
      openshift.io/deployment-config.name: postgresql
      openshift.io/deployment.name: postgresql-11
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: postgresql-11-
    labels:
      deployment: postgresql-11
      deploymentconfig: postgresql
      name: postgresql
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: postgresql-11
      uid: b5cf16d3-39ec-11e8-9413-0050568379a2
  spec:
    containers:
    - env:
      - name: POSTGRESQL_DATABASE
        value: tfrs
      - name: POSTGRESQL_USER
        valueFrom:
          secretKeyRef:
            key: DATABASE_USER
            name: tfrs-postgresql
      - name: POSTGRESQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: DATABASE_PASSWORD
            name: tfrs-postgresql
      image: registry.access.redhat.com/rhscl/postgresql-95-rhel7@sha256:f90b4ce7c2328e2f38d01e37b3a69cf60f06433df907ecb9432b0934af9624ed
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 5432
        timeoutSeconds: 1
      name: postgresql
      ports:
      - containerPort: 5432
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/sh
          - -i
          - -c
          - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT
            1'
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 4Gi
        requests:
          cpu: 100m
          memory: 256Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        runAsUser: 1000280000
        seLinuxOptions:
          level: s0:c17,c4
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/pgsql/data
        name: postgresql-data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-p2mgj
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-int0v
    nodeName: ociopf-p-194.dmz
    nodeSelector:
      region: app
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000280000
      seLinuxOptions:
        level: s0:c17,c4
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - name: postgresql-data
      persistentVolumeClaim:
        claimName: postgresql-cns
    - name: default-token-p2mgj
      secret:
        defaultMode: 420
        secretName: default-token-p2mgj
  status:
    phase: Pending
    qosClass: Burstable
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicationController","namespace":"mem-tfrs-prod","name":"request-logger-3","uid":"f7e390df-44de-11e8-8974-0050568348cc","apiVersion":"v1","resourceVersion":"430957450"}}
      openshift.io/deployment-config.latest-version: "3"
      openshift.io/deployment-config.name: request-logger
      openshift.io/deployment.name: request-logger-3
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: request-logger-3-
    labels:
      app: request-logger
      deployment: request-logger-3
      deploymentconfig: request-logger
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: request-logger-3
      uid: f7e390df-44de-11e8-8974-0050568348cc
  spec:
    containers:
    - image: 172.50.0.2:5000/mem-tfrs-tools/request-logger@sha256:bd2071b048447812c46073e247953b7747240033765e60c9ebf3604060566403
      imagePullPolicy: Always
      name: request-logger
      ports:
      - containerPort: 8080
        protocol: TCP
      resources:
        limits:
          cpu: 250m
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        runAsUser: 1000280000
        seLinuxOptions:
          level: s0:c17,c4
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app-root/src
        name: volume-8g9sa
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-p2mgj
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-int0v
    nodeName: ociopf-p-190.dmz
    nodeSelector:
      region: app
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000280000
      seLinuxOptions:
        level: s0:c17,c4
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: reques_logger.py
          path: request_logger.py
        name: reques-logger
      name: volume-8g9sa
    - name: default-token-p2mgj
      secret:
        defaultMode: 420
        secretName: default-token-p2mgj
  status:
    phase: Pending
    qosClass: Guaranteed
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicationController","namespace":"mem-tfrs-prod","name":"schema-spy-7","uid":"5869f9b1-39e2-11e8-9413-0050568379a2","apiVersion":"v1","resourceVersion":"407250953"}}
      openshift.io/deployment-config.latest-version: "7"
      openshift.io/deployment-config.name: schema-spy
      openshift.io/deployment.name: schema-spy-7
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: schema-spy-7-
    labels:
      deployment: schema-spy-7
      deploymentconfig: schema-spy
      name: schema-spy
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: schema-spy-7
      uid: 5869f9b1-39e2-11e8-9413-0050568379a2
  spec:
    containers:
    - env:
      - name: DATABASE_SERVICE_NAME
        value: postgresql
      - name: POSTGRESQL_DATABASE
        value: tfrs
      - name: POSTGRESQL_USER
        valueFrom:
          secretKeyRef:
            key: DATABASE_USER
            name: tfrs-postgresql
      - name: POSTGRESQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: DATABASE_PASSWORD
            name: tfrs-postgresql
      image: 172.50.0.2:5000/mem-tfrs-tools/schema-spy@sha256:7a420819e019200ec98ebebe06388872f2f72f37baa7c64162a4a4d4909bcfbf
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3000
      name: schema-spy
      ports:
      - containerPort: 8080
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3000
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 500m
          memory: 256Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        runAsUser: 1000280000
        seLinuxOptions:
          level: s0:c17,c4
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-p2mgj
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-int0v
    nodeName: ociopf-p-184.dmz
    nodeSelector:
      region: app
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000280000
      seLinuxOptions:
        level: s0:c17,c4
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - name: default-token-p2mgj
      secret:
        defaultMode: 420
        secretName: default-token-p2mgj
  status:
    phase: Pending
    qosClass: Burstable
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/created-by: |
        {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicationController","namespace":"mem-tfrs-prod","name":"tfrs-72","uid":"b32cd006-4410-11e8-9a98-0050568348cc","apiVersion":"v1","resourceVersion":"428984750"}}
      openshift.io/deployment-config.latest-version: "72"
      openshift.io/deployment-config.name: tfrs
      openshift.io/deployment.name: tfrs-72
      openshift.io/scc: restricted
    creationTimestamp: null
    generateName: tfrs-72-
    labels:
      deployment: tfrs-72
      deploymentconfig: tfrs
      name: tfrs
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicationController
      name: tfrs-72
      uid: b32cd006-4410-11e8-9a98-0050568348cc
  spec:
    containers:
    - env:
      - name: DATABASE_SERVICE_NAME
        value: postgresql
      - name: DATABASE_ENGINE
        value: postgresql
      - name: DATABASE_NAME
        value: tfrs
      - name: APP_CONFIG
        value: /opt/app-root/src/gunicorn.cfg
      - name: DATABASE_USER
        valueFrom:
          secretKeyRef:
            key: DATABASE_USER
            name: tfrs-postgresql
      - name: DATABASE_PASSWORD
        valueFrom:
          secretKeyRef:
            key: DATABASE_PASSWORD
            name: tfrs-postgresql
      image: 172.50.0.2:5000/mem-tfrs-tools/tfrs@sha256:0618d56334a7ae915f0156d61a96f350115f134ed5504a9e24e9eed064758847
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      name: tfrs-app
      ports:
      - containerPort: 8080
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: "1"
          memory: 4Gi
        requests:
          cpu: 100m
          memory: 256Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        runAsUser: 1000280000
        seLinuxOptions:
          level: s0:c17,c4
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-p2mgj
        readOnly: true
    dnsPolicy: ClusterFirst
    imagePullSecrets:
    - name: default-dockercfg-int0v
    nodeName: ociopf-p-188.dmz
    nodeSelector:
      region: app
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000280000
      seLinuxOptions:
        level: s0:c17,c4
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    volumes:
    - name: default-token-p2mgj
      secret:
        defaultMode: 420
        secretName: default-token-p2mgj
  status:
    phase: Pending
    qosClass: Burstable
kind: List
metadata: {}
